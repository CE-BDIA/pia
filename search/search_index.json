{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Programaci\u00f3 d'intel\u00b7lig\u00e8ncia artificial","text":""},{"location":"#curs-despecialitzacio-en-intelligencia-artificial-i-big-data","title":"Curs d'Especialitzaci\u00f3 en Intel\u00b7lig\u00e8ncia Artificial i Big Data","text":""},{"location":"#2024-2025","title":"2024 - 2025","text":"<p>Professors:</p> <ul> <li>Joan Gerard Camarena Estruch</li> <li>Ferran Cunyat Pellicer</li> </ul>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/","title":"1. Algorismes i llenguatges","text":"<p>Per a comen\u00e7ar amb aquest curs, cal repassar algunes consideracions molt b\u00e0siques (i molt r\u00e0pidament) de conceptes que tenim que tindre molt clars. </p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#11-programa-i-programacio","title":"1.1 Programa i programaci\u00f3","text":"Definicions b\u00e0siques <ul> <li>El client \u00e9s qui diu les seues necessitats. </li> <li>Un analista \u00e9s aquella persona que s'encarrega de especificar qu\u00e9 ha de fer el programa, a partir del requisits que li ha dit el client .</li> <li>Un dissenyador \u00e9s aquell que perfila l'algorisme a seguir per a solucionar els requeriments del client.</li> <li>Un programador/a \u00e9s aquella persona que s'encarrega de codificar programes, segons l'algorisme dissenyat.</li> <li>Usuari/a \u00e9s el terme que s\u2019utilitza per referir-se a la persona que fa servir una aplicaci\u00f3 inform\u00e0tica amb la intenci\u00f3 d\u2019aconseguir un resultat final. La persona que treballar\u00e0 amb el programa final.</li> </ul> <p>Tenint els rols clars de qu\u00ed \u00e9s qu\u00ed,</p> M\u00e9s definicions <ul> <li>Un algorisme \u00e9s un m\u00e8tode de resoluci\u00f3 d\u2019un problema en un nombre finit de passos. Exemple: com es fa una truita a la francesa?</li> <li>A partir d'ell.. el programa \u00e9s l\u2019expressi\u00f3 d\u2019un algorisme en un llenguatge entenedor per l\u2019ordinador. </li> <li>La programaci\u00f3 \u00e9s la seq\u00fc\u00e8ncia de passos que ha d\u2019efectuar el/la programador/a per obtenir un programa.</li> <li>Una aplicaci\u00f3 inform\u00e0tica \u00e9s un conjunt de programes enlla\u00e7ats de manera convenient, per exemple un client i un servidor.</li> <li>Els programes manipularan unes dades d'entrada per a produ\u00efr altres de sortida</li> </ul> <p></p> <p>No anem a entrar m\u00e9s en detalls sobre els programes, sobre les fases, etc. Podeu veure un interesant infogracfia en aquest enlla\u00e7</p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#12-algorisme-vs-programa","title":"1.2 Algorisme vs Programa","text":"<p>Hem parlat que necessitem un algorisme per a resoldre un problema, pero a m\u00e9s a m\u00e9s el volem resoldre amb un llenguatge de programaci\u00f3. El problema \u00e9s que el llenguatge de programaci\u00f3 sol ser una s\u00e8rie d'instruccions m\u00e9s o menys entendibles pel programador, i aix\u00f2 no ho enten el processador sobre el que s'executa el programa. Es necessita un proc\u00e9s de traducci\u00f3 entre el llenguatge de programaci\u00f3 (text) i el llenguante m\u00e0quina (emmetxador o binari directament) que \u00e9s el que enten el processador.</p> <p>Atesos a la proximitat del processador, distinguim entre:</p> <p></p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#121-llenguatge-compilat","title":"1.2.1 Llenguatge compilat","text":"<p>Els llenguatges compilats s\u00f3n aquells que es realitza una traducci\u00f3 total de les instruccions que formen el programa.</p> <p></p> <p>Els grans exemples de llenguatges compilats s\u00f3n C i C++. En dits llenguatges a partir del codi font (fitxer de text) es crea el fitxer executable, que ja pot llan\u00e7ar-se de manera independent.</p> <p>Aquest llenguatges no son portables, ja que sols funcionen en la m\u00e0quina a la qual es compila. Necessitem compiladors d'aquest llenguatges per a diverses m\u00e0quines i sistemes operatius.</p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#122-llenguatge-interpretat","title":"1.2.2 Llenguatge interpretat","text":"<p>Els llenguatges interpretats realitzen traduccions parcials de cada linia o bloc de codi font i van execunat-lo poc a poc (traduisc-execute i anem repetint). Aquest llenguatges requereixen un int\u00e8rpret que \u00e9s qui fa eixa execuci\u00f3. El gran representant d'aquest llenguatge \u00e9s <code>Python</code>. </p> <p></p> <p>Aquest llenguatges son molt portables, ja que aquest codi permet ser executat per qualssevol m\u00e0quina, sempre que tinga l'int\u00e8rpret instal\u00b7lat al seu sistema.</p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#123-llenguatges-mixtes","title":"1.2.3 Llenguatges mixtes","text":"<p>Hi han llenguatges intermedis, que fan un primer pas de compilaci\u00f3, el resutat del qual s\u00f3n unes instruccions que permet ser executades per un int\u00e8rpret. El gran representant \u00e9s el llenguatje <code>Java</code>.</p> <p></p> <p></p>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/01_Algorismes_Llenguatges/#13-llenguatges-segons-el-sei-us","title":"1.3 Llenguatges segons el sei \u00fas","text":"<p>Depenent de la destinaci\u00f3 dels programes, hem d'escollir uns o altres llengutges de programaci\u00f3. Anem a veure una xicoteta classificaci\u00f3 de per a que podem fer servir cada llenguatge:</p> <ul> <li><code>C</code> \u2192 llenguatge molt potent. Hui en dia es fa servir per a programar sistemes operatius i microcontroladores, per \u00e9l seu acc\u00e9s a baix nivell. Tamb\u00e9 es fa servir per a programar llibreries que faran servir altres llenguatges com per exemple <code>Python</code>.</li> <li><code>Java</code> \u2192 llenguatge pensat per a la creaci\u00f3 de programes de prop\u00f2sit general, amb acc\u00e8s a bases de dades i servidors. Tamb\u00e9 permet la programaci\u00f3 de dispositius d'oci.</li> <li><code>Python</code> \u2192 llenguatge de prop\u00f2sit general, amb una gran col\u00b7lecci\u00f3 de llibreries que permeten desenvolupar programes de qualsevol naturalesa. Es fa servir molt per a IA, fent servir llibreries programades en C, com hem comentat abans</li> <li><code>node o javascript</code> \u2192 llenguatge pensat per a la programaci\u00f3 de servidors r\u00e0pid i escalable. S'integra molt be amb els navegadors web.</li> <li><code>php</code> \u2192 llenguatge pensat per a la programaci\u00f3 de servidors.</li> <li><code>R</code> \u2192 llenguatge pensant per a l'an\u00e0lisi de dades i big data, aix\u00ed com representaci\u00f3 de la informaci\u00f3</li> <li><code>Kotlin</code> \u2192 llenguatge que permet combinar i incloure codi Java. Actualment pensat pera desenvolupament en Android.</li> </ul>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/Continguts/","title":"Continguts","text":"<p>En aquesta unitat s'estudiar\u00e0:</p> <ul> <li>Llenguatge de programaci\u00f3</li> <li>Algorisme</li> <li>Compilat vs Implementat</li> <li>Comparativa de llenguatges</li> <li>...</li> </ul>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/Exercici/","title":"2. Exercici pr\u00e0ctic","text":""},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/Exercici/#1-proves-de-rendiment","title":"1. Proves de rendiment","text":"<p>En aquesta pr\u00e0ctica anem a fer una prova de rendiment de 3 llenguatges de programaci\u00f3, un compilat com \u00e9s C, un interpretatm com \u00e9s Python i un mixte com \u00e9s Java. </p> <p>Tots els programes en q\u00fcesti\u00f3 fa la multiplicaci\u00f3 de 2 matrius de 2048x2048 elements, amb un total de 8,589,934,592 operacions, combinant multiplicacions i sumes.</p> <p>Per  la realitzaci\u00f3 del exercici necessitar\u00e0s:</p> <ul> <li>Tenir instal\u00b7lat el compilador de C (per defecte a ubuntu)</li> <li>Tenir instal\u00b7lat un jdk</li> <li>Tenir instal\u00b7lat Python i la llibreria <code>numpy</code></li> </ul> <p>\u00c9s</p> Codi en C C<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n\n#define n 2048\n\ndouble A[n][n];\ndouble B[n][n];\ndouble C[n][n];\n\nint main() {\n\n    //populate the matrices with random values between 0.0 and 1.0\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n; j++) {\n\n            A[i][j] = (double) rand() / (double) RAND_MAX;\n            B[i][j] = (double) rand() / (double) RAND_MAX;\n            C[i][j] = 0;\n        }\n    }\n\n    struct timespec start, end;\n    double time_spent;\n\n    //matrix multiplication\n    clock_gettime(CLOCK_REALTIME, &amp;start);\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            for (int k = 0; k &lt; n; k++) {\n                C[i][j] += A[i][k] * B[k][j];\n            }\n        }\n    }\n    clock_gettime(CLOCK_REALTIME, &amp;end);\n    time_spent = (end.tv_sec - start.tv_sec) + (end.tv_nsec - start.tv_nsec) / 1000000000.0;\n    printf(\"Elapsed time in seconds: %f \\n\", time_spent);\n    return 0;\n}\n</code></pre> Codi en Python Python<pre><code>import random\nimport time\n\nn = 2048\n\n#populate the matrices with random values between 0.0 and 1.0\nA = [[random.random() for row in range(n)] for col in range(n)]\nB = [[random.random() for row in range(n)] for col in range(n)]\nC = [[0 for row in range(n)] for col in range(n)]\n\nstart = time.time()\n#matrix multiplication\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            C[i][j] += A[i][k] * B[k][j]\n\nend = time.time()\nprint(\"Elapsed time in seconds %0.6f\" % (end-start))\n</code></pre> Codi en Java Java<pre><code>import java.util.Random;\n\npublic class Matrix{\n    static int n = 2048;\n    static double[][] A = new double[n][n];\n    static double[][] B = new double[n][n];\n    static double[][] C = new double[n][n];\n\n    public static void main(String[] args) {\n        //populate the matrices with random values between 0.0 and 1.0\n        Random r = new Random();\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                A[i][j] = r.nextDouble();\n                B[i][j] = r.nextDouble();\n                C[i][j] = 0;\n            }\n        }\n\n        long start = System.nanoTime();\n        //matrix multiplication\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                for (int k = 0; k &lt; n; k++) {\n                    C[i][j] += A[i][k] * B[k][j];\n                }\n            }\n        }\n\n        long stop = System.nanoTime();\n        double timeDiff = (stop - start) * 1e-9;\n        System.out.println(\"Elapsed time in seconds: \" + timeDiff);\n    }\n}\n</code></pre>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/Exercici/#2-compilacio-i-llanacament-dels-programes","title":"2. Compilaci\u00f3 i llana\u00e7ament dels programes","text":"<ol> <li>Compila cada programa (que dega ser compilat) </li> <li>Executa  5 cops cada programa. </li> <li>Anota-ho a un full de c\u00e0lcul, per treure una estad\u00edstica.</li> </ol> Compilaci\u00f3 i execuci\u00f3 dels programes Bash<pre><code>#C\ngcc MatrixMultiplication.c -o matrix\n./matrix\n#Java\njavac MatrixMultiplication.java\njava MatrixMultiplication\n#Python\npython MatrixMultiplication.py\n</code></pre> <ol> <li>Veuras un resultat sorprenenet. Recompila els programes de C aix\u00ed</li> </ol> Compilaci\u00f3  optimizada amb C Bash<pre><code>gcc -O2 MatrixMultiplication.c -o matrixO2\n./matrix02\ngcc -O3 MatrixMultiplication.c -o matrixO2\n./matrix03\n</code></pre>"},{"location":"U01%20Introducci%C3%B3%20a%20la%20programaci%C3%B3/Exercici/#3-llibreria-dalt-rendiment-numpy","title":"3. Llibreria d'alt rendiment: <code>numpy</code>","text":"<p>Repeteix la prova amb el seg\u00fcent program:</p> C\u00e0lcul amb la llibreri <code>numpy</code> Python<pre><code>import numpy as np\nimport time\n\n\nTAM=2048\n\n#matriu = [[np.random.rand() for j in range(TAM)] for i in range(TAM)]\n\nm1 = np.random.rand(TAM,TAM)\nm2 = np.random.rand(TAM,TAM)\ndesti = np.zeros((TAM,TAM),dtype=float)\n\nstart = time.time()\nnova=np.dot(m1,m2)\nend = time.time()\nprint(\"Amb np: Elapsed time in seconds %0.6f\" % (end-start))\n\n\nstart = time.time()\n#matrix multiplication\nfor i in range(TAM):\n    for j in range(TAM):\n        for k in range(TAM):\n            desti[i][j] += m1[i][k] * m2[k][j]\nend = time.time()\nprint(\"Sense np: Elapsed time in seconds %0.6f\" % (end-start))\n</code></pre>"},{"location":"U02%20Python/","title":"Index","text":"<p>Unitat 2. El llenguatge de programaci\u00f3 Python</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/","title":"1. Preparaci\u00f3 de l'entorn","text":""},{"location":"U02%20Python/01_Entorns_i_projectes/#1-preparant-lentorn-en-python","title":"1. Preparant l'Entorn en Python","text":"<p>Abans de comen\u00e7ar a programar en Python hem de preparar la nostra m\u00e0quina per a tal tasca. Est\u00e0 clar que podem tenir un superordenador i instal\u00b7lar tot al complet, per\u00f2 al poc de temps ens adoanrem que perdrem el control del que tenim. Varies versions dels int\u00e8rprets de Python (2 o 3) i dins de la 3, 3.7, 3.9, etc... Adem\u00e9s tenim tota la col\u00b7lecci\u00f3 de llibreries que podem instal\u00b7lar amb <code>pip</code> per a fer-les servir al nostre programa. Espai i m\u00e9s espai.. versions i m\u00e9s versions.</p> <p>Per a evitar aquestes instal\u00b7lacions massives de incloure-ho tot, ens ajuden els gestors de depend\u00e8ncies, com els que ja coneixereu <code>Maven</code>, <code>Ant</code>, <code>Gradle</code> per a <code>Java</code>, per exemple el Node Package Manager de <code>node.js</code>. Els gestors de dependencies ens permeten crear una mena d'entorns a\u00efllats on podem indicar quines llibreries i depend\u00e8ncies ens calen per al nostre projecte. Aquestes llibreries no depenen del sistema anfitri\u00f3, i a m\u00e9s a m\u00e9s, permeten una exportaci\u00f3 f\u00e0cil, ja que no hem de copiar ni d'exportar les llibreries, ja que al dest\u00ed s'agafaran de nou.</p> <p>En resum, els entorns virtuals ens permeten:</p> <ul> <li>Organitzar i tindre millor controlades totes les llibreries</li> <li>Estabilitat, ja que sempre tenim la llibreria exacta del nostre entorn i no la de la m\u00e0quina real</li> <li>Version distintes </li> </ul> <p>Atenci\u00f3</p> <p>Recomanem per tant, crear un entorn virtual per a cadascun dels projectes que desenvoluparem.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#2-installacio-de-python-3","title":"2. Instal\u00b7laci\u00f3 de Python 3","text":""},{"location":"U02%20Python/01_Entorns_i_projectes/#21-installar-python-3","title":"2.1. Instal\u00b7lar Python 3","text":"<p>Abans de comen\u00e7ar a treballar amb venv, assegura't de tenir Python 3 instal\u00b7lat al teu ordinador. Aqu\u00ed tens els passos per instal\u00b7lar-lo segons el sistema operatiu.</p> WindowsmacOSLinux (Ubuntu/Debian) <ol> <li>Ves a https://www.python.org/downloads/ i descarrega l'\u00faltima versi\u00f3 de Python 3.</li> <li>Durant la instal\u00b7laci\u00f3, assegura't de seleccionar l'opci\u00f3 \"Add Python to PATH\".</li> <li>Un cop instal\u00b7lat, obre un terminal i comprova la versi\u00f3 amb:    Bash<pre><code>python --version\n</code></pre></li> </ol> <ol> <li>Si tens <code>Homebrew</code> instal\u00b7lat, pots instal\u00b7lar Python 3 amb:    Bash<pre><code>brew install python\n</code></pre></li> <li>Despr\u00e9s de la instal\u00b7laci\u00f3, comprova que funciona:    Bash<pre><code>python3 --version\n</code></pre></li> </ol> <ol> <li>Obre el terminal i executa:    Bash<pre><code>sudo apt update\nsudo apt install python3 python3-venv python3-pip\n</code></pre></li> <li>Comprova la instal\u00b7laci\u00f3 amb:    Bash<pre><code>python3 --version\n</code></pre></li> </ol>"},{"location":"U02%20Python/01_Entorns_i_projectes/#22-introduccio-a-venv-creacio-dentorns-virtuals-a-python","title":"2.2. Introducci\u00f3 a venv: Creaci\u00f3 d'entorns virtuals a Python","text":""},{"location":"U02%20Python/01_Entorns_i_projectes/#221-que-es-un-entorn-virtual","title":"2.2.1. Qu\u00e8 \u00e9s un entorn virtual?","text":"<p>Un entorn virtual \u00e9s una carpeta especial que cont\u00e9 una c\u00f2pia de Python i de totes les biblioteques que utilitzarem en un projecte. D'aquesta manera, mantenim els nostres projectes a\u00efllats, evitant problemes de compatibilitat entre versions de Python i biblioteques.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#222-com-crear-un-entorn-virtual-amb-venv","title":"2.2.2. Com crear un entorn virtual amb venv","text":"<ol> <li>Crear l'entorn virtual:</li> </ol> <p>Navega fins a la carpeta del projecte i crea l'entorn virtual amb:    Bash<pre><code>python3 -m venv nom_entorn\n</code></pre></p> <p><code>nom_entorn</code> \u00e9s el nom que donar\u00e0s a l'entorn (pots posar, per exemple, <code>.venv</code> o <code>env</code>).</p> <ol> <li>Activar l'entorn virtual:</li> </ol> WindowsmacOS/Linux Bash<pre><code>.\\nom_entorn\\Scripts\\activate\n</code></pre> <p>File cannot be loaded because running scripts is disabled on this system.</p> <p>Si apareix un error semblant a aquest, has de canviar la pol\u00edtica de seguretat de Windows per a que deixe executar Scripts:</p> <ul> <li>Obre PowerShell com a Administrador.</li> <li>Executa la seg\u00fcent ordre per permetre l'execuci\u00f3 d'scripts:     PowerShell<pre><code>Set-ExecutionPolicy RemoteSigned\n</code></pre></li> <li>Quan et pregunten si vols canviar la pol\u00edtica, respon amb Y (Yes).</li> <li>Tanca la finestra de PowerShell i obre'n una de nova per aplicar el canvi.</li> </ul> Bash<pre><code>source nom_entorn/bin/activate\n</code></pre> <p>Quan l'entorn estigui actiu, veur\u00e0s el nom de l'entorn entre par\u00e8ntesis abans del teu prompt.</p> <ol> <li> <p>Instal\u00b7lar paquets dins l'entorn:</p> <p>Ara que tens l'entorn activat, pots instal\u00b7lar paquets amb <code>pip</code> que nom\u00e9s s'instal\u00b7laran dins l'entorn: Bash<pre><code>pip install nom_del_paquet\n</code></pre></p> </li> <li> <p>Desactivar l'entorn virtual:</p> <p>Quan hagis acabat de treballar, pots desactivar l'entorn amb: Bash<pre><code>deactivate\n</code></pre></p> </li> </ol>"},{"location":"U02%20Python/01_Entorns_i_projectes/#223-beneficis-dutilitzar-entorns-virtuals","title":"2.2.3. Beneficis d'utilitzar entorns virtuals:","text":"<ul> <li>Separar les depend\u00e8ncies entre projectes.</li> <li>Evitar problemes de compatibilitat entre versions de Python i paquets.</li> <li>Facilitar la reproducci\u00f3 d'entorns en altres m\u00e0quines.</li> </ul>"},{"location":"U02%20Python/01_Entorns_i_projectes/#224-exemple-practic","title":"2.2.4. Exemple pr\u00e0ctic:","text":"<ol> <li> <p>Crear un projecte nou:    Bash<pre><code>mkdir projecte\ncd projecte\npython3 -m venv env\n</code></pre></p> </li> <li> <p>Activar l'entorn:    Bash<pre><code>source env/bin/activate  # O \\env\\Scripts\\activate a Windows\n</code></pre></p> </li> <li> <p>Instal\u00b7lar un paquet, com ara <code>requests</code>:    Bash<pre><code>pip install requests\n</code></pre></p> </li> <li> <p>Desactivar l'entorn quan acabis:    Bash<pre><code>deactivate\n</code></pre></p> </li> </ol>"},{"location":"U02%20Python/01_Entorns_i_projectes/#3-jupyter-notebooks","title":"3. Jupyter notebooks","text":"<p>Els Jupyter Notebooks s\u00f3n una eina fonamental en el m\u00f3n de la programaci\u00f3 i la ci\u00e8ncia de dades que ha revolucionat la manera en qu\u00e8 els professionals treballen i col\u00b7laboren en l'an\u00e0lisi de dades, el desenvolupament de programari i la recerca cient\u00edfica. Aquesta plataforma, que es va originar com a derivaci\u00f3 del projecte <code>IPython</code>, ofereix un entorn interactiu que combina codi, text, imatges i gr\u00e0fics en un \u00fanic document web, permetent als usuaris crear i compartir continguts din\u00e0mics i ben documentats.</p> <p>Un dels elements m\u00e9s destacats dels Jupyter Notebooks \u00e9s la seva capacitat d'integrar codi executable (Python) amb text explicatiu (Markdown), la qual cosa facilita la creaci\u00f3 de documents que expliquen i demostren pas a pas els processos anal\u00edtics i els resultats obtinguts. Aquesta funcionalitat fa que sigui una eina ideal per a cient\u00edfics de dades, enginyers, estudiants i professionals que volen comunicar les seves idees i resultats de manera clara i efectiva.</p> <p>A m\u00e9s de ser utilitzats per a l'exploraci\u00f3 de dades i l'an\u00e0lisi estad\u00edstica, els Jupyter Notebooks tamb\u00e9 s\u00f3n \u00e0mpliament emprats en l'aprenentatge de programaci\u00f3 i la doc\u00e8ncia, ja que permeten als estudiants escriure, provar i comprendre el codi en un entorn interactiu i amigable.</p> <p>Per comen\u00e7ar a desenvolupar amb Jupyter Notebooks, haur\u00e0s d'instal\u00b7lar algunes eines i depend\u00e8ncies al teu sistema. Aqu\u00ed tens els passos b\u00e0sics per a la instal\u00b7laci\u00f3:</p> <ol> <li> <p>Python: Els Jupyter Notebooks s\u00f3n m\u00e9s comunsment utilitzats amb Python. Assegura't de tenir Python instal\u00b7lat al teu sistema. \u00c9s recomanable utilitzar Python 3, ja que Python 2 ja no rep suport.</p> </li> <li> <p>Gestor de paquets de Python: Si no ho tens ja instal\u00b7lat, \u00e9s aconsellable utilitzar un gestor de paquets de Python com <code>pip</code> o <code>conda</code>. Aquestes eines et permetran instal\u00b7lar i gestionar les llibreries i paquets necessaris.</p> </li> <li> <p>Jupyter Notebook: Pots instal\u00b7lar Jupyter Notebook executant la seg\u00fcent comanda a la terminal utilitzant <code>pip</code>:</p> </li> </ol> Text Only<pre><code>pip install notebook\n</code></pre> <p>Si utilitzes l'entorn de conda, tamb\u00e9 pots instal\u00b7lar-lo amb:</p> Text Only<pre><code>conda install notebook\n</code></pre> <p>Un cop hagis instal\u00b7lat tots aquests components, ja est\u00e0s llest per comen\u00e7ar a treballar amb Jupyter Notebooks. Pots iniciar un servidor de Jupyter Notebook amb la comanda:</p> Text Only<pre><code>jupyter notebook\n</code></pre> <p>Aquesta comanda obrir\u00e0 el teu navegador web amb l'entorn de Jupyter Notebook, on podr\u00e0s crear nous fitxers de notebook, obrir-ne de existents i comen\u00e7ar a escriure codi i text interactius.</p> <p>Recordeu que potser tamb\u00e9 voldr\u00e0s utilitzar un entorn virtual (com <code>virtualenv</code> o <code>conda</code>) per gestionar les depend\u00e8ncies i els paquets espec\u00edfics del teu projecte, especialment si treballes en diversos projectes amb versions diferents de les llibreries.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#4-jupyter-i-visual-studio-code","title":"4. Jupyter i visual studio code","text":"<p>Si prefereixes utilitzar Visual Studio Code (VS Code) per desenvolupar amb Jupyter Notebooks, tamb\u00e9 pots fer-ho. VS Code \u00e9s una excel\u00b7lent opci\u00f3 per als desenvolupadors de Python i ofereix una integraci\u00f3 nativa amb Jupyter que facilita la creaci\u00f3 i l'execuci\u00f3 de notebooks. Aqu\u00ed tens com fer-ho:</p> <ol> <li> <p>Instal\u00b7la Visual Studio Code: Si encara no tens VS Code instal\u00b7lat, descarrega'l i instal\u00b7la'l des del lloc web oficial: Visual Studio Code.</p> </li> <li> <p>Instal\u00b7la l'extensi\u00f3 de Jupyter: Un cop hagis obert VS Code, ves a l'Explorador d'Extensions (Extensions Marketplace) fent clic a l'\u00edcona d'extensions a la barra lateral esquerra o amb <code>Ctrl+Shift+X</code>. Cerca \"Jupyter\" i instal\u00b7la l'extensi\u00f3 \"Python\" que ofereix Microsoft. Aquesta extensi\u00f3 proporciona suport complet per als Jupyter Notebooks.</p> </li> <li> <p>Crea o obre un Jupyter Notebook: Des de VS Code, pots crear un nou Jupyter Notebook fent clic a l'opci\u00f3 \"Create new Jupyter Notebook\" a la vista d'Explorer. Tamb\u00e9 pots obrir notebooks existents fent clic amb el bot\u00f3 dret sobre ells i seleccionant \"Open with Jupyter Notebook.\"</p> </li> <li> <p>Selecciona l'entorn de Python: VS Code permet gestionar entorns virtuals amb l'extensi\u00f3 \"Python\" i pots seleccionar l'entorn que vulguis utilitzar per al teu notebook.</p> </li> <li> <p>Desenvolupa amb Jupyter Notebooks: Un cop hagis creat o obert un notebook, podr\u00e0s escriure codi, text i afegir cel\u00b7les de manera similar a com ho faries amb l'entorn de Jupyter Notebook independent. Pots executar les cel\u00b7les mitjan\u00e7ant les opcions a la barra d'eines o amb atajos de teclat.</p> </li> <li> <p>Gestiona les extensions: VS Code ofereix moltes extensions \u00fatils per a la ci\u00e8ncia de dades i l'an\u00e0lisi de dades. Pots explorar i instal\u00b7lar extensions addicionals des de l'Explorador d'Extensions.</p> </li> </ol> <p>Aquesta integraci\u00f3 de Jupyter a Visual Studio Code ofereix una experi\u00e8ncia de desenvolupament completa i molt potent per als usuaris de Python que vulguin treballar amb notebooks i codi en un mateix entorn.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#5-google-colab","title":"5. Google Colab","text":"<p>Google Colab (abreviaci\u00f3 de Colaboratory) \u00e9s una plataforma en l\u00ednia que permet executar Jupyter Notebooks directament al n\u00favol, sense necessitat de configurar res al teu propi sistema. \u00c9s una excel\u00b7lent opci\u00f3 si vols treballar amb Jupyter Notebooks sense preocupar-te de la instal\u00b7laci\u00f3 d'entorns i llibreries al teu propi dispositiu. Aqu\u00ed tens com fer servir Google Colab:</p> <ol> <li> <p>Accedeix a Google Colab: Obre el teu navegador web i accedeix a Google Colab. Haur\u00e0s d'iniciar sessi\u00f3 amb el teu compte de Google si encara no ho has fet.</p> </li> <li> <p>Crea un nou notebook o importa-ne un: Pots crear un nou notebook fent clic a \"File\" &gt; \"New notebook\" o importar un notebook existent des del teu Google Drive o des d'un enlla\u00e7 a GitHub fent servir les opcions disponibles a la vista \"File\".</p> </li> <li> <p>Treballa amb el teu notebook: Un cop hagis creat o importat un notebook, pots escriure codi, text, i executar cel\u00b7les com ho faries amb un Jupyter Notebook convencional. Utilitza les cel\u00b7les de codi i text per a la teva an\u00e0lisi o projecte.</p> </li> <li> <p>Entorns i llibreries: Google Colab ofereix un entorn de Python pr\u00e8viament configurat que inclou moltes llibreries comunes per a la ci\u00e8ncia de dades (com NumPy, pandas, Matplotlib, etc.). Si necessites instal\u00b7lar altres llibreries, pots fer-ho executant comandes pip directament en una cel\u00b7la (per exemple, <code>!pip install numpy</code>).</p> </li> <li> <p>Guarda el teu treball: Pots desar el teu notebook a Google Drive o descarregar-lo localment mitjan\u00e7ant l'opci\u00f3 \"File\" &gt; \"Save\" o \"File\" &gt; \"Download .ipynb.\"</p> </li> <li> <p>Comparteix i col\u00b7labora: Google Colab et permet compartir els teus notebooks amb altres persones perqu\u00e8 puguin veure i editar el teu treball en temps real. Pots compartir mitjan\u00e7ant enlla\u00e7os o afegir col\u00b7laboradors directament a trav\u00e9s de les opcions de compartici\u00f3.</p> </li> </ol> <p>Google Colab \u00e9s una eina excel\u00b7lent per als projectes de ci\u00e8ncia de dades i l'aprenentatge autom\u00e0tic que es volen executar en un entorn de computaci\u00f3 m\u00e9s potent que el teu dispositiu local o per a la col\u00b7laboraci\u00f3 en l\u00ednia amb altres persones. \u00c9s una opci\u00f3 molt popular a la comunitat de la ci\u00e8ncia de dades i \u00e9s gratu\u00eft per a \u00fas personal.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#6-estructura-dun-programa-en-python","title":"6. Estructura d\u2019un programa en <code>Python</code>","text":"<p>Un programa en <code>Python</code> te una estructura molt simple, si ho comparm en altres llenguatges de programaci\u00f3; simplement hem d'escriure les nostres linies de codi i ja est\u00e0, per\u00f2 pot tenir m\u00e9s coses</p> <p>Qualsevol programa escrit en <code>Python</code> t\u00e9 la seg\u00fcent estructura: Text Only<pre><code>[Descripci\u00f3 del programa]\n[Directives]\n[Importaci\u00f3 de Libreria]\n[Definici\u00f3 de classes]\n[Funcions]\nEntrada de dades\nProcessament de dades\nSortidad de dades\n</code></pre></p> <p>Els claud\u00e0tors indiquen que eixos apartats s\u00f3n opcionals. Per tant, veiem que l\u2019\u00fanica part necess\u00e0ria en un programa \u00e9s l'entrada, el processament i la sortida de dades, com en qualssevol algorisme. Notar que en <code>Python</code> tots aquests poden canviar la posici\u00f3. Vejam uns exemples i els analitzem.</p> <p>El m\u00e9s simple, mostra un missatge per pantalla:</p> <p>Python<pre><code>print(\"Hola m\u00f3n\")\n</code></pre> Altre una mica m\u00e9s complet:</p> Python<pre><code># Programa que calcula el area de un rectangle\n# Autor: Joan Gerard Camarena\n# Data : 2019/07/11\nimport time\n\ndef areaRectangle(base,altura):\n    return base*altura\n\nbase=int(input(\"Dis-me la base del rectangle: \"))\naltura=int(input(\"Dis-me l'altura del rectangle: \"))\ntime.sleep(2)   # Espera dos segons\n\narea=areaRectangle(base,altura)\n\nprint(\"L'area del rectangle \u00e9s \" + str(area))\n</code></pre> <p>Comentaris:</p> <ul> <li>Les 3 primeres l\u00ednies sob una descripci\u00f3 del que fa el programa. Son comentaris, que no s'executen</li> <li>Al <code>import</code> indiquem que necessitem una llibreria. Aix\u00f2 es veur\u00e0 m\u00e9s endavant, per\u00f2 les llibreries s\u00f3n un conjunt de funcions que ja venen implementades i les podem fer servir als nostres programes. La funci\u00f3 que farem servir \u00e9s <code>time.sleep()</code> que fa que el programa es pause durant una quantitat de segons.</li> <li>Despr\u00e8s tenin la definici\u00f3 d'una funci\u00f3, que comen\u00e7a amb la paraula reservada <code>def</code>. Notar que tot el que pertany a la funci\u00f3 est\u00e0 indentat una tabulaci\u00f3 (al nostre cas sols la instrucci\u00f3 del <code>return</code>).</li> <li>Despr\u00e8s ja tenim el nostre programa pr\u00f2piament dit:</li> <li>Les l\u00ednies no tenen cap indentaci\u00f3 (pegades a l'esquerre)</li> <li>La primera part \u00e9s la que l'algorisme ha d'aconseguir la informaci\u00f3. En aquest cas a preguntem a l'usuari mitjan\u00e7ant <code>input</code>. </li> <li>La segona part  \u00e9s el fer el c\u00e0lcul. Pot veure's que es crida a la funci\u00f3 que hem definit anteriorment</li> <li>Finalment mostrem a l'usuari el resultat (<code>print</code>).</li> </ul>"},{"location":"U02%20Python/01_Entorns_i_projectes/#7-noms-i-paraules-reservades-en-python","title":"7. Noms i paraules reservades en <code>Python</code>","text":"<p>Nosaltres per a programar, com hem vist abans, li hem posat nom a les variables i funcions. Per a posar nom a les variables hem de complir unes regles, que tenen tots els llenguatges de programaci\u00f3:</p> <ol> <li>S\u00f3n una combinaci\u00f3 de lletres min\u00fascules [a..z], maj\u00fascules [A..Z], d\u00edgits [0..9] i el car\u00e0cter subratllat[_]. </li> <li>No poden comen\u00e7ar amb d\u00edgit.</li> <li>Poden contenir accents i altes car\u00e0cters (\u00f1,\u00e7,...)</li> <li>No poden ser paraules reservades o <code>keywords</code> del sistema (veure taula a continuaci\u00f3)</li> <li>No poden haver s\u00edmbols especials ni operadors [!, @, #, $, %, ...] etc. </li> <li>Poden tenir qualssevol longitud</li> </ol> <p>Paraules reservades:</p> False class finally is return None continue for lambda try True def from nonlocal while and del global not with as elif if or yield assert else import pass break except in raise <p>Existeixen algunes m\u00e9s, com els tipus de dades (<code>int</code>, <code>float</code>, <code>str</code>, <code>complex</code>, etc). La facilitat \u00e9s que els editors ens colorejen les paraules reservades, llavors sabrem que no les podem utilitzar per als nostres identificadors.</p> <p>Les variables s\u00f3n els llocs on es guarda la informaci\u00f3. Poden ser de distints tipus, segons el lloc on es fan servir i des d'on es poden accedir. Una primera distinci\u00f3 \u00e9s entre globals i locals:</p> <ul> <li>Les globals s\u00f3n aquelles que es creen fora de qualssevol funci\u00f3 i, per tant, s\u00f3n accessibles des de qualsevol punt del fitxer o programa.</li> <li>Les locals s\u00f3n les que es creen dins d\u2019alguna funci\u00f3 i, per tant, nom\u00e9s s\u00f3n accessibles des de les instruccions de dins d\u2019eixa funci\u00f3. Dins de una funci\u00f3 es pot accedir a les variables locals seues, aix\u00ed com a les variables globals</li> <li>Les variables de classe s\u00f3n com les variables locals a les funcions. S'estudiar\u00e0n dins de la POO</li> </ul>"},{"location":"U02%20Python/01_Entorns_i_projectes/#8-comentaris","title":"8. Comentaris","text":"<p>Els comentaris, com ja s'ha dit abans, s\u00f3n sent\u00e8ncies les quals no s'executen, per\u00f2 serveixen per a poder entrendre i recordar qu\u00e8 voliem fer dins del nostre codi. Si escrivim un codi, i el tornem a revisar al cap d'unes setmanes, segur que no recordem certes coses. L'\u00fas de comentaris ens ajudar\u00e0 a recordar.</p> <p>Tamb\u00e9 servieix quan altre programador ens revisa el nostre codi poder entrendre el que voliem fer.</p>"},{"location":"U02%20Python/01_Entorns_i_projectes/#81-tipus-de-comentaris","title":"8.1. Tipus de comentaris","text":"<ul> <li>D'una l\u00ednia, venen precedits pel car\u00e0cter coixinet <code>#</code></li> <li>De m\u00e9s d'una l\u00ednia, quan tanquem diverses l\u00ednies entre dos parelles de tres cometes simples <code>'''</code></li> <li> <p>De documentaci\u00f3 docstring, s\u00f3n una l\u00ednia o l\u00ednies de text intercalades  al principi d'un m\u00f2dul, m\u00e8tode, classe o funci\u00f3. Pot ser:</p> <ul> <li>L\u00ednia simple: com per exemple <code>'Documentaci\u00f3.'</code></li> <li>L\u00ednia m\u00faltiple: tancada entre tres parelles de cometes dobles <code>\"\"\"</code></li> </ul> </li> </ul> Python<pre><code>'''\nPrograma que calcula el area de un rectangle\nAutor: Joan Gerard Camarena\nData : 2019/07/11\n'''\nimport time\n# declarem una funci\u00f3\ndef areaRectangle(base,altura):\n    \"\"\"\n    Aquest funci\u00f3 calcula el \u00e0rea d'un rectangle\n    Par\u00e0metres:\n        base -&gt; La base del rectangle\n        altura -&gt; La altura del rectangel\n    Errors: \n        No implentat\n    \"\"\"\n    return base*altura\n\ndef areaQuadrat(base):\n    'Calcula el area  de un quadrat de costat pasat.'\n    return base**2\n\n#demanem les dades a l'usuari\nbase=int(input(\"Dis-me la base del rectangle: \"))\naltura=int(input(\"Dis-me l'altura del rectangle: \"))\ntime.sleep(2)   # Espera dos segons\n\narea=areaRectangle(base,altura)\n#mostrem el resultat\nprint(\"L'area del rectangle \u00e9s \" + str(area))\n\narea=areaQuadrat(base)\n#mostrem el resultat\nprint(\"L'area del quadrat \u00e9s \" + str(area))\n</code></pre>"},{"location":"U02%20Python/01_Entorns_i_projectes/#9-delimitadors","title":"9. Delimitadors","text":"<p>S\u00f3n s\u00edmbols especials que permeten al compilador separar i recon\u00e9ixer les diferents unitats sint\u00e0ctiques del llenguatge. En molts llenguatges de programaci\u00f3 es fa servir un <code>;</code> (<code>C</code> i  en <code>Java</code> ) com  a finalitzador, per\u00f2 <code>Python</code> fa servir el bot de l\u00ednia. De tota manera indiquem els m\u00e9s habituals per a tots els llenguatges.</p> DELIMITADOR NOM UTILITAT , Separador Separar els elements d\u2019una llista ( ) Par\u00e8ntesis Agrupar operacions i per als par\u00e0metres de les funcions [ ] Claud\u00e0tors Per als vectors. llistes i dem\u00e9s"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/","title":"2. Tipus de Dades. Operadors","text":""},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#21-tipus-de-dades","title":"2.1 Tipus de dades","text":"<p>Els tipus de dades s\u00f3n els distints tipus d'informaci\u00f3 que podem guardar a les nostres variables. Han anat evolucionant al llarg del temps, i cada vegada accepten valors m\u00e9s grans degut a les pot\u00e8ncies i capacitats cada cop m\u00e9s grans dels ordenadors.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#211-tipus-elementals","title":"2.1.1 Tipus elementals","text":"<p>Partirem de la taula de tipus que s'aplica en <code>C</code> i en <code>Java</code>, que estan molt m\u00e9s detallats.</p> TIPUS SIGNIFICAT BYTES RANG DE VALORS str Cadena de car\u00e0cters 4 per car\u00e0cter en UTF-8 Segons codificaci\u00f3 int Enter 2 o 4 [-2<sup>15</sup>  . .  2<sup>15</sup>] boolean L\u00f2gic 1 bit True o False float Real simple precisi\u00f3 4 [-3,4<sup>38</sup>  . .  3,4<sup>38</sup>] double Real doble precisi\u00f3 8 [1,7<sup>308</sup>  . .  1,7<sup>308</sup>] void o null (cap valor) 0 - <p>El tipus void/null serveix per a representar l\u2019abs\u00e8ncia de valor, com per exemple en funcions que no retornen cap valor o quan no sabem alguna informaci\u00f3. Imaginem que tenim una variable entera <code>temperatura</code>, de la qual no sabem el valor. No podem dir que la temperatura \u00e9s zero, ja que podriem pensar que si l'hem medit ( i evidentment fa fret).</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#211-integer-o-int","title":"2.1.1 <code>integer</code> o <code>int</code>","text":"<p>Serveix per a representar nombres enters (sense decimals) amb signe. El tamany est\u00e0 limitat a la mem\u00f2ria del dispositiu. Per defecte el n\u00famero enter es representa en el sistema decimal, per\u00f2 podem representar-lo en binari, octal i hexadecimal, afegint al principi del numero el prefix de la base en la qual ho representem:</p> Representacions de nombres enters Python<pre><code>print(11)     # mostra 11\nprint(0o11)   # mostra 9\nprint(0x11)   # mostra 17\nprint(0b11)   # mostra 3\n</code></pre> Prefixe Significat Base <code>0b</code> o <code>0B</code> Binari 2 <code>0o</code> o <code>0O</code> Octal 8 <code>0x</code> o <code>0X</code> Hexadecimal 16 <p>Adonar-se que l'ordre de sortida <code>print</code> ho mostra sempre en decimal.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#212-float","title":"2.1.2 <code>float</code>","text":"<p>Serveix per a representar els numeros reals en notaci\u00f3 de coma deximal. Podem representar tamb\u00e9 en notaci\u00f3 cient\u00edfica afegint una <code>E</code> seguit d'un enter positiu o negatiu</p> \u00das de tipus reals Python<pre><code>&gt;&gt;&gt; 4.27\n4.27\n&gt;&gt;&gt; type(4.27)\n&lt;class 'float'&gt;\n&gt;&gt;&gt; 4.\n4.0\n&gt;&gt;&gt; .27\n0.27\n&gt;&gt;&gt; .4e7\n4000000.0\n&gt;&gt;&gt; 4.2e-4\n0.00042\n</code></pre> <p>Els n\u00fameros reals est\u00e0n acotats:</p> <ul> <li>Els numeros m\u00e9s grans, positiu i negatiu: <code>1.79e308</code> i <code>-1.79e308</code></li> <li>Els n\u00fameros m\u00e9s xicotets, positiu i negatiu: <code>5e-324</code> i <code>-5e-324</code></li> </ul> <p>NOTA: <code>Python</code> tamb\u00e9 supporta els n\u00fameros complexes, que els veurem al llarg del curs</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#modificadors-dels-tipus-elementals","title":"Modificadors dels tipus elementals","text":"<p>Servixen per a alterar els rangs dels tipus elementals vistos anteriorment.  Existixen 2 tipus de modificadors:</p> <ul> <li>Modificadors de longitud:<ul> <li><code>short</code>   \u2192   per a enters (opci\u00f3 per defecte en alguns compiladors)</li> <li><code>long</code>  \u2192     per a enters i reals. Dobla el rang</li> </ul> </li> <li>Modificadors de signe (per a enters):<ul> <li><code>signed</code>  \u2192   amb signe (opci\u00f3 per defecte)</li> <li><code>unsigned</code>    \u2192   sense signe</li> </ul> </li> </ul> <p>Els valors m\u00e0xims i m\u00ednims de cada tipus estan definits en les llibreries de cada llenguatge, i canvia segons els compiladors.</p> <p>En <code>Python</code> hi han menys tipus, per\u00f2 tot i aix\u00f2 no perdrem res de pot\u00e8ncia, donat que, per exemple els l\u00edmits a partir de <code>Python3</code> no tenen topes</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#213-bool","title":"2.1.3 <code>bool</code>","text":"<p>Els valors l\u00f2gis vertader i fals, especificats per <code>True</code> i <code>False</code>.</p> Example Python<pre><code>&gt;&gt;&gt; type(True)\n&lt;class 'bool'&gt;\n&gt;&gt;&gt; type(False)\n&lt;class 'bool'&gt;\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#214-string-o-str","title":"2.1.4 <code>string</code> o <code>str</code>","text":"<p>El tipus <code>string</code> no existeix al llenguatge <code>C</code>, i es veu com una successi\u00f3 de car\u00e0cters. En <code>Java</code> ja va apareixer com a objecte i en <code>Python</code> ja \u00e9s un tipus b\u00e0sic. Un <code>string</code> \u00e9s una successi\u00f3 de 0 o m\u00e9s car\u00e0cters dins de cometes simples o dobles. Aquestes cometes no poden apareixer dins de la cadena, ja que la primera obri i l'\u00faltima tanca:</p> Python<pre><code>&gt;&gt;&gt;print(\"Soc una cadena.\")\nSoc una cadena.\n&gt;&gt;&gt;print(\"Soc una \"cadena.\")\nSyntaxError: invalid syntax\n</code></pre> <p>Posibles solucions:</p> <ul> <li>Intercanviar cometes dobles per simples, segons necessitats</li> <li>Fer servir el caracter contrabarra <code>\\</code> que anula el significat dels simbols especials. Aquest car\u00e0cter es llig caracter de <code>escape</code> o <code>d'escapament</code></li> <li>Fer servir com a inici de la cadena la cometa simple <code>'</code> i dins ja podem fer servir la cometa doble o vicerversa. </li> </ul> Combinacions de s\u00edmbols de cadena Python<pre><code>&gt;&gt;&gt;print('Soc una \"cadena.')\nSoc una \"cadena.\n&gt;&gt;&gt;print(\"Soc una \\\"cadena.\")\nSoc una \"cadena.\n&gt;&gt;&gt;print(\"Soc una 'cadena.\")\nSoc una 'cadena.\n</code></pre> <p>Aquest car\u00e0cter t\u00e9 molts usos tamb\u00e9, ja que de vegades combinat amb altres car\u00e0cters podem aconseguir car\u00e0cter no imprimibles o de control:</p> Seq\u00fc\u00e8ncia de Escape Significat <code>\\a</code> Alert. S'emet un pitit de l'altaveu <code>\\b</code> Backspace. S'esborra un car\u00e0cter <code>\\n</code> Line Feed. S'avan\u00e7a una l\u00ednia <code>\\r</code> Carriage Return. Es torna el cursor al principi <code>\\t</code> Tabulador. S'avan\u00e7a M\u00e9s exemples: Python<pre><code>print(\"Exemple 1\")\nprint(\"Hola\",end='')\nprint(\"\\t\",end='')\nprint(\"Adeu\")\n\nprint(\"Exemple 2\")\nprint(\"Hola\",end='')\nprint(\"\\b\",end='')\nprint(\"Adeu\")\n\nprint(\"Exemple 3\")\nprint(\"Hola\",end='')\nprint(\"\\r\",end='')\nprint(\"Adeu\")\n\nprint(\"Exemple 4\")\nprint(\"Hola\",end='')\nprint(\"\\n\",end='')\nprint(\"Adeu\")\n\nprint(\"Exemple 5\")\nprint(\"Hola\",end='')\nprint(\"\\f\",end='')\nprint(\"Adeu\")\n</code></pre> Text Only<pre><code>Exemple 1   \nHola    Adeu    \nExemple 2 \nHolAdeu\nExemple 3\nAdeu                                                                  \nExemple 4\nHola\nAdeu  \nExemple 5                                                            \nHola         \n    Adeu\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#22-tipus-compostos","title":"2.2 Tipus compostos","text":"<p>Els tipus simples serveixen quan tenim que guardar una informaci\u00f3 simple, \u00e9s a dir formada per una s\u00f3la dada. Exemple s\u00f3n una temperatura, un nom, una edat, etc. La cosa ja canvia quan tenim que guardar una informaci\u00f3 formada per varies dades, com per exemple una data de naixement. Com \u00e9s evident, aquesta informaci\u00f3 est\u00e0 formada per 3 informacions simples (dia, mes i any). Altre exemple seria una adre\u00e7a, formada per tipus de carrer, nom del mateix, n\u00famero, escala, codi postal, etc.</p> <p>Aquest tipus de dades s'estudiaran m\u00e9s endavant, i s\u00f3n tipus que els definirem els programadors, prenent com a base els b\u00e0sics que hem vist anteriorment.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#23-declaracio-de-variables","title":"2.3 Declaraci\u00f3 de variables","text":"<p>Una variable \u00e9s una porci\u00f3 de mem\u00f2ria (RAM), representada per un nom (identificador) on es guardar\u00e0 un valor que pot variar al llarg de l\u2019execuci\u00f3 d\u2019un programa. Els llenguatges de programaci\u00f3, depenent de com es declaren les variables poden ser de tipat fort o din\u00e0mic. Anem a veure-ho i veurem exemples.</p> <p>Els llenguatges fortament tipat obliguen de indicar la variable de quin tipus ser\u00e0 abans de fer-la servir. Exemples d'aquest llenguatges s\u00f3n <code>C</code> i <code>Java</code>. Despr\u00e8s al moment de fer servir les variables els llenguatges vigilen i controlen que el valor que s'emmagatzema correspon al tipus de la variable. Cas de no correspondre donar\u00e0 error.</p> Llenguatge fortment tipat Java<pre><code>int n;      // diguem que n \u00e9s enter\nfloat x;    // diguem que x \u00e9s real\n\nn=10;         // OK\nn=\"hola\";     // ERROR\nx=5.47;       // OK\nx=7;          // conversi\u00f3:  x valdr\u00e0 7.0\n\nn=4.56        // semierror:  n valdr\u00e0 4, es perd la part real\n</code></pre> <p>Els llenguatges de tipat din\u00e0mic, com poden ser <code>Python</code> o <code>PHP</code> no cal declarar la variable pr\u00e8viament, simplement si ens cal una variable, li assignem el valor que vullguem i ja est\u00e0. Mai ens ocorreran les situacios d'error d'abans. EL que ens pot oc\u00f2rrer \u00e9s que una variable que contenia un numero, li assignem altre tipus i ens porte a situacions inconsistents. Tindrem que tenir molta cura en aquests casos.</p> Llenguatge de tipat feble Python<pre><code>n=10        # \u00e9s int\nn=5.67      # ara \u00e9s float\nn=6         # ara torna a ser int\nn=n+2       # int i val 8\n\nn=\"salut\"   # ara n \u00e9s str (String) , no dona error, pero...\nn=n+2       # ERROR, no li podem sumar 2 al text \"salut\"\nn=n*2       # ESPAI, multiplicar una cadena per un n\u00famero el duplica \"salutsalut\"\n</code></pre> <p>El tipat de <code>Python</code> es coneix tamb\u00e9 com a Duck typing</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#24-ambit-i-visibilitat","title":"2.4 \u00c0mbit i visibilitat","text":"<p>Les variables (i constants) poden definir-se/declarar-se en qualsevol part del programa, per\u00f2 segons el lloc on siguen declarades, les podrem fer servir en tot el programa (globals) o nom\u00e9s en alguna part (locals).</p> <ul> <li>La visibilitat    \u00e9s la propietat que indica si es pot accedir o no a una variable en un punt determinat del programa.</li> <li>L\u2019\u00e0mbit \u00e9s la zona del programa on \u00e9s visible una variable.</li> </ul> <p>A partir d\u2019estos conceptes podem diferenciar entre objectes locals i globals:</p> <ul> <li>Objectes locals: Variables (o constants) declarades dins d\u2019un bloc o funci\u00f3 i, per tant, visibles nom\u00e9s en l\u2019\u00e0mbit d\u2019eixe bloc i dins dels seus sub-blocs.</li> <li>Objectes globals: Variables (o constants) declarades al programa principal (fora del main) i, per tant, visibles des de qualsevol lloc del programa. </li> </ul> <p>Tenir en compte que:</p> <ul> <li>En <code>C</code> i <code>Java</code> anomenem bloc a tot all\u00f2 que est\u00e0 entre claus { }. Per tant, qualsevol funci\u00f3, com veurem m\u00e9s endavant, \u00e9s un bloc.</li> <li>En <code>Python</code> un bloc s\u00f3n totes aquelles instruccions que estan al mateix nivell d'indentaci\u00f3, mitjan\u00e7ant tabulacions.</li> </ul> <p>Cal tindre clar que si es declaren variables en un bloc (locals) oculten les variables amb el mateix nom globals.  </p> <p>Aquests conceptes s'estudiaran m\u00e9s endavant, quan treballem en la programaci\u00f3 modular</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#25-operadors-i-expressions","title":"2.5 Operadors i Expressions","text":"<p>Per tancar aquest tema anem a estudiar els operadors que disposem als nostres llenguatges, aix\u00ed com la manera d'interactuar amb l'usuari per a demanar-li dades i mostrar-li els resultats. Mitjan\u00e7ant els operadors podrem construir expressions complexes per a formar els nostres algorismes.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#251-operadors-aritmetics","title":"2.5.1 Operadors aritm\u00e8tics","text":"<p>Anem a veure els operadors dels llenguatges de programaci\u00f3. La majoria s\u00f3n similars que <code>Java</code> o altres llenguatges, per\u00f2 hi han xicotetes difer\u00e8ncies:</p> Significat <code>Python</code> <code>Java</code> Exemple Pot\u00e8ncia <code>**</code> no hi ha 3**2 retorna 9 Producte <code>*</code> <code>*</code> 3*6 retorna 18 Divisi\u00f3 <code>/</code> <code>/</code> 10/2  retorna 5 11/2  retorna 5.5 en Python 11/2  retorna 5 en Java (divisi\u00f3 entera) Divisi\u00f3 entera <code>//</code> (<code>Python</code>) 11/2 retorna 5 Residu <code>%</code> <code>%</code> 12/5 retorna 2 (residu de la divisi\u00f3 entera) Suma <code>+</code> <code>+</code> 12 + 7 retorna 19 Resta <code>-</code> <code>-</code> 12 - 7 retorna 5 <p>No cal gaire explicaci\u00f3, donat que son els operadors matem\u00e0tics de sempre. Tindre especial cura en la divisi\u00f3 entera.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#252-operadors-relacionals","title":"2.5.2 Operadors relacionals","text":"<p>Servixen per a comparar 2 expressions, retornant un valor l\u00f2gic: vertader o fals. Son els mateixos en <code>Python</code> i en <code>Java</code>:</p> Operador Significat &lt; Menor &gt; Major == Igual != o &lt;&gt;(sols Python) Distint &lt;= Menor o igual &gt;= Major o igual"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#253-operadors-logics","title":"2.5.3 Operadors l\u00f2gics","text":"<p>Els operadors l\u00f2gics s\u00f3n els de la taula seg\u00fcent. Serveixen per a composar distintes expressions l\u00f2giques:</p> <code>Python</code> <code>Java</code> Significat <code>or</code> <code>|                 |</code> El OR l\u00f2gic <code>and</code> <code>&amp;&amp;</code> La AND l\u00f2gica <code>not</code> <code>!</code> El NOT l\u00f2gic Example Python<pre><code>&gt;&gt;&gt; a = True\n&gt;&gt;&gt; b = False\n&gt;&gt;&gt; a and b\nFalse\n&gt;&gt;&gt; a or b\nTrue\n&gt;&gt;&gt; not a\nFalse\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#curtcircuit-dexpressions","title":"Curtcircuit d\u2019expressions","text":"<p>Si recordem les taules de veritat de les expressions l\u00f2giques, podem afirmar que:</p> <ul> <li><code>false AND ...    \u2192   false</code>: false and els que siga sempre \u00e9s false</li> <li><code>true OR ...      \u2192   true</code>: true or el que siga sempre \u00e9s true</li> </ul> <p>Per tant, com les expressions s\u2019avaluen d\u2019esquerra a dreta, en el moment en qu\u00e8  puga assegurar el valor final de l\u2019expressi\u00f3 l\u00f2gica (true o false), parar\u00e0 d\u2019avaluar-la. Esta manera de treballar s\u2019anomena curtcircuit d\u2019expressions. Aix\u00f2 ens d\u00f3na un benefici pel que fa a control d\u2019errors i a velocitat d\u2019execuci\u00f3.</p> <p>Exemples:</p> Java<pre><code>if ( (dto_1&gt;0) || (dto_2&gt;0) || (dto_3&gt;0) )\n    printf(\"S\u2019ha aplicat algun descompte\");\n</code></pre> <p>Si el <code>dto_1</code> \u00e9s major que 0, ja no es comproven les altres 2 expressions i passa a executar-se directament el <code>print</code>.</p> Python<pre><code>(x&lt;0) and print(\"El valor de la variable x \u00e9s negatiu\")\n</code></pre> <p>Nom\u00e9s es far\u00e0 el printf si el valor de x \u00e9s negatiu.</p> Exercici resolt Pensa qu\u00e8 passaria en cada cas sense i amb curtcircuit d\u2019expressions. Python<pre><code># Versi\u00f3 1\nx=10\ny=0\nif ((x/y)&gt;2 and (y!=0)):\n  pass\n\n# Versi\u00f3 2\nx=10;\ny=0;\nif ((y!=0) and (x/y)&gt;2):\n  pass\n</code></pre> Soluci\u00f3 <p>A la versi\u00f3 1:  Python<pre><code>if ((x/y)&gt;2 and (y!=0)):                                                 \nZeroDivisionError: division by zero \n</code></pre></p> <p>A la versi\u00f3 2 cap error</p> <p>NOTA: l'ordre <code>pass</code> es fa servir quan volem deixar en blanc algun bloc de codi, com \u00e9s el cas que sols volem provar les condicions</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#26-operadors-dassignacio","title":"2.6 Operadors d\u2019assignaci\u00f3","text":"<p>En tots els llenguatges de programaci\u00f3 l\u2019operador d\u2019assignaci\u00f3 \u00e9s el s\u00edmbol igual <code>=</code>. Aques operador necessita una variable a l'esquerre i una expressi\u00f3 a la dreta. El funcionament consistix en assignar a la variable el valor de l'expressi\u00f3 pr\u00e8viament calculada. Funciona avaluant primer la part de la dreta, obtenint el seu resultat i assignant-lo a la variable de l\u2019esquerra.</p> <p></p> <p>Per exemple:        </p> Text Only<pre><code>x = 10;\ny = 20;\nx = x + 1;    # x valdr\u00e0 11\ny = x + y;    # y valdr\u00e0 31\n</code></pre> <p>Per descomptat, l\u2019assignaci\u00f3 \u00e9s destructiva, ja que elimina el valor antic de la variable. \u00c9s a dir, nom\u00e9s pot guardar una dada en un moment determinat.</p> <p>Els llenguatges tamb\u00e9 permet assignar un valor a diverses variables en una assignaci\u00f3 encadenada. Van assignat-se els valors de dreta a esquerre. <code>a=b=c=d=2</code>. L\u2019expressi\u00f3 anterior \u00e9s equivalent a fer les seg\u00fcents assignacions (i en eixe ordre):</p> Text Only<pre><code>d = 2;\nc = d;\nb = d;\na = d;\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#operadors-aritmetics-reduits-operacio-assignacio","title":"Operadors aritm\u00e8tics redu\u00efts (Operaci\u00f3-assignaci\u00f3)","text":"<p>Existixen formes compactes d\u2019escriure algunes operacions aritm\u00e8tiques molt freq\u00fcents. S\u00f3n els operadors redu\u00efts: \u2022   Operadors d\u2019actualitzaci\u00f3: <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code> i <code>%=</code> \u2022   Operadors autoincrement i autodecrement: <code>++</code>, <code>--</code> (sols <code>C</code>i <code>Java</code>) Estos operadors fan 2 coses: una operaci\u00f3 i una assignaci\u00f3.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#operadors-dactualitzacio","title":"Operadors d\u2019actualitzaci\u00f3","text":"<p>A banda del cl\u00e0ssic <code>=</code>, existixen 5 operadors m\u00e9s d\u2019assignaci\u00f3, que estan formats amb els operadors aritm\u00e8tics i l\u2019operador <code>=</code>.</p> Assignaci\u00f3 redu\u00efda Assignaci\u00f3 equivalent <code>x += y</code> <code>x = x + y</code> <code>x -= y</code> <code>x = x - y</code> <code>x *= y</code> <code>x = x * y</code> <code>x /= y</code> <code>x = x / y</code> <code>x //= y</code> <code>x = x // y</code> <code>x %= y</code> <code>x = x % y</code> <p>On <code>x</code> \u00e9s una variable i <code>y</code> una expressi\u00f3, constant o variable.</p> Example d'assignacions Java<pre><code>int x, y;\ny = 1;\nx = 4;\nx += y;     // x = x + y        \u2192 x = 5\nx *= 2;     // x = x * 2        \u2192 x = 10\nx -= 3 - y;     // x = x \u2013 (3 - y)  \u2192 x = 10 \u2013 (2)  \u2192 x = 8\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#operadors-autoincrement-i-autodecrement-javai-c","title":"Operadors autoincrement i autodecrement (<code>Java</code>i <code>C</code>)","text":"<p>Els operadors incrementals <code>++</code> i <code>--</code> s\u00f3n operadors unaris que incrementen o decrementen en 1 unitat la variable a qui acompanyen. </p> <ul> <li>Si l\u2019operador va davant (<code>++x</code>), primer s\u2019incrementa la variable i despr\u00e9s s\u2019utilitza el valor de la variable en l\u2019expressi\u00f3 on apareix. </li> <li>Si l\u2019operador va despr\u00e9s (<code>x++</code>), primer s\u2019utilitza el valor de la variable en l\u2019expressi\u00f3 i despr\u00e9s s\u2019incrementa la variable.</li> </ul> <p></p> <p></p> <p>Fixa't que pots trobar concursos de programaci\u00f3 ofuscada</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#27-altres-operadors","title":"2.7 Altres operadors","text":""},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#271-operador-condicional-java","title":"2.7.1 Operador condicional  <code>? :</code> (<code>Java</code>)","text":"<p>Sintaxi: <code>condici\u00f3  ?  expressi\u00f3_s\u00ed  :  expressi\u00f3_no ;</code> Exemples d\u2019\u00fas:</p> <ol> <li>Assignar un valor diferent a una variable segons una condici\u00f3:</li> </ol> Java<pre><code>major = a &gt; b ? a  : b ;\ndistancia = a &gt; b ?   a \u2013 b  ; b \u2013 a;\nnum_positiu = num &gt; 0 ? num  : -num  ;\n</code></pre> <ol> <li> <p>Mostrar un valor diferent segons una condici\u00f3: Text Only<pre><code>printf(  edat&gt;18 ?  \u201cAdult\u201d : \u201cInfantil\u201d );\n</code></pre></p> </li> <li> <p>Executar una instrucci\u00f3 diferent segons una condici\u00f3: Text Only<pre><code>edat&gt;18?  printf(\u201cAdult\u201d)  : printf(\u201cInfantil\u201d);\n</code></pre></p> </li> </ol> <p>Nota: tamb\u00e9 es poden posar operadors condicionals dins d\u2019altres.</p> <p>Exercici proposat 1 Fes un programa que, donats 2 variables enteres, mostre quin \u00e9s el n\u00famero m\u00e9s gran i quin el m\u00e9s menut.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#272-operador-sizeof","title":"2.7.2 Operador sizeof","text":"<p>La quantitat de bytes que s\u2019utilitza per a guardar un determinat tipus de dades dep\u00e9n de la versi\u00f3 del compilador i del tipus de processador que s\u2019utilitze. Per tant, perqu\u00e8 el nostre programa puga ser portable, de vegades \u00e9s necessari saber quants bytes ocupen les variables amb les quals treballarem. Per a aix\u00f2, <code>C</code> i <code>Java</code> disposa de l\u2019operador <code>sizeof()</code>, qui calcula la quantitat de bytes que ocupa la variable o tipus que li posem dins dels par\u00e8ntesis <code>x = sizeof( variable o tipus )</code>.</p> En <code>Python</code> per a calcular-ho podem fer: Python<pre><code>import sys\n\nx=10\ntext='10'\n\nprint(sys.getsizeof(x),\"bytes\")\nprint(sys.getsizeof(text), \"bytes\")\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#28-expressions","title":"2.8 Expressions","text":"<p>Ara que ja hem vist els tipus d\u2019operands i els operadors, ja podem formar expressions. Qu\u00e8 pot ser una expressi\u00f3?</p> <ul> <li>Un valor (constant literal)</li> <li>Una constant amb nom o una variable</li> <li>Una funci\u00f3</li> <li>Una combinaci\u00f3 dels elements anteriors amb operadors, els quals han de complir certes regles de construcci\u00f3.</li> <li>Res m\u00e9s \u00e9s una expressi\u00f3</li> </ul>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#29-conversions-de-tipus","title":"2.9 Conversions de tipus","text":"<p>Dins d\u2019una expressi\u00f3 poden apar\u00e9ixer dades de distints tipus. Aleshores, el compilador ha de prendre una decisi\u00f3 de com fer el c\u00e0lcul i no donar error.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#291-promocio-interna","title":"2.9.1 Promoci\u00f3 interna","text":"<p>Si en una expressi\u00f3 hi ha dades de diferent tipus, el compilador transforma els tipus d\u2019una grand\u00e0ria inferior al tipus de la dada de grand\u00e0ria superior.</p> <p><code>char \u2192 int \u2192 unsigned \u2192 long \u2192 unsigned long \u2192 float \u2192 double \u2192 long \u2192 double</code></p> <p>Nota Com <code>Python</code> no te tipat, aix\u00f2 no passar\u00e0 i sempre es canviar\u00e0 el tipus de dades</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#292-promocio-per-assignacio","title":"2.9.2 Promoci\u00f3 per assignaci\u00f3","text":"<p>Esta conversi\u00f3 la fa el compilador quan s\u2019intenta assignar a una variable una expressi\u00f3 de diferent tipus.</p> <ul> <li>(int) = (char)      \u2192 no hi ha problema.</li> <li>(char) = (int)      \u2192   s\u2019elimina els bytes menys significatiu.</li> <li>(int) = (float)         \u2192   es trunca la part fraccion\u00e0ria.</li> <li>(float) = (double)  \u2192   s\u2019arredonix el n\u00famero</li> </ul> <p>En els casos on es perd certa informaci\u00f3 ens pot portar a resultats inesperats. Per tant, en eixos casos \u00e9s recomana fer conversions for\u00e7ades.</p> <p>Nota Com <code>Python</code> no te tipat, aix\u00f2 no passar\u00e0 i sempre es canviar\u00e0 el tipus de dades.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#293-promocio-forcada-o-casting","title":"2.9.3 Promoci\u00f3 for\u00e7ada o C\u00e0sting","text":"<p>En este cas no esperem que siga el compilador qui fa\u00e7a la promoci\u00f3 (conversi\u00f3 de tipus), sin\u00f3 que ser\u00e0 el propi programador qui indique quina dada ha de canviar de tipus i a quin. S\u2019especifica posant el tipus entre par\u00e8ntesi just abans de l\u2019expressi\u00f3 en <code>Java</code> o fent una crida a la funci\u00f3 que converteix el tipus en <code>Python</code>:</p> <ul> <li><code>Java</code> \u2192 <code>(tipus) expressi\u00f3</code></li> <li><code>Python</code>\u2192 <code>tipus(expressi\u00f3)</code></li> </ul> Exemples: Java<pre><code>int n = 10; m = 3;\nfloat x, y;\nx = (float)(n/m) ;  // (float) 3      \u2192 3.0\nx = (float)n/m;     // (float)(n) / m   \u2192 10.0 / 3  \u2192  3.3333..\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#210-precedencia-i-associativitat-doperadors","title":"2.10 Preced\u00e8ncia i associativitat d\u2019operadors","text":"<p>Ac\u00ed tenim una relaci\u00f3 dels operadors ordenats per preced\u00e8ncia de major a menor. En cas d\u2019igualtat de preced\u00e8ncia de diversos operadors en una expressi\u00f3, l\u2019associativitat ens diu per on es comen\u00e7a a avaluar.</p> <p>Preced\u00e8ncia i associativitat en Python</p> <p></p> <p>Preced\u00e8ncia i associativitat en C i Java</p> <p></p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#211-entrada-i-eixida-en-python","title":"2.11 Entrada i eixida en Python","text":"<p>Les instruccions d\u2019entrada i eixida (a partir d\u2019ara E/S) permeten la construcci\u00f3 de programes interactius. \u00c9s a dir, introduir dades des de teclat (<code>input</code>) i visualitzar en pantalla els resultats (<code>print</code>). </p> <p>Les funcions d\u2019E/S es dividixen en 2 grups:</p> <ul> <li>Sense format \u2192 es mostren els text i numeros com apareixen</li> <li>Amb format \u2192 es formaten els numeros d'alguna manera especial</li> </ul>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#2111-sortida-de-dades-la-funcio-print","title":"2.11.1 Sortida de dades: la funci\u00f3 <code>print</code>","text":"<p>Aquesta funci\u00f3 simplement mostra per pantalla all\u00f2 que li se passa, que \u00e9s un text. Anem a anar vegent-la de manera incremental, amb un codi comentat:</p> Example Python<pre><code>&gt;&gt;&gt; print(\"Hola\")\nHola\n&gt;&gt;&gt; print(\"Hola\",'que tal?',\"comen\u00e7ant el curs\")\nHola que tal? comen\u00e7ant el curs\n&gt;&gt;&gt; print(\"Hola \"+ \"com va\")\nHola com va\n</code></pre> <p>com podem veure <code>print</code> rep un o m\u00e9s texts, que poden estar entre cometes simples o dobles. Aques texts els separa per blancs i afig un bot de l\u00ednia al final de tota la uni\u00f3 de texts. Les cadenes de text poden concatenar-se tamb\u00e9 amb l'operador <code>+</code>, per\u00f2 llavors haurem de separar-les nosaltres l'espai en blanc.</p> <p>La sintaxi completa \u00e9s:</p> <p><code>print(object(s), separator=separator, end=end, file=file, flush=flush)</code> - <code>object(s)</code> \u2192 son les cadenes de text o objectes que volem imprimir. - <code>separator=separator</code> \u2192 El s\u00edmbol que volem fer servir per a separar els objectes anterior. Sin\u00f3 posem res \u00e9s l'espai en blanc - <code>end=end</code> \u2192 El simbol que farem servir al final de tota la impressi\u00f3. Sin\u00f3 posem res \u00e9s el <code>enter</code> o bot de l\u00ednia. - <code>file=file</code> \u2192 Sin\u00f3 diguem res el text que s'escriu va a pantalla. Cas de voler enviar-ho a un fitxer, ac\u00ed indicarem a quim (ho veurem al final del curs). El fitxer que simbolitza la pantalla \u00e9s <code>sys.stdout</code> (el standard output del sistema) - <code>flush=flush</code> \u2192 aquest ser\u00e0 un valor boolea que indica si volem que la sortida es guarde (<code>True</code>) per a volcar-la tota de colp o si volem que tal i com s'execute es mostre (<code>False</code> i opci\u00f3 per defecte). Quan volem fer <code>flush</code> tot el que escrivim no es mostra i es guarda en un <code>buffer</code> o mem\u00f2ria temporal, fins que vullguem mostrar-ho tot de colp.</p> Example Python<pre><code>&gt;&gt;&gt; print(\"Hola\",\"com va tot?\")\nHola com va tot?\n&gt;&gt;&gt; print(\"Hola\",\"com va tot?\",sep='#')\nHola#com va tot?\n&gt;&gt;&gt; print(\"Hola\",\"com va tot?\",sep='---')\nHola---com va tot?\n&gt;&gt;&gt; print(\"Hola\",\"com va tot?\",sep='---',end=\"@\")\nHola---com va tot?@&gt;&gt;&gt;  # observa, sense bot de l\u00ednia\n</code></pre>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#especificant-el-format","title":"Especificant el format","text":"Combinant texts i nombres Python<pre><code>&gt;&gt;&gt; print(\"Un enter es\",4,\"i un real \u00e9s\",3.256)\nUn enter es 4 i un real \u00e9s 3.256\n&gt;&gt;&gt; print(\"Un enter es\" +4 +\"i un real \u00e9s\" + 3.256)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: can only concatenate str (not \"int\") to str\n&gt;&gt;&gt; print(\"Un enter es \" + str(4) +\" i un real \u00e9s \" + str(3.256))\nUn enter es 4 i un real \u00e9s 3.256\n</code></pre> <p>vegem que:</p> <ul> <li>Si posem valors numerics amb els separadors no hi han problemes</li> <li>Si concatenem amb l'operador <code>+</code> si hi han problemes. Aquest problemes els podem solucionar convertint els n\u00fameros a cadenes amb la funci\u00f3 <code>str()</code></li> </ul> <p>Imaginem que volem imprimir certes hores del dia. EL que fariem \u00e9s:</p> Python<pre><code>print(\"Son les\",4,\"hores del dia\",7,\"de setembre i fa\",7.27,\"\u00baC\")\nprint(\"Son les\",16,\"hores del dia\",7,\"de setembre i fa\",15.27,\"\u00baC\")\nprint(\"Son les\",23,\"hores del dia\",17,\"de setembre i fa\",9.2,\"\u00baC\")\nprint(\"Son les\",3,\"hores del dia\",18,\"de setembre i fa\",10.3,\"\u00baC\")\n</code></pre> <p>la sortida que produeix \u00e9s:</p> Text Only<pre><code>Son les 4 hores del dia 7 de setembre i fa 7.27 \u00baC\nSon les 16 hores del dia 7 de setembre i fa 15.27 \u00baC\nSon les 23 hores del dia 17 de setembre i fa 9.2 \u00baC\nSon les 3 hores del dia 18 de setembre i fa 10.3 \u00baC\n</code></pre> <p>observem que cada cadena t\u00e9 una longitud distinta. El problema \u00e9s que els numeros enters ocupen 1  o 2 car\u00e0cters, depenenet del n\u00famero de xifres que tenen, i que els numeros decimal tamb\u00e9 varien la seua longitud. Aix\u00f2 ho podem arreglar amb els especificadors de format:</p> <ul> <li>Per a n\u00fameros enters <code>%nd</code>, on <code>n</code> indica quants car\u00e0ceters ha de omplir com a m\u00ednim</li> <li>Per a n\u00fameros reals <code>%n.mf</code>on <code>n</code> indica quants car\u00e0ceters ha de omplir com a m\u00ednim i <code>m</code> indica els decimals que ha de mostrar</li> </ul> <p>Python<pre><code>print(\"Son les %2d hores del dia %2d de setembre i fa %6.3f\"%(4,7,7.27))\nprint(\"Son les %2d hores del dia %2d de setembre i fa %6.3f\"%(16,7,15.27))\nprint(\"Son les %2d hores del dia %2d de setembre i fa %6.3f\"%(23,17,9.2))\nprint(\"Son les %2d hores del dia %2d de setembre i fa %6.3f\"%(3,18,10.3))\n</code></pre> la sortida que produeix \u00e9s: Text Only<pre><code>Son les  4 hores del dia  7 de setembre i fa  7.270\nSon les 16 hores del dia  7 de setembre i fa 15.270\nSon les 23 hores del dia 17 de setembre i fa  9.200\nSon les  3 hores del dia 18 de setembre i fa 10.300\n</code></pre></p> M\u00e9s formats de cadenes <p>Les cadenes un cop construides les podem formatar i aliniar a esquerre, centre i dreta, tal i com es veu:</p> Python<pre><code>cadena=\"Aix\u00f2 \u00e9s un text\"\n\n&gt;&gt;&gt; print(cadena.ljust(60,'_'))\nAix\u00f2 \u00e9s un text_____________________________________________\n\n&gt;&gt;&gt; print(cadena.center(60,'_'))\n______________________Aix\u00f2 \u00e9s un text_______________________\n\n&gt;&gt;&gt; print(cadena.rjust(60,'_'))\n_____________________________________________Aix\u00f2 \u00e9s un text\n</code></pre> <p>Com es pot veure les funci\u00f3n <code>.rjust</code>, <code>.center</code> i <code>.ljsut</code> justifiquen el text al que s'apliquen, ocupant els car\u00e0cter que s'indiquen en el primer argument, i omplint els buits amb el car\u00e0cter que s'indica en el segon argument (per defecte blanc).</p> <p>Dins de les cadenes poden fer-se servir tamb\u00e9 els car\u00e0cters especials: <code>\\a</code>, <code>\\b</code>, <code>\\n</code>,<code>\\r</code>,<code>\\t</code> i <code>\\\\</code> per a una contrabarra.</p>"},{"location":"U02%20Python/02_Tipus_Variables_Operadors/#2112-entrada-de-dades-la-funcio-input","title":"2.11.2 Entrada de dades: la funci\u00f3 <code>input</code>","text":"<p>La funci\u00f3 <code>input</code> llig all\u00f2 que l'usuari ha escrit fins que polse un <code>enter</code>. \u00c9s molt interessant posar com a argument all\u00f2 que li volem preguntar, sin\u00f3 hem de fer servir abnas la funci\u00f3 <code>print</code>. Exemple:</p> Python<pre><code>print(\"Dis-me la teua edat\")\nedat=input()\n\n# \u00e9s molt m\u00e9s c\u00f2mode fer\nedat=input(\"Dis-me la teua edat\")\n</code></pre> <p>El gran problema \u00e9s que aquesta fuci\u00f3 retorna un <code>str</code> i llavors, encara que el podem fer servir no podrem fer c\u00e0lculs amb ells. La soluci\u00f3 \u00e9s fer un c\u00e0sting o conversi\u00f3 de tipus segons la dada que volem llegir:</p> Llegir i transformar Python<pre><code>edat=int(input(\"Dis-me la teua edat: \"))\n\npes=float(input(\"Dis-me la teua pes: \"))\n\nnom=input(\"Dis-me el teu nom: \")  # no cal fer conversi\u00f3\n\nprint(\"Hola\",nom,\", tens\",edat,\"anys i peses\",pes,\"kilos)\n</code></pre> <p>Si volem llegir diversos arguments alhora, separats per algun caracter especial, podem fer servir la funci\u00f3 <code>split</code> de la classe <code>str</code>:</p> Llegir i dividir Python<pre><code>pes, altura=input(\"Dis-me el pes i altura (separats per blanc): \").split()\n\nhores, minuts, segons=input(\"Dis-me l'hora exacta en format hh:mm:ss: \").split(\":\")\n\n# ATENCIO -&gt; aix\u00f2 ho retorna tot en format str. Hi hauria que fer despr\u00e8s les conversi\u00f3n als formats adequats\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/","title":"3. Estructures de control","text":""},{"location":"U02%20Python/03_Estructures_de_control/#31-sentencies","title":"3.1. Sent\u00e8ncies","text":"<p>Les sent\u00e8ncies s\u00f3n cadascuna de les ordres que es donen a un programa. Si recordem un algorisme \u00e9s una seq\u00fcencia de passos, doncs be, una sent\u00e8ncia especificar\u00e0 un (o diversos) d'aquests passos per transcriure un algorisme a un programa.</p> <p>Les sent\u00e8ncies poden ser de distint tipus, ateses a la seua naturalesa:</p> <ul> <li>Importaci\u00f3. S\u00f3n les sent\u00e8ncies (habitualment a l'inici del programa) que indiquen quines llibreries del programa van a fer-se servir. Com ja hem vist, les llibreries s\u00f3n un conjunt de funcions que ja estan a punt per a fer-se servir.</li> </ul> Text Only<pre><code>import java.io      // importaci\u00f3 de llibreria en Java\nimport time         // importaci\u00f3 de llibreria en Python\n#include&lt;stdio.h&gt;   // importaci\u00f3 de llibreria en C\n</code></pre> <ul> <li>Declaratives. S\u00f3n les sent\u00e8ncies que es fan servir per a indicar alguna cosa. No representen cap acci\u00f3 dins d'un programa. Per exemple destaquen la declaraci\u00f3 de variables o les de funcions:</li> </ul> Text Only<pre><code>int n;                      // en Java es declaren les variables\ndef area(base, altura):     // declaraci\u00f3 de funci\u00f3 en Python\npublic float area(float base, float altura)  //declaraci\u00f3 de funci\u00f3 en Java\n</code></pre> <ul> <li>Assignacions o Instruccions sequencials. S\u00f3n les instruccions propiament dites. Serveixen per a fer un c\u00e0lcul i assignar-lo a una variable. El c\u00e0lcul es pot fer amb qualsevol dels operadors estudiats, i habitualment guardar el valor calculat en una variable. Tamb\u00e9 poden simplement fer una acci\u00f3 sense guardar-la en cap lloc, com puga ser mostrar alguna cosa per pantalla (<code>print</code>), emetre un so o esborrar un fitxer.</li> <li>Sent\u00e8ncies de control. \u00c9s el que estudiarem en aquest tema. S\u00f3n aquelles instruccions que ens permeten moure el fluxe continuo o de dalt cap avall d'un programa, permetent-nos prendre desicions i repetir una s\u00e8rie d'intruccions les vegades que calga. Es tracta de les bifurcacions i dels bucles</li> </ul>"},{"location":"U02%20Python/03_Estructures_de_control/#32-sentencies-alternatives","title":"3.2. Sent\u00e8ncies alternatives","text":""},{"location":"U02%20Python/03_Estructures_de_control/#321-condicions-simples","title":"3.2.1. Condicions simples","text":"<p>Com ja em comentat, l'ordre en el fluxe del programa \u00e9s de dalt cap avall i d'una en una. </p> Text Only<pre><code>...\nsent\u00e8ncia 1\nsent\u00e8ncia 2\nsent\u00e8ncia 3\n...\nsent\u00e8ncia n\n</code></pre> <p>Si volem alternar entre un o altre cam\u00ed deurem de fer alguna men\u00e1 de pregunta o condici\u00f3, de manera que si passa una condici\u00f3 farem una cosa i cas que no pase farem altra. La sintaxi en <code>Python</code> \u00e9s:</p> Bifurcacions simples en <code>Python</code> Python<pre><code>if condicio1:\n    sentencia 1\n    sentencia 2\n    #...\nelif condicio2:\n    sentencia a\n    sentencia b\n    #...\nelse:\n    sentencia n\n    sentencia m\n    #...\n</code></pre> <p>On:</p> <ul> <li><code>condicio1</code> i <code>condicio2</code> son expressions relacionals, que ens donen com a resultat <code>True</code> o <code>False</code>. Si s'acompleix la <code>condicio1</code> s'executa les sentencies indentades despr\u00e8s dels <code>:</code> (sentencies 1,2,...). Molt important el tabular be aquelles sent\u00e8ncies dins de cada <code>if</code></li> <li>Si la <code>condicio1</code> ha donat com ha resultat <code>False</code> llavors s'avalua la <code>condicio2</code>, dins del <code>elif</code>. <code>elif</code> ve a ser la contracci\u00f3 de <code>else - if</code>. Si la <code>condici\u00f32</code> \u00e9s <code>True</code> llavors s'executa el bloc indentat (sentencies a, b ,...). Poden apareixer molts o cap bloc <code>elif</code>, per la qual cosa \u00e9s opcional.</li> <li>Sin\u00f3 s'ha acomplit cap condicio (ni <code>if</code> ni <code>elif</code>) finalment s'executar\u00e0 el bloc <code>else</code>, com alternativa a niguna de les anteriors. Aquest bloc tamb\u00e9 \u00e9s opcional.</li> </ul> <p>L'equivalent en <code>Java</code> \u00e9s el seg\u00fcent:</p> Bifurcacions simples en <code>Java</code> Java<pre><code>if (condicio1){         // condici\u00f3 entre par\u00e8ntesi\n    sentencia 1;        // els blocs venen marcat per les claus\n    sentencia 2;        // no per la indentaci\u00f3\n    //...\n}\nelse if (condicio2){       // no es contrau else-if per elif\n    sentencia a;\n    sentencia b;\n    //...\n    }\nelse{\n    sentencia n;\n    sentencia m;\n    //...\n}\n</code></pre> Exercici resolt Demanar un numero a l'usuari i indicar si el n\u00famero \u00e9s positiu. Python<pre><code>n=int(input(\"Dona'm un numero: \"))\nif n&gt;=0:\n    print(\"El numero\",n,\"es positiu\")\n\nprint(\"Fi del programa\")\n</code></pre> Exercici resolt Demanar un numero a l'usuari i indicar si el n\u00famero \u00e9s positiu o negatiu. Python<pre><code>n=int(input(\"Dona'm un numero: \"))\nif n&gt;=0:\n    print(\"El numero\",n,\"es positiu\")\nelse:\n    print(\"El numero\",n,\"es negatiu\")\n\nprint(\"Fi del programa\")\n</code></pre> Exercici resolt Indicar la situaci\u00f3 administrativa d'una persona (estudiant, treballador o jubilat) depenent de la seua edat. Python<pre><code>edat=int(input(\"Dona'm l'edat de la persona: \"))\nif edat&lt;16:\n    print(\"Eres estudiant\")\nelif edat&lt;65:\n    print(\"Eres treballador\")\nelse:\n    print(\"Eres jubilat\")\n\nprint(\"Fi del programa\")\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/#322-condicions-compostes","title":"3.2.2. Condicions compostes","text":"<p>Com s'ha anomentat, despr\u00e8s del <code>if</code> o del <code>elif</code> ha d'apar\u00e8ixer una condici\u00f3, la qual ha d'avaluar-se a <code>True</code> o <code>False</code>. La condici\u00f3 pot ser simple, per\u00f2 tamb\u00e9 la podem fer composta i m\u00e9s complexa mitjan\u00e7ant els operadors <code>and</code>, <code>or</code> i <code>not</code>, seguint les taules de la veritat que vegerem als temes anteriors.</p> Exercici resolt Demanar un numero a l'usuari i indicar si parell i est\u00e0 entre 10 i 20 (incloses) Python<pre><code>n=int(input(\"Dona'm un numero: \"))\nif n%2==0 and (n&gt;=10 and n&lt;=20):\n    print(\"Si que es parell entre 10 i 20\")\nelse:\n    print(\"No compleix la condici\u00f3\")\n\nprint(\"Fi del programa\")\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/#323-condicions-niuades","title":"3.2.3. Condicions niuades","text":"<p>Si tenim diverses condicions que complir, com hem vist abans les podem composar amb els operadors l\u00f2gics. El tema \u00e9s que, sin\u00f3 es compleix la condici\u00f3 no sabrem si \u00e9s per la primera condici\u00f3 o per la segona (mirar l'exemple anterior). Llavors en aquests cassos el que podem fer \u00e9s posar condicions simples niuades (una dins de l'altra).</p> Programa alternatiu a la soluci\u00f3 anterior: Python<pre><code>n=int(input(\"Dona'm un numero: \"))\nif n%2==0:\n    if n&gt;=10 and n&lt;=20:\n        print(\"Si que es parell entre 10 i 20\")\n    elif:\n        print(\"El n\u00famero \u00e8s parell per\u00f2 no est\u00e0 entre 10 i 20\")\nelse:\n    print(\"El n\u00famero \u00e9s imparell\")\n\nprint(\"Fi del programa\")\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/#33-bucles","title":"3.3. Bucles","text":"<p>De vegades a un programa ens interessar\u00e0 pel motiu que siga repetir un conjunt d'instruccions. El nombre de repeticions pot saber-se a priori o no. Cas de saber-ho, direm que estem en bucles incondicional, i cas de no saber-ho en bucles condicionals, ja que la repetici\u00f3 es far\u00e0 fins que s'acomplisca una condici\u00f3.</p>"},{"location":"U02%20Python/03_Estructures_de_control/#331-bucles-condicionals-while","title":"3.3.1. Bucles condicionals. <code>while</code>","text":"<p>Imaginem la seg\u00fcent situaci\u00f3. A un programa volem calcular l'\u00e0rea i el cercle d'una circumfer\u00e8ncia, per la qual cosa hem de demanar el radi de la mateixa. </p> Primera soluci\u00f3 Python<pre><code>import math\n\nradi=int(input(\"Dona'm el radi de la circumferencia: \"))\n\narea=math.pi*radi**2\nprint(\"L'area de la cirumfer\u00e8ncia \u00e9s %6.3f\"%area)\n\nprint(\"Fi del programa\")\n</code></pre> <p>Aquest programa semble correcte a priori, per\u00e0 que passa si a l'executar li donem al radi un valor de <code>-4</code>, per exemple:</p> Text Only<pre><code>L'area de la cirumfer\u00e8ncia \u00e9s 50.265\nEl cercle de cirumfer\u00e8ncia \u00e9s -25.133\n</code></pre> <p>Quin rang de valors \u00e9s acceptable per al radi? La resposta \u00e9s nombres majors que zero. Anem a intentar solucionar-ho amb el que sabem. </p> Segona soluci\u00f3: Python<pre><code>import math\n\nradi=int(input(\"Dona'm el radi de la circumferencia: \"))\n\nif radi&gt;0:\n    area=math.pi*radi**2\n    cercle=2*math.pi*radi\n    print(\"L'area de la cirumfer\u00e8ncia \u00e9s %6.3f\"%area)\n    print(\"El cercle de cirumfer\u00e8ncia \u00e9s %6.3f\"%cercle)\nelse:\n    print(\"No podem fer c\u00e0lculs amb radis negatius o zero\")\n\nprint(\"Fi del programa\")\n</code></pre> <p>Com vegem ara sols fem el c\u00e0lcul quan el radi \u00e9s positiu. El problema \u00e9s que quan \u00e9s negatiu el programa acaba. Llavors el que podem fer quan l'usuari pose un radi negatiu \u00e9s tornar-lo a demanar. Qu\u00e8 pot passar? que el tornen a posar negatiu \ud83d\ude1e... </p> <p>La gran pregunta \u00e9s quants cops caldr\u00e0 demanar el radi fins assegurar-nos que el radi siga positiu?. Resposta: No ho sabem. Llavors haurem de demanar el radi fins tenir un valor positiu, </p> Tercera soluci\u00f3 Python<pre><code>import math\n\nradi=0              # Li assignem al radi un valor dels considerats com a incorrectes\nwhile radi&lt;=0:      # mentre la variable radi tingui un valor incorrecte \u2192 repetim     \n    radi=int(input(\"Dona'm el radi de la circumferencia: \"))\n    if (radi&lt;=0):   # Informem a l'usuari que ha posata valor incorrecte\n        print(\"No podem fer c\u00e0lculs amb radis negatius o zero\")\n\n#   si hem aconseguit eixir del bucle, \u00e9s per que la condici\u00f3 \u00e9s falsa\n#   per tant el radi&gt;0. Ja podem fer els c\u00e0lculs\n\narea=math.pi*radi**2\ncercle=2*math.pi*radi\nprint(\"L'area de la cirumfer\u00e8ncia \u00e9s %6.3f\"%area)\nprint(\"El cercle de cirumfer\u00e8ncia \u00e9s %6.3f\"%cercle)\n\nprint(\"Fi del programa\")\n</code></pre> <p>Vist aquest exemple, les conclussions s\u00f3n:</p> <ul> <li>Farem servir un bucle condicional o <code>while</code> quan el n\u00famero de repeticions no depenguen del programador ni del problema, sin\u00f3 de l'usuari o de les condicions d'execuci\u00f3, que cada cop son distintes.</li> <li>Abans d'escriure la condici\u00f3 haurem d'inicialitzar la varible(s) que apareixen a la condici\u00f3. En aquesta inicialitzaci\u00f3 la condici\u00f3 ha de ser <code>True</code>, de manera que puguem entrar al bucle. </li> <li>Dins del bucle haurem de modificar d'alguna manera eixa variable, de manera que en algun moment la condici\u00f3 sigui <code>False</code>, per poder eixir del bucle.</li> <li>Mai sabrem a priori quantes vegades s'executar\u00e0</li> </ul> Sintaxi de bucle <code>while</code>en <code>Python</code>: Python<pre><code>while condici\u00f3:\naccio1\naccio2\n...\naccion\n\nacci\u00f3_fora_del_bucle  \n</code></pre> <p>S'avalua la condici\u00f3, oc\u00f2rre que:</p> <ul> <li>La condici\u00f3 \u00e9s <code>True</code> \u2192 entrem al bucle, s'executen totes les accions, des de la <code>1</code> fins la <code>n</code>. En acabar es torna a avaluar la condici\u00f3.</li> <li>La condici\u00f3 \u00e9s <code>False</code> \u2192 s'acaba el bucle, i llavors s'executa <code>acci\u00f3_fora_del_bucle</code>.</li> </ul>"},{"location":"U02%20Python/03_Estructures_de_control/#convergencia","title":"Convergencia","text":"<p>Com s'ha comentat abans, l'execuci\u00f3 del bucle acaba quan la condici\u00f3 \u00e9s <code>False</code>. Observa els seg\u00fcents exemples i intenta pensar que passa quan s'executen:</p> <p>Python<pre><code>n=0\nwhile n&lt;100:\n    print(n)\n</code></pre> La sortida del programa anterior mostra <code>0</code> per sempre:</p> Text Only<pre><code>0\n0\n...\n0\n</code></pre> <p>Aix\u00f2 ocorre perqu\u00e8 no hem escrit cap ordre que modifica la <code>n</code> (no hem modificat la condici\u00f3). Aix\u00f2 ens provoca un bucle infinit. Modifiquem-ho:</p> Python<pre><code>n=0\nwhile n&lt;100:\n    print(n)\n    n=n-1\n</code></pre> <p>Ja hem modificat la <code>n</code>, i per tant la condici\u00f3, per\u00f2 la sortida ara \u00e9s:</p> Text Only<pre><code>0\n-1\n-2\n...\n-9999999999\n</code></pre> <p>En aquest cas la condici\u00f3 \u00e9s que <code>n&lt;100</code>, sent <code>n=0</code>. Nosaltres (per error \ud83d\ude43) modifiquem la <code>n</code> restant-li un en cada iteraci\u00f3. Llavors \u00e9s impossible que mai arribe a ser igual o superior a <code>100</code>. Tornem a estar en bucle infinit. Solucionem-ho</p> Python<pre><code>n=0\nwhile n&lt;100:\n    print(n)\n    n=n+1\n</code></pre> <p>Finalment s'imprimeix:</p> Text Only<pre><code>0\n1\n2\n...\n99\n</code></pre> <p>El que tenim que observar \u00e9s que la variable que controla la condici\u00f3 (<code>n</code>) ha de convergir al valor final (<code>100</code>). Observar tamb\u00e9 que el numero 100 no s'imprimeix, ja que quan <code>n==100</code> la condici\u00f3 \u00e9s <code>False</code>, i ja s'ix del bucle.</p>"},{"location":"U02%20Python/03_Estructures_de_control/#332-bucle-incondicional-bucle-for","title":"3.3.2. Bucle incondicional. Bucle <code>for</code>","text":"<p>Aquest tipus de bucles es fa servir quan sabem a priori el numero de vegades que volem repetir les instruccions que formen part del bucle. En aquest tipus de bucles hi ha una variable \u00edndex que ens permet portar un compte del nombre de repeticions que portem. En <code>Python</code> aquest bucle ha canviat bastant respecte a altre llenguatges com <code>Java</code>, llavor anem a explicar-ho en els dos llenguatges.</p>"},{"location":"U02%20Python/03_Estructures_de_control/#333-for-en-java","title":"3.3.3. <code>for</code> en <code>Java</code>","text":"<p>En <code>Java</code> el <code>for</code> te 3 apartats. Es fa servir una variable que s'inicia a un valor inicial. Despr\u00e8s es posa una condici\u00f3, com si fos un <code>while</code> i finalment es posa un increment que es far\u00e0 cada cop que s'executen les accions. El bucle anir\u00e0 repetint-se fins que la condici\u00f3 siqui <code>false</code></p> Java<pre><code>for (int i=0;i&lt;10;i++){\n    printf(i);\n}\n</code></pre> <p>aquest bucle imprimeix del 0 al 9 (recorda que el 10 ja no forma part, ja que no acompleix la condici\u00f3)</p> Java<pre><code>for (int i=0;i&lt;10;i=i+2){\n    printf(i);\n}\n</code></pre> <p>aquest bucle imprimeix del 0,2,4,6 i 8. L'increment en aquest cas es fa de 2 en 2</p> <p>Java<pre><code>for (int i=30;i&gt;=0;i=i-5){\n    printf(i);\n}\n</code></pre> aquest bucle mostrar\u00e0 30,25,20,15,10,5,0. Comen\u00e7a de 30 i va baixant de 5 en 5 fins a 0 (incl\u00f2s)</p> <p>En <code>Python</code> existeix tamb\u00e9 una variable que controla el bucle. La difer\u00e8ncia \u00e9s que hem d'indicar la seq\u00fcencia de valors que volem que prenga dita variable en forma de llistat o tupla. Parlarem de les tuples o llistats m\u00e9s endavant. Tot aix\u00f2 s'aconsegueix amb la funci\u00f3 <code>range()</code>, que \u00e9s molt completa i admet molts argument, per la qual cosa anem a fer un miniapartat per a explicar-la.</p>"},{"location":"U02%20Python/03_Estructures_de_control/#range","title":"<code>range()</code>","text":"<p>La seua sintaxi \u00e9s <code>range([start,] stop[, step])</code>:</p> <ul> <li><code>start</code> \u2192 indica des de quin n\u00famero comen\u00e7a la seq\u00fcencia. Si no s'indica s'escomen\u00e7a desde <code>0</code>.</li> <li><code>stop</code> \u2192 indica fins a quin l\u00edmit arribarem. La seq\u00fcencia acaba en l'anterior a <code>stop</code>.</li> <li><code>step</code> \u2192 indica de quant en quan es modifica la seq\u00fcencia. Si no es posa res va de 1 en 1 de manera ascendent. Aquest atribut no pot ser zero</li> </ul> <p>Example</p> Python<pre><code>&gt;&gt;&gt; range(10)                       # 10 n\u00fameros\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]      # Del 0 al 9\n&gt;&gt;&gt; range(0,5)                      # 5 numeros\n[0, 1, 2, 3, 4]                     # Del 0 al 4\n&gt;&gt;&gt; range(0,10,2)           \n[0, 2, 4, 6, 8]\n&gt;&gt;&gt; range(10,0,2)         # Est\u00e0 mal, no puc anar del 10 al 0\n[]                        # anant de 2 en 2      \n&gt;&gt;&gt; range(10,0,-2)              # Ara s\u00ed\n[10, 8, 6, 4, 2]\n&gt;&gt;&gt; range(0,51,10)\n[0, 10, 20, 30, 40, 50]\n\n# Si volem del 1 al 100\n&gt;&gt;&gt;range(1,101)\n\n&gt;&gt;&gt; range(1,10,0)\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nValueError: range() step argument must not be zero\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/#334-for-en-python","title":"3.3.4. <code>for</code> en <code>Python</code>","text":"<p>Vista la funci\u00f3 <code>range()</code> podem veure el bucle for en <code>Python</code>:</p> Python<pre><code>for variable in llista:\n  accio1\n  accio2\n  ...\n</code></pre> <p>Es repeteix el bucle executant-se les accions on la varaible pren com a valor cada element de la llista. Si volem que la llista sigui una serie de n\u00fameros, ho substituirem per la funci\u00f3 <code>range()</code> vista anteriorment. Vegem els seg\u00fcents exemples, comparant-ho amb <code>Java</code>.</p> Exercici resolt Imprimir un llistat del 1 al 10: Python<pre><code>for i un range(1,11):\n    print(i)\n</code></pre> Exercici resolt Imprimir la taula de multiplicar de 3 Python<pre><code>for i un range(1,11):\n    print(\"3*\",i,\"=\",3*i)\n</code></pre> Exercici resolt Imprimir els numeros parells des del 40 fins al 0 (no incl\u00f2s) Python<pre><code>for i un range(40,0,-2):\n    print(i)\n</code></pre> <p>Veurem m\u00e9s avantages del <code>for</code> quan estudiem els vectors o tuples.</p>"},{"location":"U02%20Python/03_Estructures_de_control/#335-bucles-infinits","title":"3.3.5. Bucles infinits","text":"<p>Com hem vist abans, moltes vegades per error podem escriure bucles infinits, cosa que pot portar el sistema inform\u00e0tic a inestabilitats. Per\u00f2, moltes vegades ens interessar\u00e0 programa un bucle infinit i, de fet, \u00e9s fan servir molt\u00edssim. Pensem per exemple en un caixer autom\u00e0tic. El programa est\u00e0 en una espera infinita a que algun usuari vaja a executar algun procediment. Quan un usuari va i posa la targeta el programa propiment dit l'aten. Quan l'usuari acaba d'operar, el caixer es torna a posar en dita espera infinita. Vejam l'algorsime:</p> Text Only<pre><code>// ALGORISME CAIXER\n\n// Alg\u00fa encen el caixer autom\u00e0tic\nper sempre:\n    esperar_introduccio_targeta()\n    intent_pin=1\n    seguir=false\n    mentre (intents_pin&lt;=3)\n        PIN==llegir(\"Posa el PIN de la targeta\")\n        si  (PIN_OK(PIN))   // comprovar el PIN\n            seguir=true\n        sino\n            intents_pin=intents_pin+1\n        fi_si\n    fi_mentre\n    si (not seguir)  // pin incorrecte\n        tragar targeta\n        mostrar missatge\n    sino\n        operacio=llegir(\"Que vols fer\")\n        si (operacio==1)\n            // consultar saldo\n        sino si (operacio==2)\n            // treure diners\n        ...\n        ...\n    fi_si\nfi_per_sempre \n\n// alg\u00fa apaga el caixer autom\u00e0tic\n</code></pre> <p>Com aconseguim programar un <code>per_sempre</code> que hem indicat. La resposta es senzilla per\u00f2 no evident. Posar una condici\u00f3 que sempre siga certa i que sigui inmutable (que no es modifique)</p> Python<pre><code>while True:\n    accio1\n    accio2\n    ...\n</code></pre> <p>D'aquesta manera entrem al bucle i passe el que passe dins de les accions, el <code>True</code> com \u00e9s una constant no ser\u00e0 mai modificat, i llavors no eixirem del bucle.</p> <p>NOTA: No te sentit fer en algun lloc <code>while False:</code>, ja que en eixe bucle no s'entra mai (millor no escriure res).</p>"},{"location":"U02%20Python/03_Estructures_de_control/#ruptura-de-bucles-break-continue-i-else-als-bucles","title":"Ruptura de bucles. <code>break</code>, <code>continue</code> i <code>else</code> als bucles","text":"<p>Tot aix\u00f2 dels bucles infinits est\u00e0 molt be, per\u00f2 com podem eixir d'un bucle infinit? La resposta ens la dona la sent\u00e8ncia <code>break</code>, que ens permet eixir d'un bucle (independentment de la condici\u00f3, siga infinit o no):</p> <ul> <li><code>break</code> interromp l\u2019execucio\u0301 del bucle i seguim per la instruccio\u0301 seguent fora del bucle.</li> <li><code>continue</code> fa que el programa comence altra iteracio\u0301, encara que no s\u2019haja acabat l\u2019actual. Per tant les li\u0301nies que hi han dins d\u2019un bucle per davall del continue no s\u2019executen. Cas d\u2019estar dins d\u2019un <code>for</code>, anirem a l\u2019increment de la variable comptadora o al seg\u00fcent element de la llista.</li> <li><code>else</code> s'afig un bloc adicional a un bucle <code>while</code> que s'executar\u00e0 quan hem eixit del bucle debut a la falsetat de la condici\u00f3 del mateix, i no quan hem eixit per un <code>break</code>. No \u00e9s gaire intuitiu. </li> </ul> <p>!!! Example Exemple Python<pre><code>for i in range(20):         # Aix\u00f2 recorre del 0 al 19\n    print(i)\n    if i&lt;10:\n        continue\n    if i%2==0:\n        print(\"Es parell\")\n    if i&gt;=15:\n        break\n\nprint(\"Final del bucle\")\n</code></pre></p> <p>Aquest programa sols te sentit acad\u00e8mic, per entendre que far\u00e0 cada cosa:</p> <ul> <li>Imprimim el numero.</li> <li>Si els numeros son inferiors a 10 passem al seg\u00fcent nu\u00fameo (<code>continue</code>). Fixa't que ens botem tot el que queda dins del bucle</li> <li>Si es parell ho mostrem</li> <li>En arribar al 15 acabem el bucle (<code>break</code>), de manera que del 16 al 19 ja no es fa res m\u00e9s.</li> </ul> Text Only<pre><code>0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nEs parell\n11\n12\nEs parell\n13\n14\nEs parell\n15\nFinal del bucle\n</code></pre> <p>!!! notes NOTES: </p> <ul> <li>Les sent\u00e8ncies <code>break</code> i <code>continue</code> sempre es posaran dins d'un <code>if</code>, ja que sin\u00f3 s'executaran sempre dins del cos del bucle.</li> <li>El <code>break</code> permet eixir del bucle m\u00e9s niuat que hi ha. Si per exemple estem dins de un bucle niuat i volem acabar en tots els bucles, necessitarem dos <code>break</code> (un per cada bucle)</li> </ul>"},{"location":"U02%20Python/03_Estructures_de_control/#336-bucle-de-demanar-dades","title":"3.3.6. Bucle de demanar dades","text":"<p>Una de les parts m\u00e9s importants a l'hora de programar \u00e9s demanar dades a l'usuari, i penseu que l'usuari ser\u00e0 una gran font d'errors del nostre programa. Penseu que dins del sistema inform\u00e0tic, qui m\u00e9s errors provoca \u00e9s l'usuari, ja que fa clic on no toca, posa lletres quan correspon n\u00fameros i mai llig la documentaci\u00f3 ni els misstges d'error dels programes. \u00c9s per aix\u00f2 que deguem de ser molt cautelosos a l'hora de validar la informaci\u00f3 que ens dona. Par a practicar-ho anem a fer un exemple complet i ens servir\u00e0 tamb\u00e9 per a introduir el concepte d'excepcions.</p> <p>Exercici resolt Volem fer un programa que demana un n\u00famero i calcula el doble del mateix. Volem for\u00e7ar que el n\u00famero sigui positiu. En acabar preguntar\u00e0 a l'usuari si vol eixir o no, tinguent com a possibles respostes <code>s</code>o <code>n</code>. Cas de no voler sortir repetirem el mateix proc\u00e9s.</p> Soluci\u00f3 1 Fem el programa que demana un n\u00famero i calcula el doble del mateix Python<pre><code>n=int(input(\"Dona'm un numero: \"))\nprint(\"El numero es\",n,\"i el seu doble\",2*n)\n</code></pre> <p>Mirem que passa a l'executar:</p> Text Only<pre><code>Dona'm un numero: 4\nEl numero es 4 i el seu doble 8\nDona'm un numero: -5\nEl numero es -5 i el seu doble -10\nDona'm un numero: Hola\nTraceback (most recent call last):\n  File \"proves.py\", line 1, in &lt;module&gt;\n    n=int(input(\"Dona'm un numero: \"))\nValueError: invalid literal for int() with base 10: 'Hola'\n</code></pre> <p>Oc\u00f3rre que:</p> <ul> <li>si podem tenir n\u00fameros negatius, </li> <li>el programa demana un n\u00famero, fa l'operaci\u00f3 i acaba.</li> </ul> Millora 1 Preguntem a l'usuari si vol acabar <p>Per a fer aquesta millora anem a fer un bucle infinit, on posarem al cos del bucle el que hem programat anteriorment, afegint la pregunta a l'usuari si vol acabar o no, i en cas de voler acabar, trencarem el bucle.</p> Python<pre><code>while True:\n    # Demanem el numero i calculem el doble\n    n=int(input(\"Dona'm un numero: \"))\n    print(\"El numero es\",n,\"i el seu doble\",2*n)\n\n    # Preguntem a l'usuari si vol continuar\n    resposta=input(\"Vols eixir del programa (s/n): \")\n    if resposta=='s' or resposta=='S':\n        break\n\nprint(\"Acabant el programa. Adeu\")\n</code></pre> <p>A l'executar apareix:</p> Text Only<pre><code>Dona'm un numero: 3\nEl numero es 3 i el seu doble 6\nVols eixir del programa (s/n): n\nDona'm un numero: 12\nEl numero es 12 i el seu doble 24\nVols eixir del programa (s/n): k        &lt;ATENCI\u00d3&gt;\nDona'm un numero: -3                    &lt;ATENCI\u00d3&gt;\nEl numero es -3 i el seu doble -6\nVols eixir del programa (s/n): s\n</code></pre> <p>Oc\u00f3rre que:</p> <ul> <li>Encara permet n\u00fameros negatius</li> <li>Permet tot tipus de lletres com a resposta. Amb la 's' eixim, per\u00f2 seguim amb la <code>n</code>, la <code>k</code> i altres.</li> </ul> Millora 2. Validaci\u00f3 dels inputs Per a fer aquesta millora anem a fer un bucle per a cada entrada de dades, fins permetre valors v\u00e0lids: n\u00fameros positius en la primera entrada i unas <code>s</code> o <code>n</code> en la segona. Python<pre><code>while True:\n    # Demanem el numero i calculem el doble\n    # iniciem el n\u00famero a un valor incorrecte\n    n=-1\n    while n&lt;0:      # mentre el numero siga incorrecte\n        n=int(input(\"Dona'm un numero: \"))      # Demanem el numero\n        if (n&lt;0):                               # Si est\u00e0 fora de rang li recordem a l'usuari\n            print(\"El n\u00famero ha de ser positiu. \",end='')   # end='' per a no botar de linia\n\n    # Ja fora del bucle. Vol dir que el n\u00famero \u00e9s ja positiu\n    # Fem els calcul\n    print(\"El numero es\",n,\"i el seu doble\",2*n)\n\n    # Preguntem a l'usuari si vol continuar\n    resposta='z'    # iniciem a un valor incorrecte\n    while resposta!='s' and resposta != 'n':\n        resposta=input(\"Vols eixir del programa (s/n): \")\n        if resposta!='s' and resposta != 'n':\n            print(\"Selecciona una de les lletres correctes. \",end='')\n\n    if resposta=='s' or resposta=='S':\n        break\n\nprint(\"Acabant el programa. Adeu\")\n</code></pre> <p>A l'executar comprovem que tot est\u00e0 funcionant de manera correcta:</p> Text Only<pre><code>Dona'm un numero: 6\nEl numero es 6 i el seu doble 12\nVols eixir del programa (s/n): n\nDona'm un numero: 2\nEl numero es 2 i el seu doble 4\nVols eixir del programa (s/n): k\nSelecciona una de les lletres correctes. Vols eixir del programa (s/n): n\nDona'm un numero: -4\nEl n\u00famero ha de ser positiu. Dona'm un numero: -17\nEl n\u00famero ha de ser positiu. Dona'm un numero: 90\nEl numero es 90 i el seu doble 180\nVols eixir del programa (s/n): s\nAcabant el programa. Adeu\n</code></pre>"},{"location":"U02%20Python/03_Estructures_de_control/#337-else-en-bucles","title":"3.3.7. <code>else</code> en bucles","text":"<p>La sent\u00e8ncia <code>else</code> normalment va precedida d'un <code>if</code> com hem vist al seu moment, per\u00f2 en <code>Python</code> pot anat precedida d'un bucle. Quan es fa servir amb bucles les ordres que posem al <code>else</code> s'executaran sempre que no s'haja executat un <code>break</code>. \u00c9s una manera de controlar si el bucle ha acabat per ell mateix o per un <code>break</code></p> Text Only<pre><code>bucle:\n    sentencies\n    if condicio:\n        break\nelse:\n    # coses a posar quan el bucle acaba per ell mateix. Sense break \n</code></pre> <p>La part del <code>else</code> s'executar\u00e0 sols quan el bucle ha acabat de manera normal:</p> <ul> <li>En un <code>while</code> per que la condici\u00f3 \u00e9s <code>False</code></li> <li>En un <code>for</code> per que s'han recorregut els elements de la llista</li> <li>Sols te sentit posar <code>else</code> en bucles que tinguen <code>break</code>. Sin\u00f3 tenen <code>break</code> eixe codi s'executa sempre</li> </ul>"},{"location":"U02%20Python/03_Estructures_de_control/#338-la-sentencia-pass","title":"3.3.8. La sent\u00e8ncia <code>pass</code>","text":"<p>La sent\u00e8ncia <code>pass</code> \u00e9s fa servir quan volem deixar alguna zona del programa sense codi, be perqu\u00e8 estem a les fases inicials del programa i ho deixem per a despr\u00e8s, be per millorar la llegibilitat. Simplement \u00e9s una sent\u00e8ncia que no fa res. Exemples:</p> <p>Python<pre><code>if x&gt;1000:\n    print(\"numero massa gran\")\nelse:\n    pass\n</code></pre> Encara no sabem que farem al <code>else</code>, per\u00f2 de moment l'escric i m\u00e9s endavant veurem. </p> <p><code>pass</code> es fa servir all\u00ed on cal posar una sent\u00e8ncia de manera obligat\u00f2ria per\u00f2 no volem posar res. Apareix molt en la POO (Programaci\u00f3 Orientada a Objectes),  per a crear classes i/o m\u00e8todes buits:</p> Python<pre><code>class prova:\n    pass\n\ndef metodeQueSeQueFarePeroEncaraNoVullFer:\n    pass        # Pendent d'implementar\n</code></pre>"},{"location":"U02%20Python/04_Funcions/","title":"4. Funcions","text":""},{"location":"U02%20Python/04_Funcions/#41-que-son-i-per-a-que-sutilitzen","title":"4.1 Qu\u00e8 son i per a qu\u00e8 s'utilitzen","text":"<p>Si un programa \u00e9s molt llarg, \u00e9s a dir, ocupa moltes l\u00ednies de codi, tendix a complicar-se molt i a ser cost\u00f3s d\u2019entendre. </p> <p>Per tant, basant-nos en la idea de dividix i vencer\u00e0s, farem \u00fas de la t\u00e8cnica coneguda com descomposici\u00f3 modular, amb la qual cosa es descompon el programa (m\u00f2dul) en m\u00f2duls m\u00e9s xicotets i, per tant, m\u00e9s f\u00e0cils d\u2019entendre. Eixe proc\u00e9s tamb\u00e9 \u00e9s conegut com disseny descendent o top-down.</p> <p></p> <p>Aix\u00f2 s\u2019aconseguix amb les subrutines. Tamb\u00e9 anomenades subprogrames, funcions, procediments, m\u00f2duls o b\u00e9 m\u00e8todes, en el cas de llenguatges orientats a objectes, com Java.</p> <p>Cal anar fent eixa descomposici\u00f3 successivament. Per\u00f2 fins quan? Hem de parar de descompondre quan un m\u00f2dul (o funci\u00f3, m\u00e8tode...) fa\u00e7a una feina molt concreta.</p> <p>Definici\u00f3 de funci\u00f3</p> <p>Una funci\u00f3 \u00e9s un bloc d\u2019instruccions que executa una tasca concreta i a la qual se li d\u00f3na un nom. Esta funci\u00f3 \u00e9s invocada des d\u2019altra o altres funcions.</p> <p>Els avantatges de la descomposici\u00f3 modular s\u00f3n:</p> <ul> <li>Facilita la resoluci\u00f3 d\u2019un problema.</li> <li>Facilita modificacions posteriors ja que els programes s\u00f3n m\u00e9s f\u00e0cils de llegir.</li> <li>Reduix el temps de desenvolupament, usant m\u00f2duls ja implementats.</li> <li>Diversos programadors poden col\u00b7laborar en la resoluci\u00f3 d\u2019un problema.</li> <li>Millora la depuraci\u00f3, ja que podem anar corregint m\u00f2duls individualment.</li> </ul>"},{"location":"U02%20Python/04_Funcions/#42-declaracio-de-funcions-en-python","title":"4.2. Declaraci\u00f3 de funcions en <code>Python</code>","text":"Python<pre><code>def nom_funcio(param1, param2, ..., paramN):\n    sentencia1        # cos de la funci\u00f3 indentat\n    ...\n    sentenciaN\n    [return expressio]\n</code></pre> <p>On tenim que:</p> <ul> <li><code>def nomFuncio</code> serveix per a indicar que estem creant una funci\u00f3, amb el nom indicat. El nom ha de complir les regles de creaci\u00f3 dels noms.</li> <li><code>param1, param2, ..., paramN</code> \u2192 \u00e9s la llista de par\u00e0metres, separades per comes que ser\u00e0n l'entrada de la funci\u00f3.</li> <li>Despr\u00e8s es posar\u00e0 el car\u00e0cter <code>:</code> i a continuaci\u00f3 un bloc indentat el cos de la funci\u00f3.</li> <li><code>return expressi\u00f3</code> \u2192 Si la funci\u00f3 ha de retornar un valor, al final de la funci\u00f3 cal posar la paraula return junt a la dada o expressi\u00f3 que ha de retornar.</li> </ul> Funci\u00f3 que calcula la mitjana Python<pre><code>def calcMitja (suma, num):{\n      mitjana=suma / num;\n      return mitjana\n</code></pre>"},{"location":"U02%20Python/04_Funcions/#43-ambit-i-visibilitat-de-varibles","title":"4.3. \u00c0mbit i visibilitat de varibles","text":"<p>Hi ha distints tipus de variables, sense tenir en compte el seu tipus. Es poden classificar atenent a diferents criteris, i el m\u00e9s important \u00e9s l\u2019\u00e0mbit o visibilitat, que \u00e9s la zona del programa on la variable \u00e9s accessible. Dep\u00e9n d\u2019on s\u2019ha declarat la variable:</p> <ul> <li>Variables globals </li> <li>Variables locals</li> <li>Par\u00e0metres formals</li> </ul> <p>Altra classificaci\u00f3 \u00e9s segons el temps de vida: duraci\u00f3 en mem\u00f2ria de la variable. Dep\u00e9n d\u2019un especificador opcional de la variable. Ja es veur\u00e0 m\u00e9s endavant.</p>"},{"location":"U02%20Python/04_Funcions/#431-variables-globals","title":"4.3.1 Variables globals","text":"<p>Es definixen fora de les funcions (dins la classe en <code>Java</code>, o el programa principal en <code>Python</code>). El seu \u00e0mbit \u00e9s qualsevol funci\u00f3 de la classe.</p> <p>En <code>Python</code> son globals totes aquelles funcions que estan definides fora de qualssevol funci\u00f3.</p>"},{"location":"U02%20Python/04_Funcions/#432-variables-locals","title":"4.3.2 Variables locals","text":"<p>Es definixen al principi d\u2019un bloc de sent\u00e8ncies (b\u00e9 d\u2019una funci\u00f3 o d\u2019un bloc an\u00f2nim que h\u00e0gem creat, com un bucle).</p> <p>El seu \u00e0mbit \u00e9s el bloc on estan definides, i el temps d\u2019execuci\u00f3 \u00e9s des que comen\u00e7a el bloc fins que acaba. \u00c9s a dir: es crea quan s\u2019entra al bloc i es destruix quan s\u2019ix. </p> Example Python<pre><code>def func():\n    local1=4;       # Variable local a la funci\u00f3 func  \n    ...\n    if condicio:\n        local2=32;      #Variable local a este nou bloc.\n        # La variable local1 tamb\u00e9 \u00e9s accessible des d'ac\u00ed,\n        #  actuant com a global. \n        local2=2*local1\n        ...\n</code></pre>"},{"location":"U02%20Python/04_Funcions/#433-parametres-formals","title":"4.3.3 Par\u00e0metres formals","text":"<p>S\u00f3n variables d\u2019enlla\u00e7 entre la crida a una funci\u00f3 i la definici\u00f3 de la funci\u00f3. </p> <p>Estan definides entre els par\u00e8ntesis de la cap\u00e7alera de la definici\u00f3 de la funci\u00f3.</p> <p>L\u2019\u00e0mbit i comportament \u00e9s el mateix que les variables locals en la funci\u00f3 on estan definides: es creen en entrar a la funci\u00f3 i es destruixen en eixir. </p> Par\u00e0metres formals Python<pre><code>def func (x, y, z):\n  // x, y i z s\u00f3n par\u00e0metres formals, que actuen com a locals a la funci\u00f3 func\n  pass\n  ...\n</code></pre> <p>Tenir en compte que canvis als par\u00e0metres formal no afecten als actuals (als de la crida):</p> Example Python<pre><code>def sumar2(x,y):\n  x=x+1\n  return x+y\n\na=3\nb=4\nprint(\"a={} y b={} y la suma es {}\".format(a,b,sumar2(a,b)))\n</code></pre> <p>Encara que es sume el valor a la x (local a la funci\u00f3) el valor de a no \u00e9s modifica (variable local).</p>"},{"location":"U02%20Python/04_Funcions/#44-mes-sobre-parametres","title":"4.4 M\u00e9s sobre par\u00e1metres","text":""},{"location":"U02%20Python/04_Funcions/#441-valor-per-defecte-dels-paramters","title":"4.4.1 Valor per defecte dels par\u00e0mters","text":"<p>En python podem asignar valors per defecte als par\u00e0metres, inicialitzant-los en la pr\u00f2pia funci\u00f3. Aix\u00f2 tamb\u00e9 ens permetr\u00e0 el cridar-los sense importar la posici\u00f3:</p> Proves de diversos arguments Python<pre><code>def volum(alt=10,ample=20,fons=30):\n    print(\"El volumn de {}x{}x{}={}\".format(alt,ample,fons,alt*ample*fons))\n\nvolum()         \n# Valors per defecte 'El volumn de 10x20x30=6000'\nvolum(50,60,70)\n# Valors dels par\u00e0metres actuals 'El volumn de 50x60x70=210000'\nvolum(ample=50)\n# Combinaci\u00f3 'El volumn de 10x50x30=15000'\nvolum(40,fons=10,alt=20)\n# ERROR, a alt li assignem dos valors !!!\n</code></pre>"},{"location":"U02%20Python/04_Funcions/#442-parametres-multiples","title":"4.4.2 Par\u00e0metres m\u00faltiples","text":"<p>De vegades no sabem quans par\u00e0metres passare, com per exemple la funci\u00f3 <code>print()</code> que adment molts par\u00e0metres, aix\u00f2 ho aconseguim indicant que rebrem una colecci\u00f3 de par\u00e0metres, com segueix:</p> M\u00faltiples par\u00e0mtres Python<pre><code>def sumaMolts(*args):\n    sum=0\n    for num in args:\n        sum+=num\n    return sum\n\nprint(sumaMolts(5))\nprint(sumaMolts(5,5,2,7))\nprint(sumaMolts())\n</code></pre> <p>args \u00e9s una col\u00b7lecci\u00f3 de tipus <code>tupla</code>, de la que parlarem m\u00e9s endavant</p> <p>Si volem passar una col\u00b7lecci\u00f3 de atributs, valors, com si fos un diccionari podriem fer-ho amb la seg\u00fcent sintaxi:</p> Example Python<pre><code>def coleccion(**elements):\n    print(type(elements))\n    for elem in elements:\n        print(elem,\"-\",elements[elem])\n\ncoleccion(v1=\"hola\",v2=35.56,v3=True,v4=None,v5='text')\n\n\"\"\" Eixida del programa\n&lt;class 'dict'&gt;\nv1 - hola\nv2 - 35.56\nv3 - True\nv4 - None\nv5 - text\n\"\"\"\n</code></pre>"},{"location":"U02%20Python/04_Funcions/#443-tipat-dels-parametres","title":"4.4.3 Tipat dels par\u00e0metres","text":"<p>A python, despr\u00e8s de la seua creaci\u00f3 es va afegir la possibilitat d'indicar el tipat, tant dels par\u00e0metres com el tipus de retorn, de la mateixa manera que Java:</p> Java<pre><code>public int suma(int a, int b){\n  return a+b;\n}\n</code></pre> Python<pre><code>def suma(a:int,b:int) -&gt; int:\n    return a+b\n</code></pre> <p>Simplement \u00e9s una eina per a la comprovaci\u00f3 de tipat mitjan\u00e7ant eines externes, ja que l'interpret de Python no verifica res d'aix\u00f2. M\u00e9s informaci\u00f3 al seg\u00fcent enlla\u00e7.</p> <p>Eines per a comprovar els tipus podem trobar <code>mypy</code> o <code>pydantic</code> </p>"},{"location":"U02%20Python/05_Estructures_de_dades/","title":"5. Estructures de dades","text":"<p>En aquesta unitat anem a treballar les estructures b\u00e0siques d'emmagatzematgee de dades que ens ofereix Python. Ser\u00e0 inevitable fer una comparaci\u00f3 amb els vectors i ArrayList d'altres llenguatges com Java.</p>"},{"location":"U02%20Python/05_Estructures_de_dades/#51-llistes-list","title":"5.1 Llistes (<code>list</code>)","text":"<p>Les llistes s\u00f3n una estructura que cont\u00e9 una s\u00e8rie d'elements ordenats, delimitades per claud\u00e0tors (<code>[]</code>) i separades per comes (<code>,</code>).</p> Atenci\u00f3 <p>El fet que estigui ordenat implica que hi ha un primer element, un segon, etc. i que podem accedir als elements per la seua posici\u00f3. No vol dir que el tingui un contingut ordenat</p> <p>Aquest elements poden ser del mateix tipus o tindre tipus heterogenis, com \u00f2dem veure a continuaci\u00f3:</p> Possibles llistes Python<pre><code># llista de cadenes\nnoms=[\"Pere\",\"Joan\",\"Anna\"]\n\n# llista de valors\nnotes=[7.4,3.7,8.0]\n\n# llista de `coses``\ndades=[\"Pere\",True,4.7,None]\n</code></pre> <p>Encara que hi ha diverses maneres de afegir i eliminar, comentem les m\u00e9s legibles i habituals:</p> <ul> <li><code>llista.append(element)</code> --&gt; afig l'element al final de la llista.</li> <li><code>llista.insert(index,element)</code> --&gt; afig l'element en la posici\u00f3 determinada per \u00edndex. Si l'\u00edndex est\u00e0 fora de rang, ho posa al final.</li> <li><code>llista.remove(element)</code> --&gt; elimina l'element de la llista. Si n\u00f3 existeix botar\u00e0 l'error <code>ValueError</code></li> </ul> <p>Per a consultar i/o modificar elements concrets farem servir la notaci\u00f3 dels claud\u00e0tors com si foren vectors de C o Java:</p> <ul> <li><code>print(llista[3])</code></li> <li><code>llista[3]=\"Pep\"</code></li> </ul> <p>Per a rec\u00f2rrer les llistes de manera seq\u00fcencial, podem recorrer a distints tipus de bucles for:</p> Recorregut sense \u00edndex <p>En aquest exemple, una variable prendr\u00e0 el valor de cada element de la llista: Python<pre><code>for element in llista:\n    print(element)\n</code></pre></p> Recorregut amb \u00edndex <p>En aquest exemple, una variable prendr\u00e0 els valor dels distints \u00edndex de la llista. Farem servir la funcio <code>range(n)</code> que torna un valor entre <code>0</code> i l'anterior a <code>n</code> i la funci\u00f3 <code>len(llista)</code> que ens retorna el tamany de la llista: Python<pre><code>for i in range(len(llista)):\n    print(noms[i])\n</code></pre></p> <p>Per \u00faltim, podem utilitzar l'operador <code>in</code> per a saber si un element est\u00e0 o no a una llista, per exemple per a poder esborrarlo sense problemes</p> Python<pre><code>if element in llista:\n    pass\n</code></pre>"},{"location":"U02%20Python/05_Estructures_de_dades/#511-slicing-rebanar","title":"5.1.1 Slicing (rebanar)","text":"<p>El slicing \u00e9s una manera de treballar, una mica complexa, que ens serveix per a rebanar o extreure una porci\u00f3 de la llista. Fa servir la notaci\u00f3 dels dos punts <code>inici:fi[:bot]</code>.  Aquesta notaci\u00f3 representa comen\u00e7ar a l'inici fins a l'anterior al fi, visitnt els elements segons el bot indicat (si bot no apareix, val 1).</p> <p>Quan els valors d'inici o fi son negatius, comencen a contar-se desde la dreta cap l'esquerre, per\u00f2 \u00e9s poc natural, i es recomana sols en circumst\u00e0nices concretes</p> <p>Anem a veure-ho mitjan\u00e7ant exemples. A la plataforma tens un arxiu <code>nba.txt</code> amb el llistat d'equips de la nba. Amb el seg\u00fcent codi:</p> Python<pre><code>nba=[]    # llista buida\ndata=open('nba.txt','r').read() # llegim les dades\nnba=data.split('\\n')    #trocejem pel bot de linia i ja tenim la llista\nprint(nba)\nprint(len(nba))\n\nprint(nba[2:5]) # mostra de la casella 2 a la 4 (\u00faltima-1)\nprint(nba[2:])  # mostra de la casella 2 al final\nprint(nba[:5])  # mostra fins la casella 4 (\u00faltima -1)\nprint(nba[-1:]) # mostra l'\u00faltim\nprint(nba[-3:]) # mostra els 3 \u00faltims\nprint(nba[-5:-3]) # Mostra des de el 5t per la dreta al tercer per la dreta\n</code></pre>"},{"location":"U02%20Python/05_Estructures_de_dades/#512-altres-metodes","title":"5.1.2 Altres m\u00e8todes","text":"<ul> <li><code>del llista[index]</code> \u2192 Per eliminar una element de la llista, sense saber el seu valor </li> <li><code>llista.pop()</code> \u2192 Per eliminar i retornar l'\u00faltim element de la llista</li> <li><code>llista.count(element)</code>  \u2192 retorna el numero d'ocurr\u00e8ncies de l'element a la llista</li> <li><code>llista.sort()</code> \u2192 ordena ascendentment els elements de la llista. Si volem descendent posarem <code>[reverse=True]</code>.</li> </ul>"},{"location":"U02%20Python/05_Estructures_de_dades/#52-tuples-tuple","title":"5.2 Tuples (<code>tuple</code>)","text":"<p>Les tuples son estructures semblants a les llistes, per\u00f2 amb la gran salvetat que son inmutables, \u00e9s a dir, no poden modificar-se.</p> <p>Aix\u00f2 les fa molt m\u00e9s eficients en quant a consum de recursos, per\u00f2 clar, hem d'estar segurs que les dades no necessitarem que canvien. Altres difer\u00e8ncies:</p> <ul> <li>S'inicien amb <code>()</code> en compte de <code>[]</code></li> <li>No podem modificar amb tupla[index]=elemet</li> <li>No disposen dels operadors <code>append</code>, <code>remove</code> i qualssevol altre que les modifiquen</li> </ul>"},{"location":"U02%20Python/05_Estructures_de_dades/#53-diccionaris-dict","title":"5.3 Diccionaris (<code>dict</code>)","text":"<p>Un diccionari \u00e9s una colecci\u00f3 d'elements etiquetats, amb la manera <code>etiqueta:valor</code>. Ve a ser el que coneixem amb un objecte <code>JSON</code>. Aix\u00f2 ens permetr\u00e0, entre altres coses l'accedir a un element, no sols pel seu \u00edndex, sin\u00f3 per la seua etiqueta:</p> Python<pre><code>edats = {\"Anna\": 35, \"Jaume\": 18, \"Pere\": 17}\n\nprint(edats[\"Pere\"]) # Retorna 18\n</code></pre> <p>Els diccionaris poden contenir qualssevol tipus de dades al seu valor. Vegem algunes funcions \u00fatils autoexplicades:</p> Python<pre><code>telefons={'Pere':123456,'Ana':7483943,'Joan':None}\n\nprint(telefons['Ana'])      \n\n#print(telefons['Pau'])  #Excepci\u00f3 `KeyError``\n\nprint(telefons.get('Pau'))  # Com no esta torna None, per\u00f2 no dona error\n\ndel(telefons['Ana'])      #Elimina la entrada del diccionari\nprint(telefons)\n\nnoms = ['Xavi', 'Elisa', 'Maria']\ntelefons = dict.fromkeys(noms, None)  # Aquestes son les claus, sense valors\nprint(telefons)\n#{'Xavi': None, 'Elisa': None, 'Maria': None}\n\nprint('Xavi' in telefons)\n\n# Crear a partir de un json\nimport json\njsonstring = '{ \"nom\": \"erik\", \"edat\": 38, \"casat\": true}'\npersona=json.loads(jsonstring)\nprint(persona)\n\n# recuperar les claus i els valors per separat\nprint(persona.keys())\nprint(persona.values())\n\n# recuperar els elements\nfor clau,valor in persona.items():\n    print(clau,\"-\",valor)\n\n# nom - erik\n# edat - 38\n# casat - True\n</code></pre>"},{"location":"U02%20Python/06_POO/","title":"6. Programaci\u00f3 orientada a objectes","text":""},{"location":"U02%20Python/06_POO/#61-definicio-de-classes","title":"6.1 Definici\u00f3 de classes","text":""},{"location":"U02%20Python/06_POO/#611-primera-classe","title":"6.1.1 Primera Classe","text":"<p>Python, a l'igual que altres llenguatges de programaci\u00f3 permet la creaci\u00f3 de classes. Podem fer-ho tal i com segueix:</p> Creaci\u00f3 d'una classe <code>Alumne</code> Python<pre><code>class Alumne:\n    pass        # inicialment sense res\n\na=Alumne()      # creem el objecte. \n\nprint(a)        \nprint(type(a))\n</code></pre> <p>Ens mostrar\u00e0 algo com:</p> Text Only<pre><code>&lt;__main__.Alumne object at 0x1029d6250&gt;\n&lt;class '__main__.Alumne'&gt;\n</code></pre> <p>Podem ara afegir atributs a la nostre classe:</p> Python<pre><code>class Alumne:\n    dni=\"\"\n    nom=\"\"\n    cognoms=\"\"\n    edat=0\n\na=Alumne()\n\nprint(\"El nom \u00e9s\",a.nom)\nprint(\"La edat \u00e9s\",a.edat)\n</code></pre> <p>Ens donar\u00e0 que les variables ja tenen valor, i llavors ja tenim els valors iniciats i podem fer servir els atributs. El problema \u00e9s que si ho deixem aix\u00ed tots els objectes tindr\u00e0n el mateix valor als seus atributs. Podriem deixar-ho aix\u00ed en compte de fer un constructor per defecte, encara que ja vorem que \u00e9s convenient el crear-lo com segueix:</p> Creaci\u00f3 d'una classe <code>Alumne</code> amb constructor per defecte Python<pre><code>    class Alumne:\n      def __init__(self):\n        self.nom=\"Pere\"\n        self.edat=22\n\n      def saludar(self):\n        print(\"Hola, soc\",self.nom)\n\n    a=Alumne()      # creem el objecte. \n    a.saludar();\n</code></pre> <p>Fixar-se que ens trobem:</p> <ul> <li><code>__init__</code> \u2192 aquest m\u00e8tode \u00e9s el que es coneix com a constructor i \u00e9s el m\u00e8tode que s'executa quan es crea un objecte</li> <li><code>self</code> \u2192 \u00e9s una variable especial que dins d'un objecte fa refer\u00e8ncia a ell mateix. \u00c9s molt \u00fatil per a distingir quan una variable \u00e9s la del objecte o altra (del programa principal o par\u00e0metre). Aquest <code>self</code> \u00e9s autom\u00e0tic, i no cal passar-lo com a par\u00e0metre, ja que \u00e9s el propi objecte. A <code>Java</code> s'anomena <code>this</code>.</li> </ul> Creaci\u00f3 d'una classe <code>Alumne</code> amb constructor amb par\u00e0metres Python<pre><code>class Alumne:\n  def __init__(self,nom=\"an\u00f2nim\"):\n    self.nom=nom\n    self.edat=22\n\n  def saludar(self):\n    print(\"Hola, soc\",self.nom)\n\na=Alumne()      # creem el objecte per defete. \na.saludar()\n\nb=Alumne(\"Pere\")      # creem el objecte amb valors. \nb.saludar() \n</code></pre> <p>ens donar\u00e0 com a eixida:</p> Text Only<pre><code>Hola, soc an\u00f2nim\nHola, soc Pere\n</code></pre>"},{"location":"U02%20Python/06_POO/#62-visibilitat-dels-atributs","title":"6.2 Visibilitat dels atributs","text":"<p>En la majoria dels llenguatges de programaci\u00f3, quan definim els atributs, hem d'especificar la modalitat d'acc\u00e8s del mateix. Existeixen 3 modificadors, que s\u00f3n <code>private</code> i <code>public</code>, i despr\u00e8s un a meitat dels dos que \u00e9s <code>protected</code>. Dits modificadors indiquen si podem accedir o no als atributs de la classe des de fora d'ella. Repassem-los:</p> <p>Nota: Des de dins de la classe sempre podem accedir als atributs de la mateixa, siguin publics o privats.</p> <ul> <li><code>public</code> \u2192 Podem accedir als atributs des de fora de la classe</li> <li><code>private</code> \u2192 No podem accedir als atributs des de fora de la classe</li> <li><code>protected</code> \u2192 S\u00f3n atributs p\u00fablics, que es convertiran en <code>private</code> en les classes hereves d'on s'han definit. </li> </ul> <p>En Python no existeixen aquestes paraules reservades, per\u00f2 fa servir una manera curiosa de determinar-ho, que \u00e9s la manera en la que posem el nom a les variables. Vejam-ho el seg\u00fcent classe <code>Empleat</code> i fixar-se detingudament en el nom que ens apareix despr\u00e8s de <code>self</code>:</p> Python<pre><code>class Empleat():\n\n    def __init__(self,nom,edat,salari):\n        self.nom=nom\n        self._edat=edat\n        self.__salari=salari\n\nemple=Empleat(\"Pere\",42,1230)\n\nprint(\"El nom es\",emple.nom)\nprint(\"Edat es\",emple._edat)\nprint(\"El salari \u00e9s\",emple.__salari)\n</code></pre> <p>ens produeix la seg\u00fcent sortida</p> Text Only<pre><code>El nom es Pere\nEdat es 42\nTraceback (most recent call last):\n    File \"provaClasses.py\", line 66, in &lt;module&gt;\n    print(\"El salari es\",emple.__salari)\nAttributeError: 'Empleat' object has no attribute '__salari'\n</code></pre> <p>Com podem comprovar:</p> <ul> <li>Per fer un atribut <code>public</code> el farem de manera normal sense fer ninguna cosa especial. El definirem amb <code>self.atribut</code>. Tenim l'exemple amb el <code>self.nom=nom</code>, i posteriorment accedim a ell amb <code>print(\"El nom \u00e9s\",emple.nom)</code> sense cap tipus de problema.</li> <li>Per fer un atribut <code>protected</code> el que farem ser\u00e0 definir l'atribut amb un gui\u00f3 baix al principi, <code>self._atribut</code>. Tenim l'exemple amb <code>self._edat=edat</code>. Com que l'acc\u00e9s per a la classe <code>Empleat</code> \u00e9s p\u00fablic podem seguir treballant amb dita variable desde fora de la classe sense que ens done cap error, amb la qual cosa <code>print(\"L'edat \u00e9s\",emple._edat)</code> funciona sense cap problema. Les particularitats del <code>protected</code> les estudiarem amb l'her\u00e8ncia.</li> <li>Per fer una atribtu <code>private</code> el que farem ser\u00e0 definir l'atribut amb dos guions baixos al principi, <code>self.__atribut</code>. Tenim l'exemple amb <code>self.__salari=salari</code>. Com que ara l'acc\u00e8s \u00e9s privat, llavors des de fora de la classe \u00e9s com si aquest atribut no existira. Llavors si intentem fer <code>print(\"El salari \u00e9s\",emple.__salari)</code> ens bota l'excepci\u00f3 <code>AttributeError</code> amb el missatge  <code>'Empleat' object has no attribute '__salari'</code></li> </ul> Getters i Setters <p>Ni cal dir que la manera m\u00e9s est\u00e0ndar i c\u00f2moda d'accedir als atributs \u00e9s mitjan\u00e7ant els getters i setters, de manera que farem els atributs privats i els m\u00e8todes p\u00fablics</p> Exemple complet Python<pre><code>class Empleat():\n\n    def __init__(self,nom,edat,salari):\n        self.__nom=nom\n        self.__edat=edat\n        self.__salari=salari\n\n    def getNom(self):\n        return self.__nom\n\n    def getEdat(self):\n        return self.__edat\n\n    def getSalari(self):\n        return self.__salari\n\nemple=Empleat(\"Pere\",42,1230)\n\nprint(\"El nom es\",emple.getNom())\nprint(\"Edat es\",emple.getEdat())\nprint(\"El salari \u00e9s\",emple.getSalari())\n</code></pre>"},{"location":"U02%20Python/06_POO/#63-altres-metodes-i-sobrecarrega","title":"6.3 Altres m\u00e8todes i sobrec\u00e0rrega","text":"<p>Existeixen diversos m\u00e8todes interessants que de vegades caldr\u00e0 escriure. Anem a veure'ls i els provem al nostre empleat:</p> toString i equals Python<pre><code>class Empleat():\n\n  def __init__(self,nom,edat,salari):\n      self.__nom=nom\n      self.__edat=edat\n      self.__salari=salari\n\n  def getNom(self):\n      return self.__nom\n\n  def getEdat(self):\n      return self.__edat\n\n  def getSalari(self):\n      return self.__salari\n\n  def __eq__(self, other: object) -&gt; bool:\n      return self.__edat==other.__edat and self.__nom==other.__nom and self.__salari==other.__salari\n\n  def __str__(self) -&gt; str:\n      # return self.__nom + \" te \" + str(self.__edat) + \" i guanya \" + str(self.__salari) + \" euros\"\n      return f'{self.__nom} te {self.__edat} i guanya {self.__salari} euros'\n\nemple=Empleat(\"Pere\",42,1230)\nemple2=Empleat(\"Pere\",42,1230)\n\nprint(emple==emple2)\nprint(emple is emple2)\n\nprint(str(emple))\nprint(emple)\n</code></pre> <p>ense retorna:</p> Text Only<pre><code>True      # tenen els mateixos valors\nFalse     # NO SON el mateix objecte\nPere te 42 i guanya 1230 euros  # representaci\u00f3 del toString\n</code></pre>"},{"location":"U02%20Python/06_POO/#64-herencia","title":"6.4 Her\u00e8ncia","text":"<p>Per a declarar una clase com a hereva d'altra, haurem de posar el seu nom entre par\u00e8tesi. Anem a veure-ho amb altre exemple.</p> Exemple de Her\u00e8ncia Python<pre><code>class Comercial(Empleat):\n  def __init__(self,nom,edat,salari,comisio):\n    # Empleat.__init__(self,nom,edat,salari)  Hi ha que indicar self com a par\u00e0metre\n    super().__init__(nom,edat,salari)    # amb super() i sense self\n    self.__comisio=comisio\n\n  def __str__(self):\n    sou= self.getSalari() + self.__comisio\n    return f'{self.getNom()} te {self.getEdat()} i guanya {sou} euros'\n\ncomercial=Comercial(\"Joange\",46,1200,300)\nprint(comercial)    #Joange te 46 i guanya 1200 euros\n# ams __str__ l'eixida \u00e9s Joange te 46 i guanya 1500 euros\n</code></pre> <p>Com podem veure:</p> <ul> <li><code>Comercial</code> hereta d'<code>Empleat</code></li> <li>El primer que hem de fer al constructor de Comercial \u00e9s cridar al constructor de  Empleat, i com que no existeix <code>super()</code> es fa indicant-ho directament. Aix\u00f2 ens ve de perles tamb\u00e9, ja que Python supporta her\u00e8ncia m\u00faltiple</li> <li>Acabem d'assignar els atributs propis (<code>__comisio</code>)</li> <li>Si no definim el <code>__str__</code>, En la crida dins del print com que no l'hem definit, l'her\u00e8ncia funciona adequadament, i es crida al <code>str</code> de Emplet. Cas de definir-lo, mostraria el missatge <code>Joange te 46 i guanya 1500 euros</code>.</li> </ul>"},{"location":"U02%20Python/07_Projecte/","title":"7. Projecte","text":""},{"location":"U02%20Python/07_Projecte/#les-figures","title":"Les figures","text":""},{"location":"U02%20Python/07_Projecte/#preparem-les-estructures-necessaries","title":"Preparem les estructures necess\u00e0ries","text":"<p>Com a projecte final anem a implementar el cl\u00e0ssic exercici de les figures, on:</p> <ul> <li>Crea una classe <code>Punt</code> amb dos coordenades <code>(x,y)</code>, constructor i getters, setters, str. Implementar:</li> <li>Un m\u00e8tode dist a altre punt passat com argument, que retorna la dist\u00e0ncia euclidea entre dos punts.</li> <li>Un m\u00e8tode dist_x i dist_y que retornen la distancia en horizontal i en vertical entre dos punts.</li> <li>Comprova que el punt el tens ben implementat, executant: Python<pre><code>p1=Punt(2,3)\np2=Punt(3,4)\nprint(\"La distancia entre\",p1,\"i\",p2,\" es \",p1.dist(p2))\n</code></pre></li> <li>Crea una classe <code>Figura</code>, que conte un <code>Punt</code> (la posici\u00f3 on est\u00e0 ubicat) i un color (que ser\u00e0 un String de 7 caracters en hexadecimal). A banda dels m\u00e8todes habituals, tamb\u00e9 contindr\u00e0 dos m\u00e8todes area() i perimetre(), sense implementar. Comprova aquest codi:</li> </ul> <p>Python<pre><code>  p1=Punt(2,3)\n  p2=Punt(3,4)\n  color=\"#34FFDF\"\n  print (f'El color {color} valid={comprovaHEX(color)}')\n  f=Figura(p1,color)\n  print(f)\n</code></pre> - Crea tres classes que hereten de <code>Figura</code>:</p> <ul> <li><code>Rectangle</code>, afegint altre <code>Punt</code>. El <code>Punt</code> propi de <code>Figura</code> ser\u00e0 el superior esquerre, i el que afegeix <code>Rectangle</code> ser\u00e0 l'inferior dret (per convenci\u00f3 el cridarem <code>altre</code>). Reimplementar els m\u00e8todes conforme calen.</li> <li><code>Cercle</code>, afegint un radi. El <code>Punt</code> de <code>Figura</code> suposarem ser\u00e0 el centre del cercle. Reimplementar els m\u00e8todes conforme calen.</li> <li><code>Linia</code>, afegint altre <code>Punt</code>. Reimplementar els m\u00e8todes conforme calen, tenint en compte que l'area \u00e9s 0, i considerarem com a per\u00edmetre la longitud de la l\u00ednia.</li> </ul> <p>Comprova que el codi: Python<pre><code>  p1=Punt(2,3)\n  p2=Punt(3,7)\n  color=\"#34FFDF\"\n  f=Figura(p1,color)\n  print(f)\n\n  l=Linia(p1,p2,color)\n  print(l)\n  print(\"La longitud es\",l.perimetre())\n\n  r=Rectangle(p1,p2,color)\n  print(r)\n  print(\"El per\u00edmetre es\",r.perimetre())\n  print(\"El area es\",r.area())\n\n  c=Cercle(p1,4,color)\n  print(c)\n  print(\"El per\u00edmetre es\",c.perimetre())\n  print(\"El area es\",c.area())\n</code></pre></p> <p>retorna: Text Only<pre><code>Figura situada en (2,3) de color #34FFDF\nLinia situada de (2,3) a (3,7) de color #34FFDF\nLa longitud es 4.123105625617661\nRectangle situada de (2,3) a (3,7) de color #34FFDF\nEl per\u00edmetre es 10\nEl area es 4.0\nCercle situada en centre (2,3) i radi 4 de color #34FFDF\nEl per\u00edmetre es 25.132741228718345\nEl area es 50.26548245743669\n</code></pre></p>"},{"location":"U02%20Python/07_Projecte/#el-dibuix","title":"El dibuix","text":"<p>A banda de les estructures creades, hem de emmagatzemar totes les figures que creem en algun lloc. Eixe lloc ser\u00e0 el nostre dibuix, i per a no complicar les coses ho farem amb una variable global amb la seg\u00fcent estructura: Python<pre><code>Dibuix={\n  \"ample\":800,\n  \"alt\":600,\n  \"Figures\":[]\n}\n</code></pre></p> <p>Com pot veure's, 800x600 s\u00f3n les dimensions per defecte i inicialment no tenim cap figura. \u00c9s en aquest array on anirem guardant-les, tal i com es descriu a continuaci\u00f3.</p>"},{"location":"U02%20Python/07_Projecte/#menu-principal","title":"Menu principal","text":"<p>Un cop dissenyades i preparades les nostres estructures, anem a crear el programa per a poder dibuixar. El programa presentar\u00e0 un men\u00fa com segueix: Text Only<pre><code>Indica el que vols fer:\n  1 - Afegir figura al dibuix\n  2 - Carregar dibuix des de fitxer\n  3 - Exportar  dibuix a SVG\n  4 - Dibuixar i exir\n</code></pre></p> <p>L'usuari escollir\u00e0 l'opci\u00f3 que desitje, com es veu a continuaci\u00f3. Despr\u00e8s  d'executar totes les opcions es retornar\u00e0 de nou a aquest men\u00fa, exepcte en la opci\u00f3 4, com es veur\u00e0 a continuaci\u00f3</p>"},{"location":"U02%20Python/07_Projecte/#1-afegint-figures-al-nostre-dibuix","title":"1. Afegint figures al nostre dibuix","text":"<p>El programa mostrar\u00e0 un nou submen\u00fa, i segons el que triem: Text Only<pre><code>Indica la figura que vols afegir:\n1 - Linia\n  Introdueix les dades de la linia (x1 y1 x2 y2 #color):\n2 - Rectangle\n  Introdueix les dades de la Rectangle (x1 y1 x2 y2 #color): \n3 - Cercle\n  Introdueix les dades de la Cercle (x1 y1 r #color): \n</code></pre></p> <p>L'usari indicar\u00e0 els par\u00e0metres de la figura en q\u00fcesti\u00f3, en el format indicat. Un cop llegida la linea que descriu la figura es crear\u00e0 la figura corresponent (<code>Linia</code>, <code>Rectangle</code> o <code>Cercle</code>) i s'afegira al llistat de figures de <code>Dibuix</code>. Aquesta opci\u00f3 d'afegir figures la podrem executar tantes vegades com vullguem, com s'ha comentat en la descripci\u00f3 del men\u00fa.</p> Atencio <p>Fer el control d'errors que cadasc\u00fa considere. Per a verificar el color en hexadecimal, es disposa implementada de la seg\u00fcent funci\u00f3 Python<pre><code>import re   #regular expression\n\ndef comprovaHEX(hex_string):\n  match =re.search(r'^#(?:[0-9a-fA-F]{3}){1,2}$', hex_string)\n  if match:\n    return True\n  else:\n    return False\n</code></pre></p>"},{"location":"U02%20Python/07_Projecte/#2-carregant-la-informacio-desde-fitxers","title":"2. Carregant la informaci\u00f3 desde fitxers","text":"<p>Tenim un format de fitxer de text com es veu a continuaci\u00f3. Text Only<pre><code>dimensions 320 300\ncercle 166 105 26 #94c147\nrectangle 137 108 58 58 #ffffff\ncercle 173 96 3 #ffffff\nrectangle 126 115 11 31 #94c147\nlinia 186 75 164 93 #94c147\n</code></pre></p> <p>Deurem de:</p> <ul> <li>Demanar a l'usuari el nom del fitxer de text</li> <li>Llegir linia a linia d'aquest fitxer de text i avaluar la primera paraula del mateix:</li> <li><code>dimensions</code> --&gt; modificar\u00e0 les dimensions de la variable <code>Dibuix</code></li> <li>per a la resta de figures, crear\u00e0 la figura corresponent i l'afegir\u00e0 a la llista de figures de <code>Dibuix</code></li> </ul>"},{"location":"U02%20Python/07_Projecte/#3-exportant-la-informacio-a-inkscape","title":"3. Exportant la informaci\u00f3 a Inkscape","text":"<p>En aquest apartat, anem a exportar les figures que tenim a la variable <code>Dibuix</code> a un format est\u00e0ndar de dibuix vectorial, el format <code>SVG</code>. Aquest format \u00e9s text formatat com a XML, com podeu consultar an aquest enlla\u00e7 format svg:</p> XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;svg height=\"300\" width=\"320\"&gt;\n  &lt;circle cx=\"166\" cy=\"166\" fill=\"#94c147\" r=\"26\"/&gt;\n  &lt;rect fill=\"#ffffff\" height=\"58\" width=\"58\" x=\"137\" y=\"108\"/&gt;\n  &lt;rect fill=\"#94c147\" height=\"31\" width=\"11\" x=\"146\" y=\"150\"/&gt;\n  &lt;circle cx=\"151\" cy=\"151\" fill=\"#94c147\" r=\"5\"/&gt;\n  &lt;line stroke=\"#94c147\" stroke-width=\"3\" x1=\"142 \" x2=\"164\" y1=\"75\" y2=\"93\"/&gt;\n&lt;/svg&gt;\n</code></pre> <p>Haurem de:</p> <ul> <li>Crear a la clase <code>Figura</code> un m\u00e8tode <code>toXML</code> abstracte.</li> <li>Implementar-lo en les classes hereves, definint-lo i transformat el contingut de cada <code>Figura</code> com es veu a l'exemple</li> <li>Recorrer tot el contigut de la variable <code>Dibuix</code> i guardar-lo a un fitxer de text, amb l'extensi\u00f3 SVG. </li> <li>El nom del fitxer es preguntar\u00e0 a l'usuari.</li> </ul>"},{"location":"U02%20Python/07_Projecte/#4-pintant-i-eixint","title":"4. Pintant i eixint","text":"<p>Per a acabar, es subministra un m\u00e8tode ja totalment implementat per a representar gr\u00e0ficament el nostre <code>Dibuix</code> i acabar el programa. Aquest programa fa servir la llibreria <code>Flet</code>, que estudiarem m\u00e9s endavant per a crear interf\u00edcies d'usuari, i concretament la llibreria <code>canvas</code> (llen\u00e7ol o lienzo en castell\u00e0) per a dibuixar figures. Presetem la estructura del codi, sense entrar massa en detalls. Al programa de partida que se us passa la podeu consultar tota.</p> Python<pre><code>import flet as ft\nimport flet.canvas as cv\n\n# creem el dibuix per defecte\nDibuix={\n  \"ample\":800,\n  \"alt\":600,\n  \"Figures\":[]\n}\n\n# funci\u00f3 que dibuixa totes les figures. \ndef dibuixar(page: ft.Page):\n  pass\n\n# Al programa principal, dins de la opci\u00f3 de men\u00fa 4\n elif opcio==4:\n      print(\"Dibuixem i eixim\")\n      ft.app(target=dibuixar)   # Es crea una finestra flet amb la funci\u00f3 Dibuixar\n      eixir=True\n</code></pre> Important per a que tot funcione adequadament <ul> <li>Les classes han de dir-se exactament <code>Linia</code>, <code>Rectangle</code> i <code>Cercle</code></li> <li>La classe auxiliar <code>Punt</code>, ha de tindre els m\u00e8todes <code>getX()</code>, <code>getY()</code>, <code>__str__</code>, <code>dist()</code>, <code>dist_x()</code> i <code>dist_y()</code></li> <li><code>Figura</code> ha de tindre els m\u00e8todes <code>getPos()</code>, <code>getColor()</code>, <code>__str__</code>, <code>toXML()</code>, <code>area()</code> i <code>perimetre()</code></li> <li><code>Rectangle</code>, adem\u00e9s, ha de tindre els m\u00e8tode <code>getAltre()</code>, per a retornar el punt inferior dret.</li> <li><code>Linia</code>, adem\u00e9s, ha de tindre els m\u00e8tode <code>getAltre()</code>, per a retornar l'altre punt de la linia.</li> <li><code>Cercle</code>, adem\u00e9s, ha de tindre els m\u00e8todes <code>getRadi()</code>, per a retornar el radi.</li> </ul> <p>Als recursos i exercicis tens l'arxius U02_Projecte_0.py  com a punt de partida per a programar, aix\u00ed com els esquelets i funcions ja implementades.</p>"},{"location":"U02%20Python/08_ExerciciPreProjecte/","title":"8. Exercici pre projecte guiat","text":""},{"location":"U02%20Python/08_ExerciciPreProjecte/#exercici-gestio-duna-biblioteca","title":"Exercici: Gesti\u00f3 d'una Biblioteca","text":"<p>Crea una aplicaci\u00f3 de l\u00ednia de comandes de gesti\u00f3 de biblioteca en Python que utilitze els conceptes de POO vistos en classe. La biblioteca ha de ser capa\u00e7 de gestionar material (llibres, revistes i pel\u00b7l\u00edculs), socis i administradors de pr\u00e9stecs. </p> <p>Cada llibre ha de tindre: - un t\u00edtol - un autor - un n\u00famero d'exemplars disponibles</p> <p>Cada revista ha de tindre: - un t\u00edtol - un data de publicaci\u00f3 - un n\u00famero d'exemplars disponibles</p> <p>Cada pel\u00b7l\u00edcula ha de tindre: - un t\u00edtol - un director - un g\u00e8nere - un n\u00famero d'exemplars disponibles</p> <p>Cada soci ha de tindre: - un nom - un DNI - una llista de llibres prestats.</p> <p>Cada administrador de pr\u00e9stecs ha de tindre: - un nom - un DNI - un c\u00e0rrec (administrador o ajudant)</p> <p>L'aplicaci\u00f3 ha de permetre les seg\u00fcents funcions:</p> <ul> <li>Afegir un llibre a la biblioteca amb la informaci\u00f3 del t\u00edtol, autor i nombre d'exemplars disponibles.</li> <li>Afegir una pel\u00b7l\u00edcula a la biblioteca amb la informaci\u00f3 del t\u00edtol, director, g\u00e8nere i nombre d'exemplars disponibles.</li> <li>AAfegir una revista a la biblioteca amb la informaci\u00f3 del t\u00edtol, la data de publicaci\u00f3 i nombre d'exemplars disponibles.</li> <li>Afegir un soci amb el seu nom i DNI.</li> <li>Afegir un administrador amb el seu nom, DNI i c\u00e0rrec.</li> <li>Prestar un recurs a un soci. Cal verificar que el recurs estiga disponible i que el soci no haja superat el l\u00edmit de llibres prestats (per exemple, un m\u00e0xim de 3 llibres per soci).</li> <li>Retornar un llibre.</li> <li>Mostrar una llista de tots els recursos, amb la possibilitat de filtrar per tipus. En el cas de pel\u00b7l\u00edcules s'haur\u00e0 de filtrar tamb\u00e9 per g\u00e8nere. En el cas de revista per any de publicaci\u00f3.</li> <li>Mostrar una llista de tots els socis.</li> <li>Mostrar una llista de tots els administradors de pr\u00e9stecs.</li> <li>Mostrar una llista amb la informaci\u00f3 sobre quins recursos estan prestats a cada soci.</li> </ul> <p>Definix una classe per a cada objecte i utilitzar correctament els conceptes de programaci\u00f3 orientada a objectes com l'her\u00e8ncia, encapsulaci\u00f3 i m\u00e8todes per gestionar les operacions anteriorment mencionades. A m\u00e9s, en cada classe, afegeix unes proves, que sols s'executaran en cas que es cride al m\u00f2dul, per\u00f2 no si s'importa.</p> <p>Crea tamb\u00e9 una classe principal o un programa de prova per interactuar amb la biblioteca.</p> <p>Aquest exercici t'ajudar\u00e0 a practicar els conceptes de programaci\u00f3 orientada a objectes, com la creaci\u00f3 de classes, la gesti\u00f3 d'objectes i la interacci\u00f3 entre ells.</p>"},{"location":"U02%20Python/09_Tractament_de_fitxer/","title":"9. Annex I - Tractament de fitxers i carpetes amb python","text":""},{"location":"U02%20Python/09_Tractament_de_fitxer/#1-fitxers","title":"1. Fitxers","text":""},{"location":"U02%20Python/09_Tractament_de_fitxer/#11-entrada-eixida-utilitzant-fitxers","title":"1.1. Entrada eixida utilitzant fitxers","text":"<p>Per a llegir o escriure en un fitxer, primer l\u2019hem d\u2019obrir. Quan acabem, s\u2019ha de tancar perqu\u00e8 s\u2019alliberen els recursos relacionats amb el fitxer.</p> <p>Per tant, a Python, utilitzem la seg\u00fcent seq\u00fc\u00e8ncia d'operacions per traballar amb fitxers:</p> <ol> <li>Obrir un fitxer</li> <li>Llegir o escriure </li> <li>Tancar el fitxer</li> </ol>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#12-open","title":"1.2. Open","text":"<p>Per obrir un fitxer utilitzem la funci\u00f3 open().</p> Python<pre><code>&gt;&gt;&gt; f = open(\"test.txt\")    # arxiu en el mateix directori\n&gt;&gt;&gt; f = open(\"C:/Python38/README.txt\")  # path sencer\n</code></pre> <p>A m\u00e9s, podem especificar el mode d'apertura i la codificaci\u00f3.</p> Mode Descripci\u00f3 r lectura w escriptura x creaci\u00f3 exclusiva (falla si ja existeix) a afegir al final, el crea si no existeix t mode lectura de text (per defecte) b mode binari + actualitzaci\u00f3 (lectura i escriptura ) Python<pre><code>&gt;&gt;&gt; f = open(\"test.txt\",'w') # obert per a escriptura\n&gt;&gt;&gt; f = open(\"test.txt\", mode='r', encoding='utf-8')\n</code></pre> <p>Compte amb les rutes a recursos</p> <p>\u00c9s important que tingau en compte que quan l'int\u00e8rpret de python s'executa, ho fa des del directori del qu\u00e8 s'ha llan\u00e7at(el podeu obtindre mitjan\u00e7ant os.getcwd()), per aix\u00f2 la c\u00e0rrega de fitxers en rutes relatives en funcions tipus open, load, etc potser vos d\u00f3ne un error indicant que no el troba.</p> Python<pre><code>f = open(\"ruta relativa/arxiu.txt\")    \n</code></pre> <p>Soluci\u00f3!</p> <p>S'han d'utilitzar rutes relatives a l'arxiu en execuci\u00f3.</p> <p>El que podeu fer per evitar estos errors \u00e9s obtindre la ruta des del fitxer font de la seg\u00fcent forma:</p> Python<pre><code>ruta_base = os.path.dirname(__file__) # directori de l'arxiu en execuci\u00f3\nruta_a_recurs = os.path.join(ruta_base, \"arxiu.txt\") # ruta relativa a l'arxiu en execuci\u00f3\nf = open(ruta_a_recurs)\n</code></pre>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#13-close","title":"1.3. Close","text":"<p>Python utilitza un garbage collector per netejar objectes sense refer\u00e8ncies, per\u00f2 no hem de confiar per tancar el fitxer.</p> Python<pre><code>try:\n   f = open(\"test.txt\", encoding = 'utf-8')\n   # operacions sobre l'arxiu\nfinally:\n   f.close()\n</code></pre> <p>Altra possibilitat \u00e9s amb with. En este cas no hem de tancar-lo expl\u00edcitament.</p> Python<pre><code>with open(\"test.txt\", encoding = 'utf-8') as f:\n   # operacions sobre l'arxiu\n</code></pre>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#14-escriptura","title":"1.4. Escriptura","text":"<p>Per a escriure, necessitem haver-lo obert amb les opcions w, a o x. Compte amb l'opci\u00f3 w, perqu\u00e8 sobreescriu els arxius.</p> Python<pre><code>with open(\"test.txt\",'w',encoding = 'utf-8') as f:\n   f.write(\"Primer arxiu\\n\")\n   f.write(\"Este arxiu\\n\")\n   f.write(\"cont\u00e9 tres l\u00ednies\\n\")\n</code></pre>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#15-lectura","title":"1.5. Lectura","text":"<p>Utilitzarem el m\u00e8tode read() per a llegir. La funci\u00f3 tell() ens diu en quina posici\u00f3 tenim el cursor i amb seek() el podem modificar.</p> Python<pre><code>&gt;&gt;&gt; f = open(\"test.txt\",'r',encoding = 'utf-8')\n&gt;&gt;&gt; f.read(6)\n'Primer'\n\n&gt;&gt;&gt; f.read(6)\n' arxiu'\n\n&gt;&gt;&gt; f.read()     # llig fins al final\n'\\nEste arxiu\\ncont\u00e9 tres l\u00ednies\\n'\n\n&gt;&gt;&gt; f.read()  # posteriors lectures tornen la cadena buida\n''\n</code></pre> Python<pre><code>&gt;&gt;&gt; f.tell()\n45\n\n&gt;&gt;&gt; f.seek(0)\n0\n\n&gt;&gt;&gt; print(f.read())\nPrimer arxiu\nEste arxiu\ncont\u00e9 tres l\u00ednies\n</code></pre> <p>Tamb\u00e9 podem utilitzar la funci\u00f3 readline() per a llegir una l\u00ednia, o readlines() per a que ens torne una llista de l\u00ednies llegides.</p>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#151-activitat-11","title":"1.5.1. Activitat 11","text":"<p>Crea una aplicaci\u00f3 que vaja llegint operacions d'un fitxer \"operacions.txt\" que contindr\u00e0 una operaci\u00f3 per l\u00ednia. Per exemple: 4 + 4</p> <p>Haur\u00e0 de guardar els resultats en un altre arxiu \"resultats.txt\". Per exemple: 4 + 4 = 8</p> <p>Utilitza funcions an\u00f2nimes per a implementar les operacions de suma, resta, multiplicaci\u00f3 i divisi\u00f3, que seran les \u00faniques operacions reconegudes per la nostra aplicaci\u00f3.</p>"},{"location":"U02%20Python/09_Tractament_de_fitxer/#2-directoris","title":"2. Directoris","text":"<p>Si hi ha una gran quantitat de fitxers i directoris amb els que tractar, disposem del m\u00f2dul os (operating system), que ens proporciona m\u00e8todes per al seu tractament.</p> <p>Per a veure el directori de treball, utilitzem getcwd().</p> Python<pre><code>&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; os.getcwd()\n</code></pre> <p>Per a canviar de directori, chdir().</p> Python<pre><code>&gt;&gt;&gt; os.chdir('/home/ferran')\n</code></pre> <p>Per a llistar els directoris ens servim de listdir().</p> Python<pre><code>&gt;&gt;&gt; os.listdir('/home')\n</code></pre> <p>Per crear un directori usem mkdir().</p> Python<pre><code>&gt;&gt;&gt; os.mkdir('Nova_carpeta')\n</code></pre> <p>Si volem renombrar un directori.</p> Python<pre><code>&gt;&gt;&gt; os.rename('Nova_carpeta','Vella_carpeta')\n</code></pre> <p>Per a eliminar un arxiu utilitzarem remove(). Si el que volem eliminar \u00e9s una carpeta buida rmdir().</p> Python<pre><code>&gt;&gt;&gt; os.remove('arxiu.txt')\n&gt;&gt;&gt; os.rmdir('Vella_carpeta')\n</code></pre> <p>En el cas que la carpeta no estiga buida, hem d'importar el m\u00f2dul shutil i utilitzar la funci\u00f3 rmtree().</p> Python<pre><code>&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; shutil.rmtree('Carpeta')\n</code></pre>"},{"location":"U02%20Python/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <ol> <li>Entorns de desenvolupamnet. Conda/Anaconda</li> <li>Creaci\u00f3 de projectes. Entorns virtuals</li> <li>Tipus b\u00e0sics. Variables</li> <li>Operadors</li> <li>Estructures de control</li> <li>Funcions</li> <li>Del sistema</li> <li>llibrerires</li> <li>Definici\u00f3 i crida. Par\u00e0metres</li> <li>Estructures de dades: tupla, llista i diccionari</li> <li>POO</li> <li>Projecte inicial: dibuixant figures </li> </ol>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/0.%20Index/","title":"1. Introducci\u00f3","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/0.%20Index/#1-index-de-la-unitat","title":"1. \u00cdndex de la unitat","text":"<ol> <li>Manipulaci\u00f3 de Dades amb Numpy</li> <li>Manipulaci\u00f3 de Dades amb Pandas</li> <li>Visualitzaci\u00f3 de dades amb Matplotlib i Seaborn</li> <li>Introducci\u00f3 al Machine Learning amb Scikit-Learn</li> <li>Introducci\u00f3 al DeepLearning amb Keras</li> </ol>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/0.%20Index/#2-introduccio","title":"2. Introducci\u00f3","text":"<p>En la primera unitat aprenerem d'una forma general qu\u00e8 \u00e9s la programaci\u00f3, quins tipus de llenguatges existeixen i quins llenguatges utilitzar segons el cas. En la segona unitat, ens endinsarem en la programaci\u00f3 general utilitzant Python, aprenent com definir de funcions, assignar variables, crida a m\u00e8todes d'objectes, el control del flux d'un programa i altres tasques b\u00e0siques i fonamentals.</p> <p>En esta tercera unitat, aprendrem Python per\u00f2 enfocat al m\u00f3n del Big Data i la Intel\u00b7lig\u00e8ncia Artificial. Esta unitat est\u00e0 dissenyada per ajudar els alumnes a aprendre a utilitzar la pila de ci\u00e8ncia de dades de Python (llibreries com NumPy, Pandas, Matplotlib, Scikit-Learn, keras i algunes eines relacionades) per emmagatzemar, manipular i obtenir informaci\u00f3 efica\u00e7 de les dades.</p> <p>Cada apartat se centrar\u00e0 en una llibreria diferent:</p> <ol> <li>Numpy: llibreria per al treball amb arrays num\u00e8rics.</li> <li>Pandas: llibreria per a an\u00e0lisis de dades de diferent naturalesa.</li> <li>Matplotlib: llibreria per a visualitzaci\u00f3 de dades.</li> <li>Seaborn: llibreria de visualitzaci\u00f3 de dades construida sobre matplotlib.</li> <li>Scikit-learn/sklearn: llibreria per a l'aprenentatge autom\u00e0tic.</li> <li>Keras: llibreria per a l'aprenentatge profund.</li> </ol> <p>El m\u00f3n de la Ci\u00e8ncia de Dades amb Python abarca moltes m\u00e9s llibreries, per\u00f2 estes s\u00f3n les fonamentals que s'haurien de con\u00e9ixer per a introduir-se en aquest camp.</p> <p>Nota</p> <p>Com en la unitat anterior, continuariem utilitzant vscode, quaderns de jupyter i pip.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/","title":"7. Reutilizant models","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/#introduccio-i-ara-que","title":"Introducci\u00f3: I ara, qu\u00e8?","text":"<p>En aquesta unitat hem vist com podem entrenar un model a partir de datasets existent, i comprovar la bondat o no del mateix. Pr\u00e8viament a l'entrenament (<code>fit</code> i <code>compile</code>) del model haurem d'haver preparat el dataset, eliminant les dades nules que poden apareixer (amb valids mitjans o m\u00e9s comuns), fent-les me adaptables per el model (normalitzant o codificant). Per a comprovar la bondat, a banda de les corbes de p\u00e8rdua durant l'entrenament, podem fer prediccions amb noves dades, mitjan\u00e7ant <code>predict</code>.</p> <p>Per\u00f2 al dia a dia, les dades anirem generant-les en temps real, I ara, que?</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/#guardem-el-model","title":"Guardem el model","text":"<p>Doncs un cop tinguem el model generat (sigui amb un model de Machine Learning o de Deep Learning), aquest model el podem guardar o comen\u00e7ar a fer prediccions reals en el dia a dia. Aix\u00f2 \u00e9s el que s'anomena posar en producci\u00f3. Per a fer aix\u00f2 haurem de guardar el model com si d'un arxiu normal es tractara.</p> <p>Un model dins d'un arxiu</p> <p>Aquest arxiu, que per exemple en Keras te la extensi\u00f3 <code>keras</code> o <code>h5</code>, contindr\u00e0 el model, la configuraci\u00f3 i, com no, tots els valors dels hiperpar\u00e0metres. Podriem obrir-lo i estudiar m\u00e9s en detall el seu contingut, per\u00f2 seria com obrir la XXNN, cosa que \u00e9s l'equivalent a obrir la caixa de pandora, per la seua complexitat</p> <p>Un cop guardar el model, simplement haurem de carregar-lo all\u00e0 on volem fer-lo servir. Llavors, simplement ens quedar\u00e0 el fer les prediccions que introdueix l'usuari, be mitjan\u00e7ant una GUI (aplicaci\u00f3 d'escriptori o m\u00f2bil), be mitjan\u00e7ant una web (aplicaci\u00f3 web), o be atenent les peticions des d'una API REST (servici)</p> <p>Consum de recursos en producci\u00f3</p> <p>No cal que la m\u00e0quina aquesta ja tingui una gran capacitat de c\u00f2mput, ja que en aquest moment no hem de calcular hiperpar\u00e0metres ni aplicar algorismes costosos com el Gradient Descend. En aquest moment la caixa de la xarxa neuronal no \u00e9s m\u00e9s que una f\u00f3rmula, i el c\u00e0lcul ser\u00e0 bastant simple.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/#guardem-amb-keras","title":"Guardem amb keras","text":"<p>La llibreria keras ens dona les seg\u00fcents opcions. mirem-ho a partir d'aquest codi:</p> <p>Guardem el model</p> Python<pre><code># despres de fer totes les preparacions del model\n\nmodel.compile()   # compilem el model\n\nmodel.fit()       # i entrenem el model\n\n# guardem el model al disc\nmodel.save('ruta/a/model.keras')  # hem de posar-li la extensi\u00f3 .keras\n\n# per a carregar-lo\nmodel=keras.models.load('ruta/a/model.keras')\n</code></pre> <p>Aquest comandament desa un model sencer en un sol fitxer. El fitxer inclour\u00e0:</p> <ul> <li>L'arquitectura o configuraci\u00f3 del model</li> <li>Valors dels pesos del model (que es van aprendre durant l'entrenament)</li> <li>La informaci\u00f3 de compilaci\u00f3 del model (si es va cridar a compile())</li> <li>L'optimitzador i el seu estat, si n'hi ha (aix\u00f2 us permet reiniciar l'entrenament on vau deixar)</li> </ul> <p>Quin \u00e9s l'estandar?</p> <p>Format <code>.h5</code> \u2192 El format .h5 es refereix als fitxers que segueixen l'est\u00e0ndard HDF5 (Hierarchical Data Format versi\u00f3 5). Aquests fitxers poden contenir una varietat de dades, no nom\u00e9s models de Keras:</p> <ul> <li>Poden incloure dades multidimensionals, metadades i altres objectes.</li> <li>Els models de Keras tamb\u00e9 es poden desar en fitxers .h5 utilitzant la funci\u00f3 model.save() de Keras amb l'extensi\u00f3 <code>.h5</code> en compte de <code>.keras</code>.</li> <li>Els fitxers en format .h5 s\u00f3n m\u00e9s vers\u00e0tils i poden ser compatibles amb una varietat d'eines i biblioteques que admeten el format HDF5.</li> </ul> <p>No obstant aix\u00f2, carregar models des de fitxers .h5 fora de l'entorn de Keras pot requerir l'\u00fas de biblioteques addicionals com ara h5py per treballar amb el format HDF5.</p> <p>Recomanem <code>.keras</code></p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/#guardant-qualssevol-model-joblibs","title":"Guardant qualssevol model. <code>joblibs</code>","text":"<p>Joblib \u00e9s una biblioteca de Python dissenyada per simplificar la tasca de desar i carregar objectes de Python (com ara matrius NumPy, models d'aprenentatge autom\u00e0tic, etc.) en el disc. El seu objectiu principal \u00e9s proporcionar una manera eficient i senzilla de treballar amb dades grans i complexes, especialment en el context de l'aprenentatge autom\u00e0tic i l'an\u00e0lisi de dades.</p> <p>Amb Joblib, pots desar objectes de Python en el disc en un format eficient, la qual cosa significa que ocupen menys espai i es carreguen m\u00e9s r\u00e0pidament en comparaci\u00f3 amb m\u00e8todes d'assignaci\u00f3 de recursos est\u00e0ndard com pickle. Aix\u00f2 \u00e9s particularment \u00fatil quan treballes amb conjunts de dades grans o models d'aprenentatge autom\u00e0tic que poden ocupar una quantitat significativa de mem\u00f2ria. Aix\u00f2 significa que pots utilitzar els mateixos m\u00e8todes de manera intu\u00eftiva per desar i carregar objectes, sense haver de preocupar-te pels detalls de la implementaci\u00f3 subjacent.</p> <p>Guardem el model amb joblibs</p> Python<pre><code>import joblib\n# altres imports\n\n# preparem les dades\n\n# Creaci\u00f3 del model\nmodel = ...\n\n# Compilaci\u00f3 del model\nmodel.compile()\n\n# Entrenament del model\nhistory = model.fit()\n\n# Guardar el model, la hist\u00f2ria de compilaci\u00f3 i els pesos amb Joblib\n# Si volem les dades ho tenim que fer per separat\njoblib.dump(model, 'model.joblib')\njoblib.dump(history.history, 'history.joblib')\nmodel.save_weights('model_weights.h5')\n</code></pre> <p>El gran aventatge \u00e9s que en aquest cas, joblib permet guardar un model tant fet amb Keras d'una xarxa neuronal, com d'un fet amb Sklearn del Machine Learning cl\u00e0ssic</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/06_Reutilitzant_models/#guardem-la-neteja-de-les-dades","title":"Guardem la neteja de les dades","text":"<p>Sols ens queda en tindre en consideraci\u00f3 les dades que li passarem al model per a fer les prediccions en el dia a dia. Si recordes, nosaltres partiem d'un dataset, al qual li feiem un preprocessat per adequar-ho a la xarxa neuronal. Doncs be, imagina que hem fet per exemple un escalat dels valors per predir el preu de cotxes a partir de les seues caracter\u00edstiques. Hem codificat el\u00e8ctric, hibrid, combusti\u00f3 amb el one hot encoding, i hem normalitzat la pot\u00e8ncia per a estar en valors entre [-2,2]. Ara imagina que un client vol una previsi\u00f3 de preu i ens passa les seg\u00fcents dades:</p> JSON<pre><code>{\n  marca:Nissan,\n  model:QashQai,\n  potencia: 150cv,\n  motor:combustio,\n  ...\n}\n</code></pre> <p>Evidentment aquesta informaci\u00f3 la devem d'adaptar al nostre model:</p> <ol> <li>El model treballa en entrades multidimensionals (dataframe de pandas o arrays de numpy)</li> <li>Haurem d'aplicar la mateixa conversi\u00f3 (be ordinal be amb el one hot encoding), per\u00f2 espai, amb la mateixa configuraci\u00f3 que hem fet per entrenar el model.</li> <li>Harem de normalitzar tots aquells valors previs</li> </ol> <p>Guardem la neteja de dades</p> Python<pre><code>from sklearn.compose import make_column_transformer\n\n# Carreguem el dataframe\nX= pd.load(...)\n\n# caracter\u00edstiquers num\u00e8riques del dataframe (normalitzar)\nfeatures_num = [...]\n\n# caracter\u00edstiques categoriques (one_hot o ordinal)\nfeatures_cat = []\n\n# preparem el netejador\npreprocessor = make_column_transformer(\n    (StandardScaler(), features_num),\n    (OneHotEncoder(), features_cat),\n)\n\n# Entrenem el preprocessador amb totes les dades\npreprocessor.fit(X)\n\n# Apliquem els preprocessat a les dades\nX_processat=preprocessor.transform(X)\n\n# Acabem d'entrenar al model\n\n# Guardem el preprocessador\njoblib.dump(preprocessor,'preprocessador.pkl')\n\n# Guardem el model\njoblib.dump(model,'model.pkl')\n</code></pre> <p>Aix\u00f2 ens permet,en un futur, quan tinguem que passar-li dades al nostre model, sobretot amb dades noves, preprocessar-les de la mateixa manera i en les mateixes condicions que el dataset que s'ha fet servir per a l'entrenament. Fariem alguna cosa com:</p> <p>Carrega del preprocessador</p> Python<pre><code>import joblib\n\npreprocessor=joblib.load('preprocessor.pkl')\nmodel=joblib.load('model.pkl')\n\n# imaginem les dades seg\u00fcents\n#\u00a0Aquestes dades les rebem del client o pantalla o mobil\ndades_del_client={\n  ...\n}\n\n# Funci\u00f3 que a partir de un json crea un array preparat\ndef prepare_data(dades,preprocessador):\n  # Passem el JSON a DF\n  df_client=pd.DataFrame(dades,index=[0])\n\n  # Apliquem el preprocessat\n  data=preprocessor.transform(df_client)\n  return data\n\n# preparem les dades\ndades=prepare_data(dades_client,preprocessor)\n\n# calculem la prediccio\nestimacio=model.predict(dades)\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/","title":"2. Manipulaci\u00f3 de Dades amb Numpy","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#1-introduccio-a-numpy","title":"1. Introducci\u00f3 a NumPy","text":"<p>Els conjunts de dades a manipular poden tindre diferents naturaleses i formats, incloent documents, imatges, sons, mesures... A pesar d'aquesta aparent heterogeitat, poden ser tractats com a conjunt d'arrays num\u00e8rics. </p> <p>Per exemple, una imatge pot ser representada com un array bidimensional de n\u00fameros, on cada element representa el color del pixel que ocupa a l'array. El so pot ser representat com un array unidimensional, on cada element representa la frq\u00fc\u00e8ncia front al temps. El text pot ser convertit a representaci\u00f3 num\u00e8rica mitjan\u00e7ant UTF-8. No importa la naturalesa de les dades, el primer pas en l'an\u00e0lisi de dades ser\u00e0 convertir aquestes dades en n\u00fameros.</p> <p>\u00c9s per aix\u00f2 que un emmagatzematge i manipulaci\u00f3 eficient de les dades \u00e9s absolutament fonamental en el proc\u00e9s d'an\u00e0lisi de dades, que ens permetran la construcci\u00f3 de programes d'Intel\u00b7lig\u00e8ncia Artificial.</p> <p>Ac\u00ed \u00e9s on entra en joc NumPy (Numerical Python), que ens ajudar\u00e0 a carregar, manipular i guardar dades en format num\u00e8ric. Un array de NumPy ser\u00e0 semblant a una llista (List) de Python, per\u00f2 de naturalesa homog\u00e8nia i num\u00e8rica. </p> <p>NumPy \u00e9s molt m\u00e9s eficient en el tractament de dades, sobretot quan la quantitat d'informaci\u00f3 creix. Representa el nucli de l'ecosistema de ci\u00e8ncia de dades amb Python. Aprendre'l ser\u00e0 benefici\u00f3s siga quin siga el camp d'inter\u00e9s.</p> <p>Per a instal\u00b7lar NumPy, simplement heu d'executar l'ordre:</p> Bash<pre><code>$ pip install numpy\n</code></pre> <p>Amb la seg\u00fcent ordre podem comprovar si s'ha instal\u00b7lat correctament i quina \u00e9s la versi\u00f3 que tenim instal\u00b7lada.</p> Python<pre><code>import numpy\nnumpy.__version__ # 2.1.2\n</code></pre> <p>Observareu que la majoria de gent importa utilitzant l'\u00e0lias np:</p> Python<pre><code>import numpy as np\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#11-numpy-array-vs-python-list","title":"1.1. Numpy array vs Python List","text":"<p>En anteriors unitats, es va explicar que Python \u00e9s un llenguatge de tipat din\u00e0mic, per aix\u00f2 permet la creaci\u00f3 de llistes heterog\u00e8nies:</p> Python<pre><code>list_1 = [True, \"2\", 3.0, 4]\n[type(item) for item in list_1] #[&lt;class 'bool'&gt;, &lt;class 'str'&gt;, &lt;class 'float'&gt;, &lt;class 'int'&gt;]\n</code></pre> <p>Per\u00f2 aquesta flexibilitat ve acompanyada d'un cost: cada element ha d'acompanyar-se del seu tipus, la seua posici\u00f3 en mem\u00f2ria i altra informaci\u00f3. Cada element \u00e9s en realitat un objecte.</p> <p>En canvi, si els elements son homogenis, molta d'aquesta informaci\u00f3 seria redundant. Per aix\u00f2 \u00e9s molt m\u00e9s eficient aquest tipus de dades, tal com es mostra a la seg\u00fcent imatge:</p> <p></p> <p>La llista cont\u00e9 un punter a un bloc de punters, que apunten a cada objecte, mentre que NumPy apunta simplement a un bloc que cont\u00e9 les dades. \u00c9s per aix\u00f2 que \u00e9s menys flexible per\u00f2 molt m\u00e9s eficient.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#12-numpy-arrays","title":"1.2. NumPy Arrays","text":"<p>Creaci\u00f3 d'arrays a partir de llistes</p> Python<pre><code># array([1, 4, 2, 5, 3])\nnp.array([1, 4, 2, 5, 3])\n\n# array([3.14, 4.  , 2.  , 3.  ])\nnp.array([3.14, 4, 2, 3])\n\n# array([1., 2., 3., 4.], dtype=float32)\nnp.array([1, 2, 3, 4], dtype='float32')\n\n# array([[2, 3, 4],\n#        [4, 5, 6],\n#        [6, 7, 8]])\nnp.array([range(i, i + 3) for i in [2, 4, 6]])\n</code></pre> <p>Creaci\u00f3 d'arrays des de zero</p> Python<pre><code>#array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nnp.zeros(10, dtype=int)\n\n# array([[1., 1., 1., 1., 1.],\n#        [1., 1., 1., 1., 1.],\n#        [1., 1., 1., 1., 1.]])\nnp.ones((3, 5), dtype=float)\n\n# array([[3., 3., 3., 3., 3.],\n#       [3., 3., 3., 3., 3.],\n#       [3., 3., 3., 3., 3.]])\nnp.full((3, 5), 3.)\n\n# array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])\nnp.arange(0, 20, 2)\n\n# array([0.  , 0.25, 0.5 , 0.75, 1.  ])\nnp.linspace(0, 1, 5)\n\n# array([[0.13718193, 0.00357101, 0.01323657],\n#        [0.39090681, 0.21454034, 0.74277238],\n#        [0.38737056, 0.96167256, 0.50637694]])\nnp.random.random((3, 3))\n\n# matriu de 3x3 amb valors enters aleat\u00f2ris\nnp.random.randint(0, 10, (3, 3))\n</code></pre> <p>Mostra aleat\u00f2ria seguint una distribuci\u00f3 normal o de Gauss</p> <p>Python<pre><code>mu, sigma = 0, 0.1\ns = np.random.normal(mu, sigma, 10000)\nimport matplotlib.pyplot as plt\ncount, bins, ignored = plt.hist(s, 100, density=True)\nplt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) *\n            np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n      linewidth=2, color='r')\nplt.show()\n</code></pre> </p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#2-manipulacio-darrays-de-numpy","title":"2. Manipulaci\u00f3 d'arrays de NumPy","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#21-atributs-dels-arrays","title":"2.1. Atributs dels arrays","text":"<p>Dimensions</p> <p>Python<pre><code>array = np.random.randint(10, size=(3, 4, 5))  # Array de tres dimensions\nprint(\"n\u00famero de dimensions: \", array.ndim)\nprint(\"forma:\", array.shape)\nprint(\"tamany: \", array.size)\n</code></pre>   n\u00famero de dimensions:  3   forma: (3, 4, 5)   tamany:  60</p> <p>Tipus i espai ocupat per les dades</p> Python<pre><code>print(\"tipus de dades:\", array.dtype)\nprint(\"tamany d'element:\", array.itemsize, \"bytes\")\nprint(\"tamany total:\", array.nbytes, \"bytes\")\n</code></pre> <p>tipus de dades: int64   tamany d'element: 8 bytes   tamany total: 480 bytes</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#22-acces","title":"2.2. Acc\u00e9s","text":"<p>Acc\u00e9s als elements d'un array</p> <p>Python<pre><code>array = np.random.randint(10, size=6)\nprint(array)\nprint(array[3])\nprint(array[-2])\n</code></pre>   [5 3 2 6 9 3]   6   9</p> <p>Python<pre><code>array = np.random.randint(10, size=(3, 4))\nprint(array)\nprint(array[2, 0])\nprint(array[2, -1])\n</code></pre>   [[0 8 7 7]    [1 5 2 7]    [4 3 4 6]]   4   6</p> <p>Python<pre><code>array[0, 0] = 12\nprint(array)\n</code></pre>   [[12  8  7  7]   [ 1  5  2  7]   [ 4  3  4  6]]</p> <p>Pregunta</p> <p>Com quedar\u00e0 la variable array despr\u00e9s de la seg\u00fcent assignaci\u00f3?</p> Python<pre><code>array[0, 0] = 3.14159\n</code></pre> Comprovar resposta <p>[[3  8  7  7]   [ 1  5  2  7]   [ 4  3  4  6]]</p> <p>Pregunta</p> <p>Com quedar\u00e0 la variable array despr\u00e9s de la seg\u00fcent assignaci\u00f3?</p> Python<pre><code>array[1] = 3\n</code></pre> Comprovar resposta <p>[[3  8  7  7]   [ 3  3  3  3]   [ 4  3  4  6]]  </p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#23-subarrays","title":"2.3. Subarrays","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#231-unidimensionals","title":"2.3.1. Unidimensionals","text":"<p>La forma general d'accedir a subarrays \u00e9s: Python<pre><code>x[principi:fi:pas]\n</code></pre> on els valors per defcte s\u00f3n <code>principi=0, fi=tamany de la dimensi\u00f3, pas=1</code>.</p> <p>Accedint a subarrays en arrays unidimensionals</p> Python<pre><code>x = np.arange(10) # array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nx[:5] # array([0, 1, 2, 3, 4])\nx[4:7] # array([4, 5, 6])\nx[::2] # array([0, 2, 4, 6, 8])\nx[1::2] # array([1, 3, 5, 7, 9])\n</code></pre> <p>Compte amb passos negatius</p> Python<pre><code>x[::-1]  # array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])\n</code></pre> <p>Pregunta</p> <p>Qu\u00e8 contindr\u00e0 la variable subarray al seg\u00fcent fragment de codi?  </p> Python<pre><code>import numpy as np\nx = np.arange(10)\nsubarray = x[5::-2]\n</code></pre> Comprovar resposta Python<pre><code>array([5, 3, 1])\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#232-multidimensionals","title":"2.3.2. Multidimensionals","text":"<p>Accedint a arrays multidimensionals</p> Python<pre><code>x2 = np.array([[12,  5,  2,  4],\n       [ 7,  6,  8,  8],\n       [ 1,  6,  7,  7]])\n\nx2[:2, :3]  # array([[12,  5,  2],\n            #        [ 7,  6,  8]])\n\nx2[:3, ::2] # array([[12,  2],\n            #        [ 7,  8],\n            #        [ 1,  7]])\n\nx2[::-1, ::-1] # array([[ 7,  7,  6,  1],\n               #        [ 8,  8,  6,  7],\n               #        [ 4,  2,  5, 12]])\n</code></pre> <p>Accedint a files o columnes</p> Python<pre><code>x2[:, 0]    # array([12,  7,  1])\n\nx2[1, :]    # array([7, 6, 8, 8])\n</code></pre> <p>Acc\u00e9s per files abreviat</p> Python<pre><code>x2[0] # seria equivalent a x2[0, :]\n</code></pre> <p>Subarrays com a vistes, no com a c\u00f2pies</p> <p>Una cosa a tindre molt en compte \u00e9s que l'acc\u00e9s a un subarray no torna una c\u00f2pia del mateix sin\u00f3 una vista. \u00c9s diferent en l'acc\u00e9s a llistes de Python, on les subllistes si que s\u00f3n c\u00f2pies de l'objecte original.   A\u00e7\u00f2 implica que treballant amb grans agrupacions de dades, nosaltres podem accedir i processar un subconjunt sense necessitat de copiar les dades.</p> Python<pre><code>x2_sub = x2[:2, :2] # array([[12,  5],\n                    #        [ 7,  6]])\nx2_sub[0, 0] = 99\nx2    # array([[99,  5,  2,  4],\n      #        [ 7,  6,  8,  8],\n      #        [ 1,  6,  7,  7]])\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#233-copies-darrays","title":"2.3.3. C\u00f2pies d'arrays","text":"<p>En cas que vulgam crear una c\u00f2pia d'un array, podem fer \u00fas del m\u00e8tode copy().</p> <p>C\u00f2pia d'un subarray</p> Python<pre><code>x2_sub_copy = x2[:2, :2].copy()\nx2_sub_copy[0, 0] = 42\nx2    # array([[99,  5,  2,  4],\n      #        [ 7,  6,  8,  8],\n      #        [ 1,  6,  7,  7]])\nx2_sub_copy # array([[42,  5],\n            #        [ 7,  6]])\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#24-canvi-de-dimensions","title":"2.4. Canvi de dimensions","text":"<p>Una altra operaci\u00f3 molt \u00fatil sobre arrays \u00e9s el canvi de dimensions.</p> <p>Canvi de dimensions</p> Python<pre><code>grid = np.arange(1, 10).reshape((3, 3)) # array([[1, 2, 3],\n                                        #        [4, 5, 6],\n                                        #        [7, 8, 9]])\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#25-unio-i-separacio","title":"2.5. Uni\u00f3 i separaci\u00f3","text":"<p>Per a unir arrays, s'utilitzen les funcions concatenate, vstack i hstack.</p> <p>Uni\u00f3 d'arrays</p> Python<pre><code>x = np.array([1, 2, 3])\ny = np.array([3, 2, 1])\nnp.concatenate([x, y])\n\narray([1, 2, 3, 3, 2, 1])\n\ngrid = np.array([[1, 2, 3],\n           [4, 5, 6]])\nnp.concatenate([grid, grid], axis=1)\n\narray([[1, 2, 3, 1, 2, 3],\n       [4, 5, 6, 4, 5, 6]])\n\nx = np.array([1, 2, 3])\ngrid = np.array([[9, 8, 7],\n            [6, 5, 4]])\n\n# vertically stack the arrays\nnp.vstack([x, grid])\n\narray([[1, 2, 3],\n       [9, 8, 7],\n       [6, 5, 4]])\n\n# horizontally stack the arrays\ny = np.array([[99],\n            [99]])\nnp.hstack([grid, y])\n\narray([[ 9,  8,  7, 99],\n       [ 6,  5,  4, 99]])\n</code></pre> <p>De forma similar, per a partir arrays utilitzem les funcions split, hsplit i vsplit.</p> <p>Partici\u00f3 d'arrays</p> Python<pre><code>x = [1, 2, 3, 99, 99, 3, 2, 1]\n# Split rep una llista amb les posicions per on partir com a argument\nx1, x2, x3 = np.split(x, [3, 5])\nprint(x1, x2, x3)\n\n[1 2 3] [99 99] [3 2 1]\n\nupper, lower = np.vsplit(grid, [2])\nprint(upper)\nprint(lower)\n\n[[0 1 2 3]\n [4 5 6 7]]\n[[ 8  9 10 11]\n [12 13 14 15]]\n\nleft, right = np.hsplit(grid, [2])\nprint(left)\nprint(right)\n\n[[ 0  1]\n [ 4  5]\n [ 8  9]\n [12 13]]\n[[ 2  3]\n [ 6  7]\n [10 11]\n [14 15]]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#3-funcions-universals-ufuncs","title":"3. Funcions universals (ufuncs)","text":"<p>La implementaci\u00f3 predeterminada de Python (coneguda com CPython) fa algunes operacions molt lentament. Aquesta lentitud es fa evident en situacions en qu\u00e8 es repeteix una operaci\u00f3 sobre els elements d'una matriu. La lentitud no ve proporcionada per les operacions, sin\u00f3 per les comprovacions de tipus (recordeu que estem davant un llenguatge interpretat i amb tipus din\u00e0mics) i les crides a funcions en cada iteraci\u00f3.</p> <p>La computaci\u00f3 de matrius NumPy pot ser molt r\u00e0pida o molt lenta. La clau per fer-ho r\u00e0pid \u00e9s utilitzar operacions vectoritzades, generalment implementades mitjan\u00e7ant les funcions universals de NumPy (ufuncs). Les funcions universals fan que s'executen de forma compilada totes aquestes operacions, de forma que la velocitat d'execuci\u00f3 \u00e9s rapid\u00edssima.</p> <p>Operacions universals</p> Python<pre><code>x = np.arange(4)\nprint(\"x     =\", x)\nprint(\"x + 5 =\", x + 5)\nprint(\"x - 5 =\", x - 5)\nprint(\"x * 2 =\", x * 2)\nprint(\"x / 2 =\", x / 2)\nprint(\"x // 2 =\", x // 2)\n\nx     = [0 1 2 3]\nx + 5 = [5 6 7 8]\nx - 5 = [-5 -4 -3 -2]\nx * 2 = [0 2 4 6]\nx / 2 = [ 0.   0.5  1.   1.5]\nx // 2 = [0 0 1 1]\n</code></pre> <p>Realment, aquestes operacions fan la crida a les versions compilades de Numpy add, subtract, divide...</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#4-agregacions","title":"4. Agregacions","text":"<p>La majoria de vegades, davant d'una gran quantitat de dades, el primer pas \u00e9s calcular estad\u00edstiques de resum de les dades en q\u00fcesti\u00f3. Habituals s'utilitzen la mitjana i la desviaci\u00f3 est\u00e0ndard, que permeten resumir els valors \"t\u00edpics\" d'un conjunt de dades, per\u00f2 tamb\u00e9 s\u00f3n \u00fatils altres agregats (la suma, el producte, la mediana, el m\u00ednim i el m\u00e0xim...).</p> <p>NumPy t\u00e9 funcions d'agregaci\u00f3 incorporades r\u00e0pides per treballar amb matrius. Recordeu sempre utilitzar estes funcions universals front a les funcions de Python est\u00e0ndar.</p> <p>La seg\u00fcent taula mostra les principals funcions d'agregaci\u00f3:</p> Nom de la funci\u00f3 Descripci\u00f3 np.sum Calcular la suma d'elements np.prod Calcula el producte dels elements np.mean Calcular la mitjana dels elements np.std Calcular la desviaci\u00f3 est\u00e0ndard np.var Calcular la vari\u00e0ncia np.min Trobeu el valor m\u00ednim np.max Trobeu el valor m\u00e0xim np.argmin Trobeu l'\u00edndex de valor m\u00ednim np.argmax Trobeu l'\u00edndex de valor m\u00e0xim np.median Calcular la mediana dels elements np.percentile Calcular estad\u00edstiques d'elements basades en el rang np.any Avaluar si algun element \u00e9s cert np.all Avaluar si tots els elements s\u00f3n certs <p>Les agregacions poden ser al llarg d'una fila o columna:</p> <p>Agregacions a trav\u00e9s de fila o columna</p> Python<pre><code>M = np.random.random((3, 4))\nM.min(axis=0)\nM.min(axis=1)\n\n[[0.89601141 0.29981518 0.96231461 0.97286915]\n [0.68484684 0.89850248 0.48281439 0.24021478]\n [0.21160452 0.67449049 0.88807226 0.98416603]]\n[0.21160452 0.29981518 0.48281439 0.24021478]\n[0.29981518 0.24021478 0.21160452]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#5-calcul-en-matrius-difusio","title":"5. C\u00e0lcul en matrius: difusi\u00f3","text":"<p>La difusi\u00f3 \u00e9s un conjunt de regles per aplicar funcions universals (per exemple, sumes, restes, multiplicacions, etc.) a matrius de diferents mides.</p> <p>Agregacions a trav\u00e9s de fila o columna</p> Python<pre><code>a = np.array([0, 1, 2])\na + 5\n# [5, 6, 7]\n\nM = np.ones((3, 3))\nM + a\n# [[ 1.,  2.,  3.],\n#  [ 1.,  2.,  3.],\n#  [ 1.,  2.,  3.]]\n\na = np.arange(3)\nb = np.arange(3)[:, np.newaxis]\nprint(a) # [0 1 2]\nprint(b)\n# [[0]\n#  [1]\n#  [2]]\na + b\n# [[0, 1, 2],\n#  [1, 2, 3],\n#  [2, 3, 4]]\n</code></pre> <p></p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#6-comparacions-mascares-i-logica-booleana","title":"6. Comparacions, m\u00e0scares i l\u00f2gica booleana","text":"<p>L'emmascarament s'utilitza quan voleu extreure, modificar, comptar o manipular valors d'una matriu en funci\u00f3 d'algun criteri: per exemple, \u00e9s possible que vulgueu comptar tots els valors superiors a un determinat valor, o eliminar tots els valors at\u00edpics que estan per sobre d'algun valor llindar.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#61-exploracio-de-dades","title":"6.1. Exploraci\u00f3 de dades","text":"<p>Imagineu que tenim una s\u00e8rie de dades que representen la quantitat de precipitaci\u00f3 de cada dia durant un any en una ciutat determinada.</p> <p>Si representem l'histograma de la quantitat de precipitacions podem observar la quantitat de dies que no va ploure, la quantitat de dies que va ploure poc,...</p> <p>Precipitacions a la ciutat de Seattle l'any 2014</p> <p>Python<pre><code>import pandas as pd\n\n# use pandas to extract rainfall inches as a NumPy array\nrainfall = pd.read_csv('data/Seattle2014.csv')['PRCP'].values\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn; seaborn.set()  # set plot styles\nplt.hist(rainfall, 40);\n</code></pre> </p> <p>L'histograma dona una idea general de les dades, per\u00f2 no ens respon a preguntes com: - Quants dies de pluja hi havia a l'any?  - Quina \u00e9s la precipitaci\u00f3 mitjana en aquests dies de pluja?  - Quants dies hi va haver amb m\u00e9s de la mitjana de pluja?</p> <p>Alg\u00fa podria pensar que amb funcions que recorreguen les dades i comptadors que es van incrementant segons es cumplisquen unes condicions ho podriem averiguar. Per\u00f2 aix\u00f2 seria molt ineficient per les raons que hem comentat en apartats anteriors. Ac\u00ed \u00e9s on entren les comparacions, les m\u00e0scares i la ll\u00f2gica de Boole.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#62-comparacions","title":"6.2. Comparacions","text":"<p>NumPy implementa operadors de comparaci\u00f3 com ara &lt;(menor que) i &gt;(m\u00e9s gran que) com a ufuncs per elements. El resultat d'aquests operadors de comparaci\u00f3 \u00e9s sempre una matriu amb un tipus de dades boole\u00e0.</p> <p>Comparacions en NumPy</p> Python<pre><code>x = np.array([1, 2, 3, 4, 5])\nx &lt; 3 \n\n[ True,  True, False, False, False]\n\n( 2  *  x )  ==  ( x  **  2 )\n[Fals, True, False, False, False]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#63-matrius-booleanes","title":"6.3. Matrius booleanes","text":""},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#631-recompte","title":"6.3.1. Recompte","text":"<p>Una forma d'obtindre quants valors complixen un criteri seria:</p> <p>Recompte</p> Python<pre><code>x = np.array([[5, 0, 3, 3],\n          [7, 9, 3, 5],\n          [2, 4, 7, 6]])\nnp.sum(x &lt; 6)\n\n8\n\nnp.sum(x &lt; 6, axis=1)\n\narray([4, 2, 2])\n</code></pre> <p>Podem utilitzar les funcions all i any per veure si tots o algun dels elements complixen certa condici\u00f3.</p> <p>Recompte</p> Python<pre><code>np.any(x &lt; 0) # Comprovem si hi ha negatius\n\nFalse\n\nnp.all(x &lt; 8, axis=1) # Comprovem si tots els elements de les files s\u00f3n majors a 8\n\n[ True, False,  True]\n</code></pre> <p>Les operacions anteriors es poden combinar amb els operadors l\u00f2gics &amp;(and), |(or), ^(xor) i ~(not).</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#7-arrays-boolean-com-a-mascares","title":"7. Arrays boolean com a m\u00e0scares","text":"<p>Per a emmascarar certs valors, utilitzarem els arrays booleans de forma que sols obtindrem els valors que tornen True:</p> <p>Emmascarament</p> <p>Python<pre><code>x [ x  &lt;  5 ]\n\n[0, 3, 3, 3, 2, 4]\n</code></pre>   Torna una matriu unidimensional amb els valors que complixen la condici\u00f3.</p> <p>Ara podriem obtindre dades com: - la mitja de precipitacions dels dies que ha plogut. - el dia d'estiu amb m\u00e9s precipitacions - el dia, que no siga d'estiu, amb menys precipitacions</p> <p>Combinaci\u00f3 d'operacions</p> <p>Combinant operacions booleanes, amb l'emmascarament i les funcions d'agregaci\u00f3, podem respondre a la majoria de les preguntes que ens poden interessar sobre les dades.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#8-fancy-indexing","title":"8. Fancy Indexing","text":"<p>A principi de l'apartat vegerem com accedir a elements d'un array de NumPy. Ara anem a estudiar una forma diferent d'accedir, el que s'anomena el Fancy Indexing, que pot aportar avantatges segons casos. La idea \u00e9s molt simple, passar una matriu d'index per a accedir als element d'una matriu.</p> <p>Exemple de fancy indexing</p> Python<pre><code>x = np.array([51, 92, 14, 71, 60, 20, 82, 86, 74, 74])\n[x[3], x[7], x[2]] # llista de Python\n\n[71, 86, 14]\n\nind = [3, 7, 2]\nx[ind] # array de NumPy\n\narray([71, 86, 14])\n</code></pre> <p>Dimensions de la matriu accedida</p> <p>Quan s'utilitza fancy indexing, la forma del resultat reflecteix la forma de les matrius d'\u00edndex en lloc de la forma de la matriu que s'est\u00e0 indexant o accedint.</p> <p>Funciona tamb\u00e9 amb matrius multidimensionals:</p> <p>fancy indexing a matrius multidimensionals</p> Python<pre><code>X = np.arange(12).reshape((3, 4))\n\n# X = [[ 0,  1,  2,  3],\n#      [ 4,  5,  6,  7],\n#      [ 8,  9, 10, 11]]   \n\nrow = np.array([0, 1, 2])\ncol = np.array([2, 1, 3])\nX[row, col]\n\n# [[ 2,  5, 11]]\n\nX[row[:, np.newaxis], col]\n# [[ 2,  1,  3],\n#  [ 6,  5,  7],\n#  [10,  9, 11]]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#81-indexacio-combinada","title":"8.1. Indexaci\u00f3 combinada","text":"<p>Podem combinar fancy indexing amb la selecci\u00f3 simple, amb la selecci\u00f3 de subarrays o amb m\u00e0scares:</p> <p>Exemple</p> Python<pre><code># X = [[ 0  1  2  3]\n#      [ 4  5  6  7]\n#      [ 8  9 10 11]]\n\nx[2, [2, 0 ,1]]\n# [10,  8,  9]\n\nX[1:, [2, 0, 1]]\n# [[ 6,  4,  5],\n#  [10,  8,  9]]\n\nmask = np.array([1, 0, 1, 0], dtype=bool)\nX[row[:, np.newaxis], mask]\n# [[ 0,  2],\n#  [ 4,  6],\n#  [ 8, 10]]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#82-exemple-de-seleccio-de-valors-aleatoris","title":"8.2. Exemple de selecci\u00f3 de valors aleatoris","text":"<p>Un dels usos m\u00e9s comuns del fancy indexing \u00e9s la selecci\u00f3 de files aleat\u00f2ries d'una matriu.</p> <p>Imagineu una distribuci\u00f3 com la seg\u00fcent:</p> <p>Python<pre><code>mean = [0, 0]\ncov = [[1, 2],\n       [2, 5]]\nX = rand.multivariate_normal(mean, cov, 100)\nX.shape #(100, 2)\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn; seaborn.set()  # for plot styling\n\nplt.scatter(X[:, 0], X[:, 1]);\n</code></pre> <p></p> <p></p> <p>Podem utilitzar la fancy indexing per a seleccionar 20 punts aleat\u00f2ris.</p> Python<pre><code>indices = np.random.choice(X.shape[0], 20, replace=False)\n# [26 25 78 48 34 50 43 87  4 14 53  1 88 44 23 49 72 84 66 40]\n\nselection = X[indices]\n# [[ 0.391316    1.60679404]\n#  [-0.15204994 -0.78389108]\n#  [-1.90507889 -4.08639424]\n#  [-0.37348099 -0.61909868]\n#  [-0.08723148 -0.90886801]\n\nselection.shape # (20, 2)\n</code></pre> <p>Si ho representem en un gr\u00e0fic de punts:</p> <p> <p></p> <p></p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#83-modificant-valors-amb-fancy-indexing","title":"8.3. Modificant valors amb fancy indexing","text":"<p>Am\u00e9s de poder accedir de forma c\u00f2moda utilitzant el fancy indexing tamb\u00e9 podem modificar valors a trav\u00e9s d'este mecanisme.</p> <p>Exemple</p> Python<pre><code>x = np.arange(10)\ni = np.array([2, 1, 8, 4])\nx[i] = 99\n# [ 0 99 99  3 99  5  6  7 99  9]\n</code></pre> <p>Pregunta</p> <p>Quin ser\u00e0 el resultat d'executar el seg\u00fcent codi?</p> Python<pre><code>x = np.arange(10)\ni = np.array([2, 1, 8, 4])\nx[i] -= 10\nprint(x)\n</code></pre> Resposta Python<pre><code>[ 0 89 89  3 89  5  6  7 89  9]      \n</code></pre> <p>Tingues en compte que x[i] -= 10 substituix a x[i] = x[i] - 10, executat sobre cadascun dels \u00edndex.</p> <p>Pregunta</p> <p>Quin ser\u00e0 el resultat d'executar el seg\u00fcent  fragment de codi?</p> Python<pre><code>x = np.zeros(10)\nx[[0, 0]] = [4, 6]\nprint(x)\n</code></pre> Resposta Python<pre><code>[ 6.  0.  0.  0.  0.  0.  0.  0.  0.  0.]      \n</code></pre> <p>Fixeu-se de nou, que l'assignaci\u00f3 de nou s'executa dues vegades sobre el mateix \u00edndes, per tant, la segona elimina l'efecte de la primera i l'element de la posici\u00f3 zero ser\u00e0 6.</p> <p>Pregunta</p> <p>Quin ser\u00e0 el resultat d'executar el seg\u00fcent  fragment de codi?</p> Python<pre><code>i = [2, 3, 3, 4, 4, 4]\nx[i] += 1\nprint(x)\n</code></pre> Resposta Python<pre><code>[ 6.,  0.,  1.,  1.,  1.,  0.,  0.,  0.,  0.,  0.]\n</code></pre> <p>En este cas el resultat no \u00e9s [ 6.,  0.,  1.,  2.,  3.,  0.,  0.,  0.,  0.,  0.] com s'esperaria, i aix\u00f2 \u00e9s perqu\u00e8 l'expressi\u00f3 <code>x[i] + 1</code> \u00e9s avaluada a 1 al principi, i l'assignaci\u00f3 <code>x[i] = x[i] + 1</code> es fa diverses vegades, sense incrementar el valor.</p> <p>Si voleu incrementar utilitzant el fancy indexing podeu utilitzar les funcions <code>at()</code>.</p> Python<pre><code>x = np.zeros(10)\nnp.add.at(x, i, 1)\nprint(x) # [ 0.  0.  1.  2.  3.  0.  0.  0.  0.  0.]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#84-creacio-de-dades-aleattories-amb-el-fancy-indexing","title":"8.4. Creaci\u00f3 de dades aleatt\u00f2ries amb el fancy indexing","text":"<p>Imagineu que volem agrupar una s\u00e8rie de valors en rangs definits per crear un histograma. Ho podem fer de la seg\u00fcent forma:</p> Python<pre><code>np.random.seed(42) # la semilla ens proporciona valors pseudoaleat\u00f2ris\nx = np.random.randn(100)\n\nbins = np.linspace(-5, 5, 21)\ncounts = np.zeros_like(bins)\n\ni = np.searchsorted(bins, x) # torna l'\u00edndex on situar cada dada x\n\nnp.add.at(counts, i, 1) # incrementa counts en 1 cada vegada que apareix l\u00edndex\n                        # de forma que tenim la freq\u00fc\u00e8ncia\n\nplt.plot(bins, counts, drawstyle='steps'); # creem un histograma\n</code></pre> <p> <p></p> <p></p> <p>Obtenim el mateix resultat si directament utilitzem la funci\u00f3 de matplotlib <code>hist()</code> que fa un tractament similar al que hem fet nosaltres manualment.</p> Python<pre><code>plt.hist(x, bins, histtype='step');\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#9-ordenacio-darrays","title":"9. Ordenaci\u00f3 d'arrays","text":"<p>Pregunta</p> <p>Qu\u00e8 fa el seg\u00fcent algorisme que rep com a entrada un array?</p> Python<pre><code>import numpy as np\n\ndef selection_sort(x):\n      for i in range(len(x)):\n            swap = i + np.argmin(x[i:])\n            (x[i], x[swap]) = (x[swap], x[i])\n      return x\n</code></pre> Resposta <p>L'anterior algorisme \u00e9s l'algorisme d'ordenaci\u00f3 per selecci\u00f3. En cada passada selecciona el m\u00ednim valor dels que queden a la dreta de l'actual i l'intercanvia. T\u00e9 un cost de N^2. Requerix que per cada valor \u00e9s recorrega l'array, un per a ordenar i l'altre per a trobar el m\u00ednim valor. Si creix molt el n\u00famero d'elements, el cost computacional seria elevad\u00edssim.</p> <p>Pregunta</p> <p>Qu\u00e8 fa el seg\u00fcent algorisme que rep com a entrada un array? Ser\u00e0 computacionalment m\u00e9s o menys cost\u00f3s que l'anterior?</p> Python<pre><code>def bogosort(x):\n      while np.any(x[:-1] &gt; x[1:]):\n            np.random.shuffle(x)\n      return x\n</code></pre> Resposta <p>L'anterior algorisme \u00e9s l'algorisme d'ordenaci\u00f3 per barreja aleat\u00f2ria. El seu cost \u00e9s NxN! (N per N factorial). El factorial \u00e9s de les funcions amb m\u00e9s r\u00e0pid creiximent. \u00c9s tan cost\u00f3s que no s'hauria d'utilitzar mai en aplicacions reals.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#91-npsort-i-npargsort","title":"9.1. <code>np.sort</code> i <code>np.argsort</code>","text":"<p>Afortunamdament tant python com numpy tenen algorismes d'ordenaci\u00f3 molt m\u00e9s optimitzats que els anteriors.</p> Python<pre><code>x = np.array([2, 1, 4, 3, 5])\nx_sorted = np.sort(x)\nindex_sorted = np.argsort(x)\nprint(x_sorted) # [1 2 3 4 5]\nprint(f\"{x} -&gt; {index_sorted}\") # [2 1 4 3 5] -&gt; [1 0 3 2 4]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#92-ordenacio-per-files-o-columnes","title":"9.2. Ordenaci\u00f3 per files o columnes","text":"<p>Una caracter\u00edstica \u00fatil dels algorismes d'ordenaci\u00f3 de NumPy \u00e9s la capacitat d'ordenar al llarg de files o columnes espec\u00edfiques d'una matriu multidimensional mitjan\u00e7ant l'argument <code>axis</code>.</p> <p>Exemple</p> Python<pre><code>rand = np.random.RandomState(42)\nX = rand.randint(0, 10, (4, 6))\nprint(X)\n\n# [[6 3 7 4 6 9]\n#  [2 6 7 4 3 7]\n#  [7 2 5 4 1 7]\n#  [5 1 4 0 9 5]]\n\nprint(np.sort(X, axis=0))\n\n# [[2 1 4 0 1 5]\n#  [5 2 5 4 3 7]\n#  [6 3 7 4 6 7]\n#  [7 6 7 4 9 9]]\n\nprint(np.sort(X, axis=1))\n\n#  [[3 4 6 6 7 9]\n#  [2 3 4 6 7 7]\n#  [1 2 4 5 7 7]\n#  [0 1 4 5 5 9]]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/1.%20NumPy/#93-ordenacio-parcial-nppartition","title":"9.3. Ordenaci\u00f3 parcial <code>np.partition</code>","text":"<p>De vegades ens pot interessar no ordenar tot un array sin\u00f3 trobar els k valors m\u00e9s menuts d'una matriu, encara que no s'ordene. Per a fer aix\u00f2 podem utilitzar la funci\u00f3 <code>np.partition</code>. Esta funci\u00f3 rep un array i un n\u00famero k. El resultat \u00e9s un nou array amb els k n\u00fameros m\u00e9s menuts a l'esquerra de la partici\u00f3 i la part dreta amb la resta de valors. L'ordenaci\u00f3 \u00e9s arbitr\u00e0ria, \u00e9s a dir, ninguna de les dos parts est\u00e0 ordenada, per\u00f2 estan els k m\u00e9s menuts a l'esquerra i despr\u00e9s la resta.</p> <p>Exemple</p> Python<pre><code>x = np.array([7, 2, 3, 1, 6, 5, 4])\nnp.partition(x, 3) # [2, 1, 3, 4, 6, 5, 7]\n</code></pre> <p>Tamb\u00e9 podem utilitzar esta funci\u00f3 a trav\u00e9s d'un eix en una matriu multidimensional:</p> <p>Exemple</p> Python<pre><code>rand = np.random.RandomState(42)\nX = rand.randint(0, 10, (4, 6))\n\n# [[6 3 7 4 6 9]\n# [2 6 7 4 3 7]\n# [7 2 5 4 1 7]\n# [5 1 4 0 9 5]]\n\nnp.partition(X, 2, axis=1)\n\n# [[3, 4, 6, 7, 6, 9],\n#  [2, 3, 4, 7, 6, 7],\n#  [1, 2, 4, 5, 7, 7],\n#  [0, 1, 4, 5, 9, 5]]\n</code></pre>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <ul> <li>Numpy</li> <li>Matplotlib</li> <li>Seaborn</li> <li>Keras</li> <li>Pandas</li> <li>...</li> </ul>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/exercicis/keras/07_save_and_load/","title":"Ara et toca a tu","text":"<p>Anem a poar en pr\u00e0ctica els coneixements aplicats a l'apartat. Amb qualssevol de les pr\u00e0ctiques anteriors del tema en les que has desenvolupat un model, has de:</p> <ol> <li>Guardar el model amb totes les caracter\u00edstiques (arquitectura, pesos, etc)</li> <li>Guardar el preprocessament, cas d'haver-lo fet (se suposa que l'haur\u00e0s fet).</li> <li>Crea un nou quadern i carrega tot el guardat anteriorment.</li> <li>Comprova en el model original alguna predicci\u00f3 realitzada que efectivament dona el mateix resultat</li> <li>Creat un json amb nova informaci\u00f3 (inventada)</li> <li>Preprocessar-la, comprovant l'eixida</li> <li>Fes una predicci\u00f3 i comprova que funcione</li> </ol> <p>Espai</p> <p>Tin en compte de no recompilar el model, ja que pot portar a resultats incorrectes, en quant a prediccions al model inicial i al carregat. Recorda que al comen\u00e7ar l'entrenament s'assignen pessos de manera aleat\u00f2ria.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/exercicis/numpy/Soroll_Impulsiu/","title":"Soroll impulsiu","text":"<p>Conceptes treballats</p> <ul> <li>Numpy</li> <li>PIL: Python Image Library</li> <li>Impulsive Noise</li> </ul> <p>El soroll impulsiu (impulsive noise) \u00e9s un tipus de soroll caracteritzat per pics d'alta intensitat que es produeixen de manera breu i sobtada. El soroll impulsiu aplicat a les imatges en color es manifesta com p\u00edxels amb valors an\u00f2malament alts o baixos en una petita proporci\u00f3 de la imatge, creant punts brillants o foscos que es distribueixen de manera aleat\u00f2ria.</p> <p></p> <p>Consell</p> <p>Fer servir imatges menudes per a les proves, de 50x50 com a molt.</p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/exercicis/numpy/Soroll_Impulsiu/#exercici-1-addicio-de-soroll-sinteticartificial","title":"Exercici 1. Addici\u00f3 de soroll sint\u00e8tic/artificial","text":"<p>Moltes vegades no podrem torbar dataset o dades reals per a treballar. En eixos casos hem de saber fabricar-les per a crear i provar els nostres programes. Aquest concepte s'anomena aumentaci\u00f3.</p> <p>Fes un programa que reb com arguments un nom d'arxiu (imatge en color: png, bmp o similar) i un percentatge entre 1 i 40 (es recomana 5% per a les proves inicials). Aquest programa afegir\u00e0 dit percentatge de soroll impulsiu a cada p\u00edxel de la imatge, seguint el seg\u00fcent algorisme:</p> <ol> <li>Obrirem la imatge amb PIL </li> <li>La transformem a un array de numpy</li> <li>Recorrem el array. Les vores no es tenen en consideraci\u00f3. </li> <li>Amb probabilitat p apliquem soroll o no de la seg\u00fcent manera:<ol> <li>10 % a tots 3 canals</li> <li>30% al canal R</li> <li>30% al canal G</li> <li>30% al canal B</li> </ol> </li> <li>Transformem la imatge contaminada a imatge PIL</li> <li>Guardem la imatge al disc amb el nom <code>nom_i_num.png</code> on nom \u00e9s el nom original i num el valor de contaminaci\u00f3</li> </ol> <p>Comprova (amb un comptador dels p\u00edxels que contamines i els c\u00e0lculs adients) que el nombre de soroll afegit es correspon al nivell de soroll exigit (p). </p>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/exercicis/numpy/Soroll_Impulsiu/#exercici-2-deteccio-de-soroll","title":"Exercici 2. Detecci\u00f3 de soroll","text":"<p>Anem ara a detectar el soroll. Es demana fer un programa que rebr\u00e0 el nom de la imatge contaminada, i altres par\u00e0metres que estudiarem a continuaci\u00f3.</p> <ul> <li>m \u00e9s la distancia (colorom\u00e8trica) a partir de la qual es considera que un p\u00edxel \u00e9s proper a altre. Poden fer-se servir varies f\u00f3rmules de dist\u00e0ncia. Per simplificar farem servir la L2 o Euclidea.</li> <li>w \u00e9s el tamany de la finestra corredera (imparell, lo que ser\u00e0 3x3 o 5x5, etc)</li> <li>k \u00e9s el n\u00famero de ve\u00efns propers</li> </ul> <p>Per a fer-ho fixa't que no \u00e9s m\u00e9s que detectar un element estrany entre altres normals. </p> <p>Definici\u00f3</p> <p>Un p\u00edxel \u00e9s considera no soroll\u00f3s si dins d'una finestra w x w te almenys k veins a menys d'una dist\u00e0ncia m. Si no els trobem dits m veins, es considera sorollos</p> <p></p> <p>L'algorisme a implementar ser\u00e0:</p> <ol> <li> <p>Creem una imatge de la mateixa dimensi\u00f3 de la imatge original, que ser\u00e0 una m\u00e0scara. Aquesta m\u00e0scara, un cop acabat el proc\u00e9s, indicar\u00e0 si el p\u00edxel en certa posici\u00f3 \u00e9s o no soroll\u00f2s:</p> </li> <li> <p>Si el valor <code>i,j</code> val <code>0</code>, vol dir que el p\u00edxel <code>i,j</code> \u00e9s bo</p> </li> <li> <p>Si el valor <code>i,j</code> val <code>1</code>, vol dir que els pixel <code>i,j</code> \u00e9s soroll</p> </li> <li> <p>Recorrem tots els p\u00edxels de la imatge, convertida en array numpy. Les vores no es consideren.</p> </li> <li>Sobre el p\u00edxel en consideraci\u00f3, construim una finestra W x W (per exemple 3x3) on el p\u00edxel avaluat \u00e9s el central. </li> <li>Recorrem els 8 veins (en una 3x3) i anem calculant dist\u00e0ncies. En el moment que en tenim k ve\u00efns propers (a menys dist\u00e0ncia m), ja podem deduir que \u00e9s un pixel bo.</li> <li>Si hem recorregut tots els veins i no arribem a m veins, el diagnostiquem com a soroll.</li> <li>Marquem el bit de la m\u00e0scara a 1</li> </ol> <p>En acabar guardarem la m\u00e0scara al disc com a <code>mascara_nom_imatge.png</code></p> <p>Comprova (amb un comptador i els c\u00e0lculs adients) la bondat de la detecci\u00f3 de soroll: </p> <ul> <li>Es correspon el nivell de soroll afegit amb el detectat</li> <li>Que pots fer per ajustar-ho?</li> </ul>"},{"location":"U03%20Python%20aplicat%20al%20Big%20Data%20i%20Intel%C2%B7ligencia%20Artificial/exercicis/numpy/Soroll_Impulsiu/#exercici-3-filtratge","title":"Exercici 3. Filtratge","text":"<p>Ara es tracta de filtrar la imatge per a restaurar-la. Per a aix\u00f2 necessitem la imatge sorollosa que hem generat aix\u00ed com la m\u00e0scara de soroll detectada i el tamany de la finestra w.</p> <p>Simplement per a cada p\u00edxel sorollos hem de substituir-lo per alguna aproximaci\u00f3 entre els seus veins de la finestra W x W no sorollosos. La m\u00e9s senzilla \u00e9s la mitjana aritm\u00e8tica.</p> <p>Altra opci\u00f3 millor, per\u00f2 m\u00e9s costosa \u00e9s substituir-lo per aquell vei que minimitza la dist\u00e0ncia a la resta dels veins de la finestra. \u00c9s a dir el millor element com a central.</p> <ol> <li>Carregar la imatge sorollosa i m\u00e0scara de soroll.</li> <li>Iterem sobre tots els p\u00edxels de la imatge (les vores no conten)</li> <li>Si el pixel \u00e9s net, passem al seg\u00fcent</li> <li>Si no, calculem la mitjana aritm\u00e8tica dels pixels nets de la imatge.</li> <li>Reemplacem el central per aquesta mitjana, arrodonida a  nombre enter</li> <li>Implementa una versi\u00f3 del MAE (Error Mitj\u00e0 Absolut) i calcula'l entre la imatge filtrada i la imatge original. </li> <li>Guardar la imatge filtrada com a <code>nom_filtered.png</code></li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/0.%20Index/","title":"0. Index","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/0.%20Index/#index-de-la-unitat","title":"\u00cdndex de la unitat","text":"<ol> <li>Elaborar una aplicaci\u00f3 FrontEnd amb <code>Flet</code></li> <li>Contenidors de BBDD amb <code>Docker</code></li> <li>Peticions HTTP. API-REST</li> <li>Elaborar una aplicaci\u00f3 BackEnd amb <code>Flask</code></li> <li>Introducci\u00f3 al DeepLearning amb Keras</li> </ol> <p>En aquesta unitat anem a veure com desenvolupar aplicacions client-servidor que treballen de manera coordinada mitjan\u00e7ant el protocol HTTP.</p> <p>La part client es desenvolupar\u00e0 amb <code>Flet</code>, un workbench de Flutter per a Python que permet generar aplicacions multiplataforma: web, escriptori i m\u00f2bil.</p> <p>Entendrem els detalls de la comunicaci\u00f3 mitjan\u00e7ant internet amb el protocol HTTP i les seues peticions (request) que poden ser de demanar dades (GET) o de guardar dades (POST). A aquestes peticions els servidors ens donaran unes respostes (response) amb un codi d'estat, indicant si tot ha anat be i la resposta pr\u00f2piament dita, habitualment encapsulada amb un objecte JSON, est\u00e0ndar actual d'intercanvi d'informaci\u00f3.</p> <p>Veurem el support que pot tindre el servidor accedint i recuperant dades en bases de dades, fent serivr MongoDB com a GBD i Docker com a contenidor de la mateixa.</p> <p>Per acabar farem un projecte integrador on desenvoluparem una aplicaic\u00f3 full stack.</p> <p>L'objectiu \u00e9s en futures sessions \u00e9s que el nostre servidor sigui capa\u00e7 de recuperar la informaci\u00f3 de models de dades o de xarxes neuronals, atenent a peticions de clients d'enlloc i/o comunicant-se amb altres servidors en el n\u00favol, en compte d'una BBDD.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/","title":"1. Programaci\u00f3 d'aplicacions client amb Flet","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#1-aplicacions-multiplataforma","title":"1. Aplicacions multiplataforma","text":"<p>S\u00f3n aquelles aplicacions que s\u00f3n desenvolupades en un \u00fanic llenguatge o framework i que faciliten la seua exportaci\u00f3 i execuci\u00f3 a diversos dispositiu, de manera independent al sistema operatiu.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#11-aproximacions","title":"1.1. Aproximacions","text":"<p>Per tal de minimitzar el desenvolupament espec\u00edfic par a cada plataforma, i el cost que aix\u00f2 suposa, apareixen diverses tecnolog\u00edes, centrades sobretot en tecnolog\u00edes web. Dins d\u2019aquestes, disposem d\u2019un gran ventall de possibilitats:</p> <ul> <li> <p>Aplicacions web responsives: Es tracta d\u2019aplicacions basades en tecnologia web: HTML, CSS i JavaScript, que adapten la seua interf\u00edcie a qualsevol dispositiu (disseny responsive). Aquestes aplicacions no requereixen de cap desenvolupament natiu, ja que s\u2019executen sobre el propi navegador web del sistema. Aix\u00ed doncs, disposem d\u2019\u00fan codi \u00fanic, per\u00f2 que no ofereixen una experi\u00e8ncia d\u2019usuari tan flu\u00efda com les aplicacions natives, ni permeten l\u2019acc\u00e9s a tots els components del sistema.</p> </li> <li> <p>Aplicacions h\u00edbrides: Es tracta d\u2019aplicacions web responsives que es carreguen dins un component de tipus WebView del sistema, que no \u00e9s m\u00e9s que un navegador sense la barra de navegaci\u00f3, pel que presenta l\u2019aparen\u00e7a d\u2019una aplicaci\u00f3 nativa. Aquestes aplicacions, a m\u00e9s, tamb\u00e9 permeten l\u2019acc\u00e9s a trav\u00e9s del WebView a algunes caracter\u00edstiques del dispositiu, com la ubicaci\u00f3 o l\u2019acceler\u00f2metre. El framework per al desenvolupament d\u2019aplicacions h\u00edbrides m\u00e9s popular \u00e9s Ionic, que permet el desenvolupament amb altres frameworks web com React, Angular o Vue.</p> </li> <li> <p>Aplicacions web progressives (PWAs): Les PWAs segueixen sent aplicacions web, per\u00f2 que gr\u00e0cies a determinats components, com els Service Workers i altres tecnologies estan m\u00e9s a prop de les aplicacions natives, de manera que permeten traure major potencial d\u2019aquestes, accedint al maquinari, treballar amb poca connexi\u00f3 o sense ella, o oferir notificaions del sistema. Existeixen diversos frameworks per al desenvolupament de PWAs, entre els quals es troben React PWA Library, Angular PWA Framework, Vue PWA Framework, Ionic PWA Framework, Svelte, PWA Builder o Polymer.</p> </li> </ul> <p>Com hem comentat, aquests tres tipus d\u2019aplicacions es basen en l\u2019\u00fas de tecnolog\u00edes web i algun component, b\u00e9 siga el propi navegador o un WebView. Tot i que hi ha apliccions molt bones basades en aquestes tecnolog\u00edes, no aporten totes les funcionalitats ni la flu\u00efdesa d\u2019una aplicaci\u00f3 nativa.</p> <p>Un pas m\u00e9s enll\u00e0 en el desenvolupament multiplataforma es troben els frameworks que, partint d\u2019un mateix codi base, generen aplicacions compilades de forma nativa per als diferents sistemes operatius. Algunes de les tecnologies m\u00e9s utilitzades en aquest tipus d\u2019aplicacions s\u00f3n:</p> <ul> <li> <p>React Native i Native Script: Que utilitzen com a base el llenguatge de programaci\u00f3 JavaScript, per\u00f2 en lloc de construir les interf\u00edcies mitjan\u00e7ant HTML, utilitzen components propis del framework que s\u00f3n compilats a codi natiu, fent ja innecessari utilitzar un WebView com a intermediari.</p> </li> <li> <p>Flutter: Aquest framework, creat i mantingut per Google permet el desenvolupament d\u2019aplicacions multiplataforma mitjan\u00e7ant el llenguatge Dart. Aquestes aplicacions s\u00f3n compilades a codi natiu dels diferents sistemes operatius (Android, iOS, Linux, Windows) i fins i tot web. Flutter, \u00e9s a m\u00e9s la tecnolog\u00eda nativa del sistema operatiu Google Fuchsia, basat en el seu propi microkernel Zircon, i que a mitj\u00e0 o llarg termini podria ser el reempla\u00e7 d\u2019Android.</p> </li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#2-introduccio","title":"2. Introducci\u00f3","text":"<p>En aquest primer apartat de la unitat introduirem les tecnologies que utilitzarem per als nostres desenvolupaments, Python, Flutter i Flet.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#21-python","title":"2.1. Python","text":"<p>\u2122/\u00aePython Software Foundation, GPL http://www.gnu.org/licenses/gpl.html, via Wikimedia Commons</p> <p>Python \u00e9s un llenguatge de programaci\u00f3 multiparadigma, interpretat, multiplataforma i lliure. Va n\u00e0ixer de la m\u00e0 de Guido Van Rossum, un programador holand\u00e9s, i la seua primera versi\u00f3 va ser publicada el 1991. </p> <p>Caracter\u00edstiques:</p> <ul> <li>D'alt nivell: proper a llenguatge de l'\u00e9sser hum\u00e0 i no al llenguatge m\u00e0quina binari.</li> <li>Interpretat: s'executa en qualsevol m\u00e0quina que tinga un int\u00e8rpret de Python. Aix\u00f2 suposa un gran avantatge a l'hora de fer petits canvis de forma r\u00e0pida, ja que elimina la necessitat de recompilar el codi.</li> <li>Multiparadigma: podem fer servir la programaci\u00f3 modular, estructurada o l'orientaci\u00f3 a objectes segons les nostres necessitats.</li> <li>Multiplataforma: permet que el codi siga executat en diferents sistemes operatius.</li> <li>Lliure: \u00e9s propietat de la Python Software Foundation i est\u00e0 publicat sota llic\u00e8ncia PSF-License que \u00e9s compatible amb GPL (General Public License), la qual cosa significa que \u00e9s de lliure \u00fas i distribuci\u00f3, fins i tot per a \u00fas comercial.</li> <li>Net i llegible: posa l'accent en la seua llegibilitat, cosa que ho fa f\u00e0cilment comprensible i f\u00e0cil d'aprendre. Si ja heu treballat amb qualsevol altre llenguatge de programaci\u00f3, us resultar\u00e0 f\u00e0cil l'\u00fas de Python.</li> <li>Tipat fort i din\u00e0mic: encara que les variables s\u00f3n d'un tipus concret, no tenim la necessitat de declarar-los, sin\u00f3 que l'assignaci\u00f3 de tipus s'anir\u00e0 en temps d'execuci\u00f3.</li> <li>\u00c0mplia comunitat: gr\u00e0cies a la seua popularitat compta amb un ampli suport i es pot trobar f\u00e0cilment molta documentaci\u00f3, esdeveniments, confer\u00e8ncies, etc.</li> </ul> <p>Actualment ocupa el primer lloc al r\u00e0nquing TIOBE, que \u00e9s un prestigi\u00f3s indicador de la popularitat dels llenguatges de programaci\u00f3 que s'actualitza un cop al mes. No nom\u00e9s aix\u00f2, sin\u00f3 que a m\u00e9s mostra una tend\u00e8ncia creixent davant de llenguatges com C o Java, que mostren la tend\u00e8ncia contr\u00e0ria. Aix\u00f2 \u00e9s degut en gran manera al seu \u00fas majoritari en camps com la Intel\u00b7lig\u00e8ncia Artificial, el Big Data, el Machine Learning o la Ciberseguretat, \u00e0rees predominants en un futur proper. </p> <p>TIOBE</p> <p>\u00c9s important assenyalar que l'\u00edndex TIOBE no tracta d'escollir el millor llenguatge de programaci\u00f3 o el llenguatge en qu\u00e8 s'han escrit la majoria de les l\u00ednies de codi.</p> <p>Tot aix\u00f2 ens ha portat a escollir aquest llenguatge de programaci\u00f3 per al present curs.</p> <p>Vegem la comparaci\u00f3 entre \u201cHola M\u00f3n!\u201d de Java i de Python</p> JavaPython Java<pre><code>public class HolaM\u00f3n {\n    public static void main(String[] args) {\n        System.out.println(\"Hola M\u00f3n!\");\n    }\n}\n</code></pre> Python<pre><code>print(\"Hola m\u00f3n!\")\n</code></pre> <p>Versions de Python</p> <p>Hi ha dues versions de python no compatibles entre elles, la versi\u00f3 2 i la versi\u00f3 3. Nosaltres utilitzarem la versi\u00f3 3 de python.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#22-flutter","title":"2.2. Flutter","text":"<p>Flutter \u00e9s un framework de codi obert desenvolupat per Google que es fa servir per a la creaci\u00f3 d'aplicacions m\u00f2bils per a diferents plataformes, com Android i iOS, aix\u00ed com per a aplicacions per a la web i escriptori. Les seves principals caracter\u00edstiques s\u00f3n les seg\u00fcents:</p> <ul> <li> <p>Desenvolupament multiplataforma: Flutter permet als desenvolupadors crear una sola base de codi que pot ser utilitzada per a desplegar aplicacions en diverses plataformes. Aix\u00f2 significa que pots desenvolupar una aplicaci\u00f3 i fer-la funcionar en dispositius Android, iOS, la web i fins i tot en altres plataformes com Windows o macOS.</p> </li> <li> <p>Llenguatge de programaci\u00f3 Dart: Flutter fa servir el llenguatge de programaci\u00f3 Dart com a base. Dart \u00e9s un llenguatge modern i eficient que es compila a codi nativo, la qual cosa millora l'efici\u00e8ncia de l'aplicaci\u00f3 i el seu rendiment.</p> </li> <li> <p>Widgets personalitzats: Flutter ofereix una \u00e0mplia gamma de widgets personalitzats que es poden utilitzar per a crear una interf\u00edcie d'usuari atractiva i din\u00e0mica. Aquests widgets s\u00f3n altament personalitzables i permeten als desenvolupadors dissenyar aplicacions amb un aspecte i comportament \u00fanic.</p> </li> <li> <p>R\u00e0pides actualitzacions d'UI: Flutter utilitza un sistema de composici\u00f3 de l'interf\u00edcie d'usuari (UI) basat en widgets que permet actualitzacions r\u00e0pides i eficients de la UI. Aix\u00f2 significa que les animacions i les interaccions s\u00f3n suaus i responsives.</p> </li> <li> <p>Hot Reload: Aquesta caracter\u00edstica permet als desenvolupadors veure els canvis immediatament a mesura que editen el codi font, sense necessitat de reiniciar l'aplicaci\u00f3. Aix\u00f2 accelera el proc\u00e9s de desenvolupament i la depuraci\u00f3.</p> </li> <li> <p>Suport de tercers: Flutter t\u00e9 un ecosistema actiu i en creixement de paquets i extensions que faciliten l'acc\u00e9s a funcionalitats i integracions diverses. Aix\u00f2 fa que sigui f\u00e0cil d'integrar amb altres serveis i biblioteques.</p> </li> <li> <p>Altes prestacions i rendiment: Gr\u00e0cies a la compilaci\u00f3 a codi natiu, les aplicacions Flutter solen tenir un bon rendiment i una c\u00e0rrega r\u00e0pida.</p> </li> <li> <p>Comunitat activa: Flutter t\u00e9 una comunitat \u00e0mplia i actiu, amb molts recursos en l\u00ednia, tutorials i ajuda disponible per a desenvolupadors.</p> </li> </ul> <p>En resum, Flutter \u00e9s una opci\u00f3 atractiva per a desenvolupadors que volen crear aplicacions m\u00f2bils i multiplataforma amb un aspecte i comportament personalitzats, aix\u00ed com un alt rendiment i un cicle de desenvolupament eficient. La seva versatilitat i la seva creixent popularitat han fet que sigui una eina rellevant en el m\u00f3n del desenvolupament d'aplicacions.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#23-flet","title":"2.3. Flet","text":"<p>Flet \u00e9s un framework que permet crear aplicacions GUI tant web, com d'escriptori com per a m\u00f2bils. Tot i que el projecte vol incorporar la possibilitat d'utilitzar diversos llenguatges de programaci\u00f3 com C++ o Go, actualment sols permet la creaci\u00f3 d'aplicacions amb Python.</p> <p>Els controls de Flet es basen en els controls Flutter de Google, combinant controls m\u00e9s menuts, ocultant complexitats i aplicant valors predeterminats raonables per garantir que les nostres aplicacions tinguen un aspecte professional sense molts esfor\u00e7os.</p> <p>En definitiva, farem \u00fas dels controls de Flutter des de Python.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#3-components-de-programari","title":"3. Components de programari","text":"<p>En el desenvolupament de circuits electr\u00f2nics, el grau de reutilitzaci\u00f3 de components \u00e9s molt alt, de manera que la construcci\u00f3 d'un circuit electr\u00f2nic es limita a la integraci\u00f3 i acoblament de diferents components comercials. Per exemple, una placa base cont\u00e9 components com resist\u00e8ncies, condensadors, rel\u00e9s, xips\u2026, que no han estat fabricats pel fabricant de la placa. Aix\u00ed que, hi ha fabricants especialitzats en components i altres en producte final. Aix\u00f2 permet reduir costos quant a temps i diners es refereix.</p> <p>En el desenvolupament de programari, la reutilitzaci\u00f3 de codi continua sent relativament escassa, per\u00f2 amb la utilitzaci\u00f3 de components aquest problema es redueix, reduint alhora el temps de desenvolupament, el cost econ\u00f2mic i els errors de programaci\u00f3.</p> <p>El desenvolupament de la interf\u00edcie d'una aplicaci\u00f3 es basa en la construcci\u00f3 d'una aplicaci\u00f3 a partir de components programari ja existents, anomenats normalment controls, limitant al m\u00ednim necessari el desenvolupament de codi nou. Podem imaginar-nos els components com les peces d'un Lego que podem connectar entre ells en una jerarquia d'arbre. Qualsevol aplicaci\u00f3 pot estar composta per m\u00faltiples components, i els components principals tenen components secundaris niats dins seu. </p> <p>Vam veure una llista dels principals controls d'usuari a la unitat anterior. En aquesta unitat posarem en pr\u00e0ctica l'\u00fas dels controls o components esmentats amb Flet.</p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#4-installacio-de-flet","title":"4. Instal\u00b7laci\u00f3 de Flet","text":"<p>Flet necessita com a m\u00ednim la versi\u00f3 3.7 de Python, aix\u00ed que el que recomanem \u00e9s crear un entorn virtual conda amb l'\u00faltima versi\u00f3 de Python. Una vegada creat i activat, instal\u00b7larem flet. Bash<pre><code>$ conda create --name NOM python=3.11\n$ conda activate NOM\n$ conda install -c conda-forge flet\n</code></pre></p> \u00das de Flet amb WSL <p>Si executeu Flet amb WSL i obteniu l'error <code>error while loading shared libraries: libgstapp-1.0.so.0: cannot open shared object file: No such file or directory</code>, necessitareu instal\u00b7lar les llibreries GStreamer.</p> Bash<pre><code>$ sudo apt update\n$ sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#5-estructura-basica-dun-programa-flet","title":"5. Estructura b\u00e0sica d'un programa Flet","text":"<p>L'estructura m\u00ednima d'un programa Flet \u00e9s la seg\u00fcent:</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    # add/update controls on Page\n    pass\n\nft.app(target=main)\n</code></pre> <p>Un programa t\u00edpic de Flet acaba amb una crida a flet.app() on comen\u00e7a l'aplicaci\u00f3 esperant noves sessions d'usuari. La funci\u00f3 main() \u00e9s el punt d'entrada de l'aplicaci\u00f3. Per a cada sessi\u00f3 d'usuari es crear\u00e0 un fil d'execuci\u00f3, que se li passar\u00e0 la inst\u00e0ncia de Page. </p> <p>Quan s'executa l'aplicaci\u00f3 Flet al navegador, s'inicia una nova sessi\u00f3 d'usuari per a cada pestanya o p\u00e0gina oberta. Quan s'executa com a aplicaci\u00f3 d'escriptori, nom\u00e9s es crea una sessi\u00f3.</p> <p>Page \u00e9s com un llen\u00e7 espec\u00edfic per a cada usuari, un estat visual d'una sessi\u00f3 d'usuari. Per crear una GUI, afegim i suprimim controls a una p\u00e0gina.</p> <p>Per defecte, l'aplicaci\u00f3 Flet s'inicia en una finestra del sistema operatiu natiu, per\u00f2, podem obrir-la en una finestra del navegador modificant la crida a flet.app() i indicant el port desitjat (aleatori en cas de no especificar-lo):</p> Python<pre><code>ft.app(target=main, view=\"web_browser\", port=8080)\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#51-hello-world","title":"5.1. Hello world!!","text":"<p>Els controls s\u00f3n els elements b\u00e0sics i principals per crear interf\u00edcies d'usuari a Flutter. Podeu mostrar informaci\u00f3, rebre informaci\u00f3 de l'usuari i organitzar altres controls de forma agrupada. </p> <p>Exemple</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Hello world with Flet!!\"\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    text = ft.Text(value='Hello world with Flet!!', text_align=ft.TextAlign.LEFT)\n\n    page.add(\n        text\n    )\n\nft.app(target=main)\n</code></pre> <p>Si executem el codi anterior obtindrem una aplicaci\u00f3 com la seg\u00fcent:</p> <p></p> <p>Dins la finestra estar\u00e0 continguda tota la interf\u00edcie de l'usuari. En aquest cas, nom\u00e9s cont\u00e9 un component Text centrar tant verticalment com horitzontalment, sense interacci\u00f3 possible. Cada aplicaci\u00f3 gr\u00e0fica tindr\u00e0 almenys una finestra, per\u00f2 en podr\u00e0 tenir m\u00e9s. Aix\u00f2 ho veurem en seccions posteriors de la unitat. Normalment una aplicaci\u00f3 acabar\u00e0 en tancar la darrera de les finestres.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#6-controls","title":"6. Controls","text":"<p>La interf\u00edcie d'usuari est\u00e0 feta de controls (tamb\u00e9 coneguts com widgets). Per fer visibles els controls per a un usuari, s'han d'afegir a un Page o dins d'altres controls que ja siguen visibles. La p\u00e0gina \u00e9s el control superior, i la resta de controls pengen d'aquesta arrel formant una estructura d'arbre.</p> <p>Els controls s\u00f3n classes de Python, simplement els instanciarem mitjan\u00e7ant els seus constructors amb els par\u00e0metres que ens convinga, per exemple:</p> Python<pre><code>text = ft.Text(value=\"Hello, world!\", color=\"green\")\n</code></pre> <p>Per mostrar el control anterior, l'afegim a la llista de controls de Page i fem una crida a page.update() per enviar els canvis de p\u00e0gina a un navegador o client d'escriptori:</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    t = ft.Text(value=\"Hello, world!\", color=\"green\")\n    page.controls.append(t)\n    page.update()\n\nft.app(target=main)\n</code></pre> <p>Podem modificar les propietats del control i la interf\u00edcie d'usuari s'actualitzar\u00e0 en la seg\u00fcent crida a page.update():</p> Python<pre><code>t = ft.Text()\npage.add(t) # \u00e9s una abreviatura de page.controls.append(t) i page.update()\n\nfor i in range(10):\n    t.value = f\"Pas n\u00famero {i}\"\n    page.update()\n    time.sleep(1)\n</code></pre> Actualitzaci\u00f3 de controls <p>El m\u00e8tode Page.update() nom\u00e9s actualitzar\u00e0 els canvis fets des de l'\u00faltima crida al mateix m\u00e8tode. Podeu afegir, eliminar o modificar tants controls com vulgau abans de la seua crida, de forma que l'actualitzaci\u00f3 siga en lot.    </p> <p>Alguns controls s\u00f3n contenidor d'altres controls (com Page). Per exemple, el control Row permet organitzar els controls en fila:</p> Python<pre><code>page.add(\n    ft.Row(controls=[\n        ft.TextField(label=\"Your name\"),\n        ft.ElevatedButton(text=\"Send\")\n    ])\n)\n</code></pre> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#61-esdeveniments","title":"6.1. Esdeveniments","text":"<p>Cada interacci\u00f3 de l'usuari amb la interf\u00edcie, per exemple un clic de ratol\u00ed, un doble clic, l'\u00fas d'una tecla, etc. generar\u00e0 un esdeveniment. Aquest esdeveniment ser\u00e0 afegit a la cua d'esdeveniments (event queue) per ser gestionat.</p> <p>El bucle d'esdeveniments (event loop), que \u00e9s un bucle infinit, comprovar\u00e0 a cada iteraci\u00f3 si hi ha esdeveniments pendents de ser gestionats. En cas de ser aix\u00ed, l'esdeveniment ser\u00e0 gestionat pel gestor d'esdeveniments (event handler) que executar\u00e0 el vostre controlador. Quan aquest acaba, el control torna al bucle d'esdeveniments per esperar m\u00e9s esdeveniments. A\u00e7\u00f2 ja ho vam utilitzar al joc que desenvoluparem amb PyGame.</p> <p>Tot aquest proc\u00e9s complex, s'oculta al programados, que simplement haur\u00e0 de programar quina funcionalitat s'executa en produir-se cert esdeveniment. </p> Python<pre><code>import flet as ft\n\ndef main(page):\n    def add_clicked(e):\n        page.add(ft.Checkbox(label=new_task.value))\n        new_task.value = \"\"\n        new_task.focus()\n        new_task.update()\n\n    new_task = ft.TextField(hint_text=\"Tasca pendent\", width=300)\n    page.add(ft.Row([new_task, ft.ElevatedButton(\"Afegir\", on_click=add_clicked)]))\n\nft.app(target=main)\n</code></pre> Flet vs Flutter <p>Flet implementa un model d'interf\u00edcie d'usuari imperatiu on creeu \"manualment\" la interf\u00edcie d'usuari de l'aplicaci\u00f3 amb controls d'estat i despr\u00e9s la modifiqueu actualitzant les propietats de control. En canvi, Flutter implementa un model declaratiu on la interf\u00edcie d'usuari es reconstrueix autom\u00e0ticament amb els canvis de dades de l'aplicaci\u00f3. La gesti\u00f3 de l'estat de l'aplicaci\u00f3 a les aplicacions frontend modernes \u00e9s una tasca inherentment complexa i l'enfocament de la vella escola de Flet \u00e9s m\u00e9s atractiu i simple per als programadors sense experi\u00e8ncia en el frontend.</p> Propietat visible <p>Cada control t\u00e9 la propietat visible que \u00e9s True per defecte. La configuraci\u00f3 visible a False impedeix que el control (i tots els seus fills, si hi ha) es mostren. Els controls ocults no es poden enfocar, ni seleccionar amb un teclat o ratol\u00ed i no emeten cap esdeveniment.</p> Propietat disabled <p>Cada control t\u00e9 la propietat disabled que \u00e9s False per defecte, el control i tots els seus fills estan habilitats. S'utilitza principalment amb controls d'entrada de dades com els botons, TextField, Dropdown, Checkbox,... Tanmateix, disabled es podria establir en un control pare i el seu valor es propagar\u00e0 a tots els fills de forma recursiva.</p> Python<pre><code>first_name = ft.TextField()\nlast_name = ft.TextField()\ncolumn = ft.Column(controls=[\n    first_name,\n    last_name\n])\ncolumn.disabled = True\npage.add(c)\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#62-referencies-a-controls","title":"6.2. Refer\u00e8ncies a Controls","text":"<p>Els controls Flet s\u00f3n objectes i per accedir a les seves propietats hem de mantenir les refer\u00e8ncies (variables) a aquests objectes. Quan s'afegeixen molts controls i controladors d'esdeveniments, es fa dif\u00edcil mantindre totes les definicions de control en un sol lloc, de manera que es dispersen pel cos del main(). Mirant els par\u00e0metres de page.add(), \u00e9s dif\u00edcil imaginar (sense mirar constantment a les definicions de variables) com seria la forma final de la interf\u00edcie (ah\u00ed pot ajudar molt el nom de la variable).</p> Python<pre><code>page.add(\n    first_name,\n    last_name,\n    ft.ElevatedButton(\"Say hello!\", on_click=btn_click),\n    greetings,\n)\n</code></pre> <p>Flet proporciona una classe Ref que permet definir una refer\u00e8ncia al control, utilitzar aquesta refer\u00e8ncia als controladors d'esdeveniments i establir la refer\u00e8ncia a un control.</p> <p>Per definir una nova refer\u00e8ncia a un control:</p> Python<pre><code>first_name = ft.Ref[ft.TextField]()\n</code></pre> <p>Per accedir al control referenciat (desrefer\u00e8ncia del control), utilitzem la propietat Ref.current: Python<pre><code>first_name.current.value = \"\"\n</code></pre></p> <p>Per utilitzar la refer\u00e8ncia al control:</p> Python<pre><code>page.add(\n    ft.TextField(ref=first_name, label=\"First name\", autofocus=True)\n)\n</code></pre> <p>Compareu els seg\u00fcents fragments de codi:</p> <p>Variables de control vs Refer\u00e8ncies a controls</p> <p>Sense Refs Python<pre><code>import flet as ft\n\ndef main(page):\n\n    first_name = ft.TextField(label=\"First name\", autofocus=True)\n    last_name = ft.TextField(label=\"Last name\")\n    greetings = ft.Column()\n\n    def btn_click(e):\n        greetings.controls.append(ft.Text(f\"Hello, {first_name.value} {last_name.value}!\"))\n        first_name.value = \"\"\n        last_name.value = \"\"\n        page.update()\n        first_name.focus()\n\n    page.add(\n        first_name,\n        last_name,\n        ft.ElevatedButton(\"Say hello!\", on_click=btn_click),\n        greetings,\n    )\n\nft.app(target=main)\n</code></pre></p> <p>Amb Refs Python<pre><code>import flet as ft\n\ndef main(page):\n\n    first_name = ft.Ref[ft.TextField]()\n    last_name = ft.Ref[ft.TextField]()\n    greetings = ft.Ref[ft.Column]()\n\n    def btn_click(e):\n        greetings.current.controls.append(\n            ft.Text(f\"Hello, {first_name.current.value} {last_name.current.value}!\")\n        )\n        first_name.current.value = \"\"\n        last_name.current.value = \"\"\n        page.update()\n        first_name.current.focus()\n\n    page.add(\n        ft.TextField(ref=first_name, label=\"First name\", autofocus=True),\n        ft.TextField(ref=last_name, label=\"Last name\"),\n        ft.ElevatedButton(\"Say hello!\", on_click=btn_click),\n        ft.Column(ref=greetings),\n    )\n\nft.app(target=main)\n</code></pre></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#7-principals-controls-en-formularis","title":"7. Principals controls en formularis","text":"<p>A la primera unitat vam veure un llistat de controls habituals juntament amb el seu \u00fas habitual. Farem un llistat amb els controls m\u00e9s habituals de Flet usats en formularis, juntament amb algun dels seus esdeveniments. Practicarem amb exemples i exercicis en altres apartats de la unitat. Per obtenir una llista completa i m\u00e9s informaci\u00f3 de cadascun, cal consultar la documentaci\u00f3 de Flet.</p> <p>Controls</p> QCheckBoxTextDropdownRadioGroupTextButtonTabsTextFieldSliderSwitchFilePicker Python<pre><code>import flet as ft\n\ndef main(page):\n    def checkbox_changed(e):\n        output_text.value = (\n            f\"You have learned how to ski :  {todo_check.value}.\"\n        )\n        page.update()\n\n    output_text = ft.Text()\n    todo_check = ft.Checkbox(label=\"ToDo: Learn how to use ski\", value=False, on_change=checkbox_changed)\n    page.add(todo_check, output_text)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Hello world with Flet!!\"\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    text = ft.Text(value='Hello world with Flet!!', text_align=ft.TextAlign.LEFT)\n\n    page.controls.append(\n        text\n    )\n\n    page.update()\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\n\ndef main(page: ft.Page):\n    def button_clicked(e):\n        output_text.value = f\"Dropdown value is:  {color_dropdown.value}\"\n        page.update()\n\n    output_text = ft.Text()\n    submit_btn = ft.ElevatedButton(text=\"Submit\", on_click=button_clicked)\n    color_dropdown = ft.Dropdown(\n        width=100,\n        options=[\n            ft.dropdown.Option(\"Red\"),\n            ft.dropdown.Option(\"Green\"),\n            ft.dropdown.Option(\"Blue\"),\n        ],\n    )\n    page.add(color_dropdown, submit_btn, output_text)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page):\n    def button_clicked(e):\n        t.value = f\"Your favorite color is:  {cg.value}\"\n        page.update()\n\n    t = ft.Text()\n    b = ft.ElevatedButton(text='Submit', on_click=button_clicked)\n    cg = ft.RadioGroup(content=ft.Column([\n        ft.Radio(value=\"red\", label=\"Red\"),\n        ft.Radio(value=\"green\", label=\"Green\"),\n        ft.Radio(value=\"blue\", label=\"Blue\")]))\n\n    page.add(ft.Text(\"Select your favorite color:\"), cg, b, t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Text button with 'click' event\"\n\n    def button_clicked(e):\n        b.data += 1\n        t.value = f\"Button clicked {b.data} time(s)\"\n        page.update()\n\n    b = ft.TextButton(\"Button with 'click' event\", on_click=button_clicked, data=0)\n    t = ft.Text()\n\n    page.add(b, t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n\n    t = ft.Tabs(\n        selected_index=1,\n        animation_duration=300,\n        tabs=[\n            ft.Tab(\n                text=\"Tab 1\",\n                content=ft.Container(\n                    content=ft.Text(\"This is Tab 1\"), alignment=ft.alignment.center\n                ),\n            ),\n            ft.Tab(\n                tab_content=ft.Icon(ft.icons.SEARCH),\n                content=ft.Text(\"This is Tab 2\"),\n            ),\n            ft.Tab(\n                text=\"Tab 3\",\n                icon=ft.icons.SETTINGS,\n                content=ft.Text(\"This is Tab 3\"),\n            ),\n        ],\n        expand=1,\n    )\n\n    page.add(t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def button_clicked(e):\n        t.value = f\"Textboxes values are:  '{tb1.value}', '{tb2.value}', '{tb3.value}', '{tb4.value}', '{tb5.value}'.\"\n        page.update()\n\n    t = ft.Text()\n    tb1 = ft.TextField(label=\"Standard\")\n    tb2 = ft.TextField(label=\"Disabled\", disabled=True, value=\"First name\")\n    tb3 = ft.TextField(label=\"Read-only\", read_only=True, value=\"Last name\")\n    tb4 = ft.TextField(label=\"With placeholder\", hint_text=\"Please enter text here\")\n    tb5 = ft.TextField(label=\"With an icon\", icon=ft.icons.EMOJI_EMOTIONS)\n    b = ft.ElevatedButton(text=\"Submit\", on_click=button_clicked)\n    page.add(tb1, tb2, tb3, tb4, tb5, b, t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page):\n\n    def slider_changed(e):\n        t.value = f\"Slider changed to {e.control.value}\"\n        page.update()\n\n    t = ft.Text()\n    page.add(\n        ft.Text(\"Slider with 'on_change' event:\"),\n        ft.Slider(min=0, max=100, divisions=10, label=\"{value}%\", on_change=slider_changed), t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page):\n    def button_clicked(e):\n        t.value = (\n            f\"Switch values are:  {c1.value}, {c2.value}, {c3.value}, {c4.value}.\"\n        )\n        page.update()\n\n    t = ft.Text()\n    c1 = ft.Switch(label=\"Unchecked switch\", value=False)\n    c2 = ft.Switch(label=\"Checked switch\", value=True)\n    c3 = ft.Switch(label=\"Disabled switch\", disabled=True)\n    c4 = ft.Switch(\n        label=\"Switch with rendered label_position='left'\", label_position=ft.LabelPosition.LEFT\n    )\n    b = ft.ElevatedButton(text=\"Submit\", on_click=button_clicked)\n    page.add(c1, c2, c3, c4, b, t)\n\nft.app(target=main)\n</code></pre> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def pick_files_result(e: ft.FilePickerResultEvent):\n        selected_files.value = (\n            \", \".join(map(lambda f: f.name, e.files)) if e.files else \"Cancelled!\"\n        )\n        selected_files.update()\n\n    pick_files_dialog = ft.FilePicker(on_result=pick_files_result)\n    selected_files = ft.Text()\n\n    page.overlay.append(pick_files_dialog)\n\n    page.add(\n        ft.Row(\n            [\n                ft.ElevatedButton(\n                    \"Pick files\",\n                    icon=ft.icons.UPLOAD_FILE,\n                    on_click=lambda _: pick_files_dialog.pick_files(\n                        allow_multiple=True\n                    ),\n                ),\n                selected_files,\n            ]\n        )\n    )\n\nft.app(target=main)\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#8-layouts","title":"8. Layouts","text":"<p>Els controls tipus layout s\u00f3n controls especials que servixen per a contindre i organitzar la resta de controls a la interf\u00edcie. Veurem els principals controls tipus layout a esta secci\u00f3.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#81-container","title":"8.1. Container","text":"<p>El contenidor permet decorar un control amb color de fons i vora i posicionar-lo amb farciment, marge i alineaci\u00f3. Tamb\u00e9 permet decorar-lo amb gradients radials o linials, animar-lo,...</p> <p>Exemple de Container</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Containers - clickable and not\"\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Row(\n            [\n                ft.Container(\n                    content=ft.Text(\"Non clickable\"),\n                    margin=10,\n                    padding=10,\n                    alignment=ft.alignment.center,\n                    bgcolor=ft.colors.AMBER,\n                    width=150,\n                    height=150,\n                    border_radius=10,\n                ),\n                ft.Container(\n                    content=ft.Text(\"Clickable without Ink\"),\n                    margin=10,\n                    padding=10,\n                    alignment=ft.alignment.center,\n                    bgcolor=ft.colors.GREEN_200,\n                    width=150,\n                    height=150,\n                    border_radius=10,\n                    on_click=lambda e: print(\"Clickable without Ink clicked!\"),\n                ),\n                ft.Container(\n                    content=ft.Text(\"Clickable with Ink\"),\n                    margin=10,\n                    padding=10,\n                    alignment=ft.alignment.center,\n                    bgcolor=ft.colors.CYAN_200,\n                    width=150,\n                    height=150,\n                    border_radius=10,\n                    ink=True,\n                    on_click=lambda e: print(\"Clickable with Ink clicked!\"),\n                ),\n                ft.Container(\n                    content=ft.Text(\"Clickable transparent with Ink\"),\n                    margin=10,\n                    padding=10,\n                    alignment=ft.alignment.center,\n                    width=150,\n                    height=150,\n                    border_radius=10,\n                    ink=True,\n                    on_click=lambda e: print(\"Clickable transparent with Ink clicked!\"),\n                ),\n            ],\n            alignment=ft.MainAxisAlignment.CENTER,\n        ),\n    )\n\nft.app(target=main)\n</code></pre> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#82-row","title":"8.2. Row","text":"<p>Un control que mostra els seus fills en una matriu horitzontal. </p> <p>Amb les seues propietats es poden modificar la forma en que es col\u00b7loquen, l'espai entre els components,...</p> <p>Espai entre controls</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.colors.AMBER,\n                    border_radius=ft.border_radius.all(5),\n                )\n            )\n        return items\n\n    def gap_slider_change(e):\n        row.spacing = int(e.control.value)\n        row.update()\n\n    gap_slider = ft.Slider(\n        min=0,\n        max=50,\n        divisions=50,\n        value=0,\n        label=\"{value}\",\n        on_change=gap_slider_change,\n    )\n\n    row = ft.Row(spacing=0, controls=items(10))\n\n    page.add(ft.Column([ ft.Text(\"Spacing between items\"), gap_slider]), row)\n\nft.app(target=main)\n</code></pre> <p></p> <p>Ampl\u00e0ria de la fila</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.colors.AMBER,\n                    border_radius=ft.border_radius.all(5),\n                )\n            )\n        return items\n\n    def slider_change(e):\n        row.width = float(e.control.value)\n        row.update()\n\n    width_slider = ft.Slider(\n        min=0,\n        max=page.window_width,\n        divisions=20,\n        value=page.window_width,\n        label=\"{value}\",\n        on_change=slider_change,\n    )\n\n    row = ft.Row(\n        wrap=True,\n        spacing=10,\n        run_spacing=10,\n        controls=items(30),\n        width=page.window_width,\n    )\n\n    page.add(\n        ft.Column(\n            [\n                ft.Text(\n                    \"Change the row width to see how child items wrap onto multiple rows:\"\n                ),\n                width_slider,\n            ]\n        ),\n        row,\n    )\n\nft.app(target=main)\n</code></pre> <p></p> <p>Aliniaci\u00f3 horitzontal</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.colors.AMBER_500,\n                )\n            )\n        return items\n\n    def row_with_alignment(align: ft.MainAxisAlignment):\n        return ft.Column(\n            [\n                ft.Text(str(align), size=16),\n                ft.Container(\n                    content=ft.Row(items(3), alignment=align),\n                    bgcolor=ft.colors.AMBER_100,\n                ),\n            ]\n        )\n\n    page.add(\n        row_with_alignment(ft.MainAxisAlignment.START),\n        row_with_alignment(ft.MainAxisAlignment.CENTER),\n        row_with_alignment(ft.MainAxisAlignment.END),\n        row_with_alignment(ft.MainAxisAlignment.SPACE_BETWEEN),\n        row_with_alignment(ft.MainAxisAlignment.SPACE_AROUND),\n        row_with_alignment(ft.MainAxisAlignment.SPACE_EVENLY),\n    )\n\n\nft.app(target=main)\n</code></pre> <p></p> <p><code>expand</code> igual a True</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    row = ft.Row([\n        ft.TextField(hint_text=\"Enter your name\", expand=True),\n        ft.ElevatedButton(text=\"Join chat\")\n        ])\n\n    page.add(\n        row\n    )\n\n\nft.app(target=main)\n</code></pre> <p></p> <p>Expanci\u00f3 proporcional</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    row = ft.Row([\n        ft.Container(bgcolor=ft.colors.YELLOW, expand=2, content=ft.Text(\n            \"expand = 2\", text_align=ft.TextAlign.CENTER)),\n        ft.Container(bgcolor=ft.colors.RED, expand=3, content=ft.Text(\n            \"expand = 3\", text_align=ft.TextAlign.CENTER)),\n        ft.Container(bgcolor=ft.colors.PURPLE, expand=1, content=ft.Text(\n            \"expand = 1\", text_align=ft.TextAlign.CENTER))\n    ])\n\n    page.add(\n        row\n    )\n\n\nft.app(target=main)\n</code></pre> <p></p> <p>M\u00e9s informaci\u00f3</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#83-column","title":"8.3. Column","text":"<p>Un control que mostra els seus fills en una matriu vertical. El funcionament \u00e9s molt similar a Row, on el width de Row ser\u00e0 el height de Column.</p> <p>Scroll infinit</p> <p>Python<pre><code>import threading\nimport flet as ft\n\nclass State:\n    i = 0\n\ns = State()\nsem = threading.Semaphore()\n\ndef main(page: ft.Page):\n    def on_scroll(e: ft.OnScrollEvent):\n        if e.pixels &gt;= e.max_scroll_extent - 100:\n            if sem.acquire(blocking=False):\n                try:\n                    for i in range(0, 10):\n                        cl.controls.append(ft.Text(f\"Text line {s.i}\", key=str(s.i)))\n                        s.i += 1\n                    cl.update()\n                finally:\n                    sem.release()\n\n    cl = ft.Column(\n        spacing=10,\n        height=200,\n        width=200,\n        scroll=ft.ScrollMode.ALWAYS,\n        on_scroll_interval=0,\n        on_scroll=on_scroll,\n    )\n    for i in range(0, 50):\n        cl.controls.append(ft.Text(f\"Text line {s.i}\", key=str(s.i)))\n        s.i += 1\n\n    page.add(ft.Container(cl, border=ft.border.all(1)))\n\nft.app(main)\n</code></pre> </p> <p>M\u00e9s informaci\u00f3</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#84-stack","title":"8.4. Stack","text":"<p>Un control que situa els seus fills uns sobre els altres, apilats.</p> <p>Aquest control \u00e9s \u00fatil si volem superposar diversos fills d'una manera senzilla, per exemple, tenint text i una imatge.</p> <p>Stack tamb\u00e9 \u00e9s \u00fatil si voleu implementar animacions impl\u00edcites que requereixen con\u00e8ixer la posici\u00f3 absoluta d'un valor objectiu.</p> <p>Layout apilat</p> <p>Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    st = ft.Stack(\n        [\n            ft.Image(\n                src=f\"https://picsum.photos/300/300\",\n                width=300,\n                height=300,\n                fit=ft.ImageFit.CONTAIN,\n            ),\n            ft.Row(\n                [\n                    ft.Text(\n                        \"Image title\",\n                        color=\"white\",\n                        size=40,\n                        weight=\"bold\",\n                        opacity=0.5,\n                    )\n                ],\n                alignment=ft.MainAxisAlignment.CENTER,\n            ),\n        ],\n        width=300,\n        height=300,\n    )\n\n    page.add(st)\n\nft.app(target=main)\n</code></pre> </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#85-listview","title":"8.5. ListView","text":"<p>ListView \u00e9s el control de despla\u00e7ament m\u00e9s utilitzat. Mostra els seus fills un darrere l'altre en la direcci\u00f3 de despla\u00e7ament.</p> <p>Exemple de ListView</p> <p>Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"ListView\"\n\n    listview = ft.ListView(expand=1, spacing=10, padding=20, auto_scroll=False)\n    page.add(listview)\n\n    for i in range(0, 60):\n        listview.controls.append(ft.Text(f\"Element {i}\"))\n\n    page.update()\n\nft.app(target=main)\n</code></pre> </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#86-listtile","title":"8.6. ListTile","text":"<p>Una \u00fanica fila d'alturaa fixa que normalment cont\u00e9 text, aix\u00ed com una icona inicial o final.</p> <p>ListTile</p> <p>Python<pre><code>import flet as ft\n\ndef main(page):\n    page.title = \"ListTile Examples\"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                width=500,\n                content=ft.Column(\n                    [\n                        ft.ListTile(\n                            title=ft.Text(\"One-line list tile\"),\n                        ),\n                        ft.ListTile(title=ft.Text(\"One-line dense list tile\"), dense=True),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.SETTINGS),\n                            title=ft.Text(\"One-line selected list tile\"),\n                            selected=True,\n                        ),\n                        ft.ListTile(\n                            leading=ft.Image(src=\"/icons/icon-192.png\", fit=\"contain\"),\n                            title=ft.Text(\"One-line with leading control\"),\n                        ),\n                        ft.ListTile(\n                            title=ft.Text(\"One-line with trailing control\"),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text=\"Item 1\"),\n                                    ft.PopupMenuItem(text=\"Item 2\"),\n                                ],\n                            ),\n                        ),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.ALBUM),\n                            title=ft.Text(\"One-line with leading and trailing controls\"),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text=\"Item 1\"),\n                                    ft.PopupMenuItem(text=\"Item 2\"),\n                                ],\n                            ),\n                        ),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.SNOOZE),\n                            title=ft.Text(\"Two-line with leading and trailing controls\"),\n                            subtitle=ft.Text(\"Here is a second title.\"),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text=\"Item 1\"),\n                                    ft.PopupMenuItem(text=\"Item 2\"),\n                                ],\n                            ),\n                        ),\n                    ],\n                    spacing=0,\n                ),\n                padding=ft.padding.symmetric(vertical=10),\n            )\n        )\n    )\n\nft.app(target=main)\n</code></pre> List Tile </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#87-gridview","title":"8.7. GridView","text":"<p>Es tracta d'un layout en forma de graella.</p> <p>Informaci\u00f3</p> <p>GridView \u00e9s molt eficient per a llistes grans (milers d'elements). Pot substituir el niuament de layouts tipus Row i Column.</p> <p>Exemple de GridView</p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"GridView Example\"\n    page.theme_mode = ft.ThemeMode.DARK\n    page.padding = 50\n    page.update()\n\n    images = ft.GridView(\n        expand=1,\n        runs_count=5,\n        max_extent=150,\n        child_aspect_ratio=1.0,\n        spacing=5,\n        run_spacing=5,\n    )\n\n    page.add(images)\n\n    for i in range(0, 60):\n        images.controls.append(\n            ft.Image(\n                src=f\"https://picsum.photos/150/150?{i}\",\n                fit=ft.ImageFit.NONE,\n                repeat=ft.ImageRepeat.NO_REPEAT,\n                border_radius=ft.border_radius.all(10),\n            )\n        )\n    page.update()\n\nft.app(target=main)\n</code></pre> <p> </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#88-responsive-row","title":"8.8. Responsive Row","text":"<p>ResponsiveRow pren la idea del disseny en quadr\u00edcula de Bootstrap. Permet alinear els controls en columnes virtuals. Per defecte, una quadr\u00edcula virtual t\u00e9 12 columnes, per\u00f2 que es poden personalitzar amb la propietat ResponsiveRow.columns.</p> <p>De manera similar a  la propietat <code>expand</code>, cada control ara t\u00e9 la propietat <code>col</code> que permet especificar quantes columnes ha d'abastar un control. Per exemple, per fer un disseny format per dues columnes que abasten 6 columnes virtuals cadascuna:</p> Python<pre><code>ft.ResponsiveRow([\n    ft.Column(col=6, controls=[ft.Text(\"Column 1\")]),\n    ft.Column(col=6, controls=[ft.Text(\"Column 2\")])\n])\n</code></pre> <p><code>ResponsiveRow</code> \u00e9s responsiu perqu\u00e8 pot adaptar la mida dels seus fills a una mida de pantalla (p\u00e0gina, finestra) din\u00e0mica o canviant. La propietat <code>col</code> de l'exemple anterior \u00e9s un nombre constant, la qual cosa significa que el control ocupar\u00e0 6 columnes per a qualsevol mida de pantalla.</p> <p>Si als descendents en l'arbre de controls no tenen especificada la propietat col, ocuparan el nombre m\u00e0xim de columnes.</p> <p>col es pot configurar per tenir un valor diferent per a \"punts d'interrupci\u00f3\" espec\u00edfics. Els punts d'interrupci\u00f3 s'anomenen intervals de dimensions:</p> <p> Punt d'interrupci\u00f3 Dimensi\u00f3 xs &lt;576 p\u00edxels sm \u2265576px md \u2265768px lg \u2265992px xl \u22651200px xxl \u22651400px <p></p> <p>Exemple amb <code>ResponsiveRow</code></p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    def page_resize(e):\n        if page.width &lt; 576:\n            size = \"XS\"\n        elif page.width &lt; 768:\n            size = \"SM\"\n        elif page.width &lt; 992:\n            size = \"MD\"\n        elif page.width &lt; 1200:\n            size = \"LG\"\n        elif page.width &lt; 1400:\n            size = \"XL\"\n        else:\n            size = \"XXL\"\n        pw.value = f\"Tamany de pantalla: {size} -&gt; {page.width} px\"\n        pw.update()\n\n    page.on_resize = page_resize\n\n    pw = ft.Text(bottom=50, right=50, style=\"displaySmall\")\n    page.overlay.append(pw)\n    page.add(\n        ft.ResponsiveRow(\n            [\n                ft.Container(\n                    ft.Text(\"Column 1\"),\n                    padding=5,\n                    bgcolor=ft.colors.YELLOW,\n                    col={\"sm\": 6, \"md\": 4, \"xl\": 2},\n                ),\n                ft.Container(\n                    ft.Text(\"Column 2\"),\n                    padding=5,\n                    bgcolor=ft.colors.GREEN,\n                    col={\"sm\": 6, \"md\": 4, \"xl\": 2},\n                ),\n                ft.Container(\n                    ft.Text(\"Column 3\"),\n                    padding=5,\n                    bgcolor=ft.colors.BLUE,\n                    col={\"sm\": 6, \"md\": 4, \"xl\": 2},\n                ),\n                ft.Container(\n                    ft.Text(\"Column 4\"),\n                    padding=5,\n                    bgcolor=ft.colors.PINK_300,\n                    col={\"sm\": 6, \"md\": 4, \"xl\": 2},\n                ),\n            ],\n        ),\n        ft.ResponsiveRow(\n            [\n                ft.TextField(label=\"TextField 1\", col={\"md\": 4}),\n                ft.TextField(label=\"TextField 2\", col={\"md\": 4}),\n                ft.TextField(label=\"TextField 3\", col={\"md\": 4}),\n            ],\n            run_spacing={\"xs\": 12},\n        ),\n    )\n    page_resize(None)\n\nft.app(target=main)\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#89-datatable","title":"8.9. DataTable","text":"<p>Una taula de dades, \u00e9s un control per a mostrar informaci\u00f3 de forma ordenada.</p> <p>Exemple de taula</p> <p>Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.DataTable(\n            columns=[\n                ft.DataColumn(ft.Text(\"First name\")),\n                ft.DataColumn(ft.Text(\"Last name\")),\n                ft.DataColumn(ft.Text(\"Age\"), numeric=True),\n            ],\n            rows=[\n                ft.DataRow(\n                    cells=[\n                        ft.DataCell(ft.Text(\"John\")),\n                        ft.DataCell(ft.Text(\"Smith\")),\n                        ft.DataCell(ft.Text(\"43\")),\n                    ],\n                ),\n                ft.DataRow(\n                    cells=[\n                        ft.DataCell(ft.Text(\"Jack\")),\n                        ft.DataCell(ft.Text(\"Brown\")),\n                        ft.DataCell(ft.Text(\"19\")),\n                    ],\n                ),\n                ft.DataRow(\n                    cells=[\n                        ft.DataCell(ft.Text(\"Alice\")),\n                        ft.DataCell(ft.Text(\"Wong\")),\n                        ft.DataCell(ft.Text(\"25\")),\n                    ],\n                ),\n            ],\n        ),\n    )\n\nft.app(target=main)\n</code></pre> <p></p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#810-tabs","title":"8.10. Tabs","text":"<p>El control <code>Tab</code> s'utilitza per navegar per categories de continguts diferents d'acc\u00e9s freq\u00fcent. Les pestanyes permeten la navegaci\u00f3 entre dues o m\u00e9s visualitzacions de contingut i es basen en les cap\u00e7aleres de text per articular les diferents seccions de contingut.</p> <p>Exemple amb Tabs</p> <p>Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n\n    t = ft.Tabs(\n        selected_index=1,\n        animation_duration=300,\n        tabs=[\n            ft.Tab(\n                text=\"Tab 1\",\n                content=ft.Container(\n                    content=ft.Text(\"This is Tab 1\"), alignment=ft.alignment.center\n                ),\n            ),\n            ft.Tab(\n                tab_content=ft.Icon(ft.icons.SEARCH),\n                content=ft.Text(\"This is Tab 2\"),\n            ),\n            ft.Tab(\n                text=\"Tab 3\",\n                icon=ft.icons.SETTINGS,\n                content=ft.Text(\"This is Tab 3\"),\n            ),\n        ],\n        expand=1,\n    )\n\n    page.add(t)\n\nft.app(target=main)\n</code></pre> <p></p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#811-card","title":"8.11. Card","text":"<p>El control de targeta \u00e9s un panell amb vore lleugerament arrodonides i una ombra d'elevaci\u00f3.</p> <p>Exemple de <code>card</code></p> Python<pre><code>import flet as ft\n\ndef main(page):\n    page.title = \"Card Example\"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                content=ft.Column(\n                    [\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.ALBUM),\n                            title=ft.Text(\"The Enchanted Nightingale\"),\n                            subtitle=ft.Text(\n                                \"Music by Julie Gable. Lyrics by Sidney Stein.\"\n                            ),\n                        ),\n                        ft.Row(\n                            [ft.TextButton(\"Buy tickets\"), ft.TextButton(\"Listen\")],\n                            alignment=ft.MainAxisAlignment.END,\n                        ),\n                    ]\n                ),\n                width=400,\n                padding=10,\n            )\n        )\n    )\n\nft.app(target=main)\n</code></pre> <p> <p></p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#812-divisor-horitzontal-o-vertical","title":"8.12. Divisor (horitzontal o vertical)","text":"<p>Una l\u00ednia horitzontal fina, amb encoixinat a banda i banda.</p> <p>Poden ser: - Horitzontals: <code>Divider</code> - Verticals: <code>VerticalDivider</code></p> <p>Exemple de <code>Divisor</code></p> Python<pre><code>import flet as ft\n\ndef main(page: ft.Page):\n\n    page.add(\n        ft.Column(\n            [\n                ft.Container(\n                    bgcolor=ft.colors.AMBER,\n                    alignment=ft.alignment.center,\n                    expand=True,\n                ),\n                ft.Divider(),\n                ft.Container(bgcolor=ft.colors.PINK, alignment=ft.alignment.center, expand=True),\n                ft.Divider(height=1, color=\"white\"),\n                ft.Container(\n                    bgcolor=ft.colors.BLUE_300,\n                    alignment=ft.alignment.center,\n                    expand=True,\n                ),\n                ft.Divider(height=9, thickness=3),\n                ft.Container(\n                    bgcolor=ft.colors.DEEP_PURPLE_200,\n                    alignment=ft.alignment.center,\n                    expand=True,\n                ),\n            ],\n            spacing=0,\n            expand=True,\n        ),\n    )\n\nft.app(target=main)\n</code></pre> <p> <p></p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#9-creacio-de-nous-controls-per-codi","title":"9. Creaci\u00f3 de nous controls per codi.","text":"<p>Els controls s\u00f3n utilitzats, entre altres coses, per amagar la complexitat del programari i transformar-la en parts m\u00e9s manejables. Cada control amaga la seva complexitat darrere d'una interf\u00edcie formada per les seves propietats i m\u00e8todes a qu\u00e8 es t\u00e9 acc\u00e9s. Poden introduir-se i eliminar-se, fins i tot ser intercanviats com a part dun tot. </p> <p>Aix\u00f2 redueix la complexitat del desenvolupament programari i millora el seu manteniment, permetent que el mateix codi puga ser reutilitzat a diferents llocs. El resultat \u00e9s un bloc de codi encapsulat en una classe independent que passa a formar part del banc de peces disponibles per formar part de desenvolupaments m\u00e9s complexos.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#10-controls-que-hereden-daltres-controls","title":"10. Controls que hereden d'altres controls","text":"<p>Per comen\u00e7ar a desenvolupar un control propi, el m\u00e9s f\u00e0cil \u00e9s buscar un control des del qual partir, de manera que se n'hereten les propietats i m\u00e8todes i aix\u00ed poder utilitzar-los en el control que volem crear. </p> <p>Per exemple, si voleu un <code>Container</code> amb un identificador centrat, podem heretar de <code>flet.Container</code> i afegir una propietat id:</p> <p>Exemple</p> Python<pre><code>import flet as ft\n\n\nclass ContainerID(ft.Container): # Heredem de Container\n    def __init__(self, id: str):\n        super().__init__()\n        self.id = id # Definim la propietat id\n\n        # Per defecte el creem amb l'identificador centrat, \n        # color de fons AMBER, tamany 150x150 i arredonit\n        self.content = ft.Text(id)\n        self.alignment=ft.alignment.center\n        self.width = 150\n        self.height = 150\n        self.border_radius = 5\n        self.bgcolor = ft.colors.AMBER\n\n\n\ndef main(page: ft.Page):\n    container_id = ContainerID(\"Identificador\")\n    container_id.on_click = container_clicked\n    page.add(container_id)\n    page.update()\n\n\ndef container_clicked(e):\n    print(e.control.id) # Accedim a la propietat que hem definit\n\n\nft.app(target=main)\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/1.%20Aplicacions%20clients%20amb%20Flet/#11-controls-que-hereden-dusercontrol","title":"11. Controls que hereden d'UserControl","text":"<p>En cas que el nostre control no guarde relaci\u00f3 estreta amb altres controls o siga una composici\u00f3 de diversos controls, el m\u00e9s adequat ser\u00e0 heretar de <code>ft.UserControl</code> directament, que \u00e9s la classe base des de la qual hereta la resta de Controls d'usuari. Aix\u00f2 ens permetr\u00e0 construir components reutilitzables combinant els controls Flet existents.</p> <p>Exemple m\u00ednim de control d'usuari</p> Python<pre><code>import flet as ft\n\nclass GreeterControl(ft.UserControl):\n    def build(self):\n        return ft.Text(\"Hello!\")\n\ndef main(page):\n    page.add(GreeterControl())\n\nft.app(target=main)\n</code></pre> <p>UserControl ha d'implementar el m\u00e8tode build() que es crida per crear la interf\u00edcie d'usuari del control i ha de retornar una \u00fanic objecte Control o una Llista de controls. UserControls hereda d'Stack, de manera que hi haur\u00e0 diversos fills els uns sobre els altres. Si necessiteu organitzar la interf\u00edcie d'usuari del control de manera diferent, podeu utilitzar Layouts  com Row o Column.</p> <p>Exemple</p> Python<pre><code>class GreeterControl(ft.UserControl):\n    def build(self):\n        return ft.Column([\n            ft.TextField(label=\"Your name\"),\n            ft.ElevatedButton(\"Login\")\n        ])\n</code></pre> <p>Actualitzaci\u00f3 d'UserControl a la interf\u00edcie</p> <p>Quan es crida al m\u00e8tode update() del control principal, els canvis dins del UserControl no s'apliquen, i per tant, la seua vista no es refresca. UserControl hauria de cridar self.update() per enviar els seus canvis a una p\u00e0gina de Flet.</p> Python<pre><code>import flet as ft\n\n\nclass Counter(ft.UserControl):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0\n        self.text = ft.Text(str(self.counter))\n\n    def add_click(self, e):\n        self.counter += 1\n        self.text.value = str(self.counter)\n        self.update() # Actualitzem la vista\n\n    def subtract_click(self, e):\n        self.counter -= 1\n        self.text.value = str(self.counter)\n        self.update() # Actualitzem la vista\n\n    def build(self):\n        return ft.Row([ft.IconButton(ft.icons.REMOVE, on_click=self.subtract_click), self.text, ft.IconButton(ft.icons.ADD, on_click=self.add_click)])\n\n\ndef main(page):\n    page.add(Counter())\n\n\nft.app(target=main)\n</code></pre> <p>Fixeu-se que a les l\u00ednies 13 i 18, el control s'actualitza a ell mateix. Proveu a canviar per e.page.update() i comproveu el funcionament.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/","title":"2. Contenidors. Bases de Dades","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#1-que-es-docker","title":"1. Qu\u00e8 \u00e9s <code>Docker</code>","text":"<p><code>Docker</code> (segons la wikip\u00e8dia) \u00e9s un projecte de codi obert que automatitza el desplegment d\u2019aplicacions dins de contenidors de programari, i proporciona una capa addicional d\u2019abstracci\u00f3 i automatitzaci\u00f3 de virtualitzaci\u00f3 d\u2019aplicacions en m\u00faltiples sistemes operatius. Docker fa \u00fas de les caracter\u00edstiques d\u2019a\u00efllament de recursos del nucli de Linux, tals com els cgroups i els namespaces que permeten que contenidors independents s\u2019executen dins una mateixa inst\u00e0ncia de Linux, evitant la sobrec\u00e0rrega d\u2019iniciar i mantenir m\u00e0quines virtuals.</p> <p>Els principals avantatges de l\u2019\u00fas de contenidors s\u00f3n:</p> <ul> <li>La flexibilitat, ja que fins i tot les aplicacions m\u00e9s complexes poden incloure\u2019s als contenidors.</li> <li>La poca c\u00e0rrega que suposen per al sistema,al compartir el mateix kernel que l\u2019amfitri\u00f3.</li> <li>La possibilitat de desplegar actualitzacions en calent.</li> <li>La portabilitat, ja que es poden desenvolupar localment, desplegar al n\u00favol i llan\u00e7ar-los en qualsevol lloc.</li> <li>L\u2019escalabilitat, ja que permet incrementar autom\u00e0ticament r\u00e8pliques dels contenidors,</li> <li>Els serveis en contenidors poden apilar-se <code>on the fly</code></li> </ul> <p>Al llarg del document parlarem sobre imatges i contenidors, pel que conv\u00e9 aclarir aquests conceptes.</p> <ul> <li>Una imatge \u00e9s un paquet executable que inclou tot all\u00f2 necessari per executar una aplicaci\u00f3: el codi, l\u2019entorn d\u2019execuci\u00f3, llibreries, variables d\u2019entorn i fitxers de configuraci\u00f3. Aquesta imatge sempre roman fixa i immutable, a menys que la creem de nou.</li> <li>Un contenidor, per la seua banda \u00e9s una inst\u00e0ncia d\u2019una imatge en execuci\u00f3: all\u00f2 que es crea quan posem en marxa una imatge. Podr\u00edem dir que un contenidor \u00e9s a una imatge el que un proc\u00e9s a un programa. El contenidor varia al llarg de la seua vida.</li> </ul> Recordatori <p>Si <code>proc\u00e9s==programa en execuci\u00f3</code> llavors <code>contenidor==imatge en execuci\u00f3</code></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#11-installacio","title":"1.1. Instal\u00b7laci\u00f3","text":"<p>No anem a entrar en detall per\u00f2 cal tenir instal\u00b7la el subsistema Docker a la nosta m\u00e0quina nativa (anomenat Docker engine) i podeu trobar tota la documentaci\u00f3 ac\u00ed https://docs.docker.com/engine/install/. Consideracions:</p> <ul> <li>Hem de configurar el sistema per a que el dimoni o servei de Docker arranque amb el sistema, o l'hem d'arrancar cada cop que ho necessitem.</li> <li>Podem afegir eines gr\u00e0fiques per a la gesti\u00f3 de contenidors ja creats.</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#12-contenidors-individuals","title":"1.2. Contenidors Individuals","text":"<p>Les imatges precreades de Docker estan emmagatzemades al que es coneix com el <code>Docker-hub</code> accessible desde https://hub.docker.com. Les imatges estan alli emmagatzemades, i per a fer-les servir, \u00f2bviament hem de descarregar-les.</p> <p>Un cop descarregades (el que es coneix com fer un <code>pull</code>) les imatges es guardaran a la cache del nostre equip, per si es necessiten m\u00e9s endavant per a fer nous contenidors.</p> Quan i com baixar les imatges <p>Realment no cal baixar les imatges per a despr\u00e8s fer un contenidor, ja que <code>docker</code>, si no troba la imatge en local, autom\u00e0ticament far\u00e0 el pull i la descarregar\u00e0.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#13-creant-contenidors","title":"1.3. Creant contenidors","text":"<p>Per a crear i arrancar un contenidor a partir d'una imatge el comandament \u00e9s <code>docker run nom_imatge</code>.</p> <p></p> <p>Pot observar-se que primer es descarrega i despr\u00e8s l'executa. Si ho executem varies vegades, podem observar que est\u00e0 creant-se cada cop un contenidor distint.</p> <p></p> <p>Aix\u00f2 si \u00e9s per a algo solt no \u00e9s problema, per\u00f2 pensem en un contenidor que el posem en marxa, guardem certa informaci\u00f3 (com un SGBD) i l'aturem. Si el tornem a arrancar (amb <code>docker run</code>) es perdr\u00e0 tot el que teniem, ja que es crea de nou.</p> <p>La millor soluci\u00f3 \u00e9s assignar-li un nom:</p> Bash<pre><code>docker run --name nom_contenidor [opcions] -d nom_imatge\n</code></pre> <p>i per a seg\u00fcents vegades que l'executem, simplement arrancar-lo, amb start:</p> Bash<pre><code>docker start nom_contenidor\n</code></pre> <p>Podem veure els contenidors que tenim en marxa amb <code>docker ps</code>. Quan vullguem aturar-lo podem fer-ho amb.</p> Bash<pre><code>docker stop nom_contenidor\n</code></pre> <p>Podeu trobar m\u00e9s informaci\u00f3 a la documentaci\u00f3 oficial, aix\u00ed com a la documentaci\u00f3 adjunta que us facilitem.</p> <p>Per acabar amb aquest apartat, podem veure una crida m\u00e9s complexa:</p> Bash<pre><code>docker run --name mysql-srv\n  -p 3308:3306\n  -v /srv/mysql:/var/lib/mysql\n  -e MYSQL_ROOT_PASSWORD=\"root\"\n  -d mysql\n</code></pre> <p>Que realitza: - un servei en segon pla (<code>-d</code>) de la imatge de <code>mysql</code>. Si no es diu res, agafar\u00e0 la \u00faltima versi\u00f3 (<code>mysql:lately</code>) - Un contenidor de nom  <code>mysql-srv</code> - Amb una redirecci\u00f3 de ports  (<code>-p</code>) del port 3308 de la m\u00e0quina amfitriona al port 3306 del contenidor, on escoltar\u00e0 mysql. - Munta un volum (<code>-v</code>) on la ruta <code>/srv/mysql</code> es muntar\u00e0 en <code>/var/lib/mysql</code>. - S'assigna una variable d'entorn (<code>-e</code>), amb el password del administrador de mysql.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#14-crear-els-nostres-contenidors-dockerfile-i-docker-compose","title":"1.4. Crear els nostres contenidors <code>Dockerfile</code> i <code>docker-compose</code>","text":"<p>Per a crear un contenidor personalitzat, hi han diverses maneres de fer-ho. La complicada \u00e9s: creem un contenidor amb la imatge buida, l'arranquem, transferim dins d'ell els arxius que necessitem, actualitzem els paquets que calguen, ja el tenim a punt. Com podeu intuir, podem fer-ho millor i m\u00e9s f\u00e0cil.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#15-dockerfile","title":"1.5. <code>Dockerfile</code>","text":"<p>L'opci\u00f3 \u00e9s automatitzar tota aquesta tasca en el que es coneix com un <code>Dockerfile</code>. Un <code>Dockerfile</code> \u00e9s un fitxer de text que cont\u00e9 un script amb una sintaxi concreta per a indicar totes les seq\u00fcencies per a muntar un contenidor. Ah\u00ed per exemple \u00e9s on podrem muntar un contenidor \"net\" i afegir-li tot el contingut que necessitem per a desplegar-lo on calga.</p> <p>Anem a estudiar-ho amb un exemple b\u00e0sic. Suposem que volem crear un contenidor amb una distribuci\u00f3 d'Ubuntu, a la qual li instal\u00b7larem l'editor <code>nano</code> (que no ve per defecte)</p> Docker<pre><code>FROM ubuntu:latest          # base\nRUN apt update              # RUN s'executa en la m\u00e0quina\nRUN apt install -y nano     # RUN s'executa en la m\u00e0quina\nWORKDIR /usr/src/app        # Carpeta de treball al contenidor\nCMD /bin/bash               # Programa que s'executa a l'arrancar\n</code></pre> <p>Aquest fitxer el guardarem amb el nom <code>Dockerfile</code>. Llavors per crear la imatge i llan\u00e7ar el contenidor amb el nom que vullguem (<code>ubuntunano</code> en aquest cas) podem fer:</p> Bash<pre><code># crear la imatge\ndocker build -f nom_arxiu -t nom_container .\n\n# llan\u00e7a el contenidor interactivament\ndocker run -it nom_container\n</code></pre> <p>Aix\u00f2 crea una imatge i llan\u00e7a el contenidor.</p> <p>Ara et toca a tu</p> <p>Implementa el contenidor anterior amb el nano fent-ho amb els seg\u00fcents passos:</p> <ol> <li>Crea el contenidor sense el nano </li> <li>Llan\u00e7'l i entra a la seua consola. Comprova que no te l'editor nano</li> <li>Crea'l de nou amb el nano</li> <li>Llan\u00e7a'l, entra i comprova que ara si tenim el nano.</li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#16-docker-compose","title":"1.6. <code>docker-compose</code>","text":"<p>Cas de necessitar llan\u00e7ar diversos contenidor per a treballar junts, com per exemple un per a una aplicaci\u00f3 i altre per a la BBDD, donat que s'han de comunicar, podem rec\u00f2rrer a docker-compose, que ens permet, junt a els Dockerfile, crear i orquestrar contenidors.</p> <p>Aquesta orquestraci\u00f3 s'indicar\u00e0 en un fitxer anomenat <code>docker-compose.yml</code>. </p> Note <p>El format aquest, anomenat <code>YAML</code> \u00e9s un nou estandar o variant de formats del tipus atribut-valor com poden ser els fitxers de properties o formats json</p> <p>La manera habitual de treball \u00e9s crear aquest fitxer a l'arrel de la carpeta de treball. En ell a banda de informaci\u00f3 de versi\u00f3 i dem\u00e9s, s'especificaran els serveis que anem a muntar, deixant i/o creant una subcarpeta per cada servei que anem a fer. En l'arrel de cada carpeta dels serveis, crearem un <code>Dockerfile</code> amb la configuraci\u00f3 personalitzada i pr\u00f2pia de cada servei. Al <code>docker-compose.yml</code> indicarem els mecanismes de comunicaci\u00f3 entre contenidors.</p> <p></p> Dockerfile per a la BBDD Text Only<pre><code>FROM mysql_latest\nENV MYSQL_ROOT_PASSWORD toor\n</code></pre> <p>Carrega la \u00faltima versi\u00f3 de mysql i li assigna el password a l'administrador</p> Dockerfile per aplicaci\u00f3 web Python Text Only<pre><code>FROM python:3\nWORKDIR /usr/src/app\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nCMD [ \"python\", \"app.py\" ]\n</code></pre> <p>On l'anterior:</p> <ul> <li>Carrega la versi\u00f3 3 de python</li> <li>Establix la carpeta de treball dins del contenidor</li> <li>Copia el fitxer de text <code>requirements.txt</code>. Aquest fitxer cont\u00e9 les depend\u00e8ncies de l'aplicaci\u00f3 python.</li> <li>Instal\u00b7la dits requeriments</li> <li>Aquest copy copia TOT el de l'arrel de la carpeta de treball (el projecte) a la carpeta de treball dins del contenidor (<code>/usr/src/app</code>)</li> <li>Per \u00faltim, arranca l'aplicaci\u00f3</li> </ul> docker-compose.yml que munta els dos anteriors Text Only<pre><code>version: '3'\nservices:\n  web:\n    build: ./web\n    ports:\n      - \"5000:5000\"\n    links:\n      - db\n  db:\n    build: ./db\n</code></pre> <p>Respecte a l'anterior:</p> <ul> <li>La versi\u00f3 \u00e9s opcional</li> <li>Es defineixen dos serveis:</li> <li><code>web</code>:<ul> <li>S'indica que dins de la subcarpeta <code>/web</code> estar\u00e0 el dockerfile</li> <li>Aquest contenidor deixar\u00e0 exposat el port 5000</li> <li>Aquest contenidor tindr\u00e0 un enlla\u00e7 per a comunicar-se directament amb el contenidor <code>db</code>. Aix\u00f2 vol dir que, dins del contenidor <code>web</code>, on posem <code>db</code> est\u00e0 referint-se a l'adre\u00e7a interna del contenidor de la base de dades. Aix\u00f2 tamb\u00e9 passar\u00e0 dins del programa</li> </ul> </li> <li><code>db</code><ul> <li>S'indica que dins de la subcarpeta <code>/web</code> estar\u00e0 el dockerfile</li> </ul> </li> </ul> <p>I un cop fet?</p> <p>Un cop creada la estructura de carpetes, i dem\u00e9s:</p> <ul> <li>Per a crear el pack de contenidors, farem un <code>docker-compose build</code></li> <li>Per a llan\u00e7ar el pack de contenidors, farem un <code>docker-compose up</code></li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#17-contenidors-de-bbdd-amb-mongodb","title":"1.7. Contenidors de BBDD amb <code>mongoDB</code>","text":"<p>Per a treballar amb la base de dades, ens la instal\u00b7larem dins d'un contenidor, deixant exposat el seu port per defecte 27017. De mongo podriem estar treballant molt de temps, per\u00f2 estudiarem el m\u00e9s b\u00e0sic per treballar, com \u00e9s connectar-se, importar/exportar col\u00b7leccions de documents i les operacions CRUD (Create, Read, Update i Delete).</p> <p>Per crear el nostre servidor de BBDD mongo ho farem amb el comandament:</p> Bash<pre><code>docker run --name mongodb-srv \n    -e MONGO_INITDB_ROOT_USERNAME=\"root\" \n    -e MONGO_INITDB_ROOT_PASSWORD=\"toor\" \n    -p 27017:27017 \n    -d mongo\n</code></pre> Atenci\u00f3 <ul> <li>Les dades de connexi\u00f3 son <code>root</code> amb password <code>toor</code></li> <li>El port 27017 de la m\u00e0quina amfitriona es redirigeix al port per defecte dins del contenidor</li> <li>Per a aturar i arrancar de nou el mateix contenidor ho farem amb <code>docker start|stop mongodb-srv</code></li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#2-mongodb","title":"2. mongoDB","text":"<p>MongoDB \u00e9s una base de dades orientada a documents, basada en l'emmagatzemament de les seues estructures de dades en documents de tipus <code>JSON</code> amb un esquema din\u00e0mic. Tot i que comen\u00e7\u00e0 el desenvolupament per l'empresa 10gen, avui en dia \u00e9s un projecte de codi obert, amb una gran comunitat d'usuaris.</p> <p>Un servidor MongoDB pot tindre diverses bases de dades, i cadascuna d'elles t\u00e9 un conjunt de col\u00b7lecions, que podr\u00edem equiparar a les taules d'una BD relacional. Cada col\u00b7lecci\u00f3 emmagatzema un conjunt de documents JSON, format per atributs clau-valor, que vindr\u00eden a ser els registres d'una base de dades relacional.</p> <p>A grans trets, podr\u00edem establir les seg\u00fcents relacions:</p> Model relacional MongoDB BD Relacional BD Orientada a documents Taula Col\u00b7lecci\u00f3 Registre/Fila Document JSON Atributs/Columnes Claus del document JSON <p>Veiem un xicotet exemple de la col\u00b7leci\u00f3 Pelis amb dos documents:</p> JSON<pre><code>[\n{\n    _id: 1,\n    episodi: \"IV\",\n    titol: \"A new Hope\",\n    year: 1977,\n    director: {\n        nom: \"George\",\n        cognoms:  \"Lucas\",\n        any_naixement: 1944\n    }\n},\n{\n     _id: 5,\n    titol: \"Rogue One. A Star Wars Story.\",\n    year: 2016,\n    director: {\n        nom: \"Gareth\",\n        cognoms:  \"Edwards\",\n        any_naixement: 1975,\n        nacionalitat: \"brit\u00e0nica\"\n    }\n}]\n</code></pre> <p>Com veiem, cada document, de tipus pel\u00b7l\u00edcula t\u00e9 els seus propis atributs, els quals no tenen per qu\u00e8 coincidir entre ells. Una altra caracter\u00edstica, es que, com podem vore, tenim la informaci\u00f3 sobre el director dins el propi document, i no en un altre document i relacionada amb aquest, com ser\u00eda el cas de les taules.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#21-json-i-bson","title":"2.1. JSON i BSON","text":"<p>Com ja sabem, la unitat b\u00e0sica d'informaci\u00f3 amb qu\u00e8 treballa MongoDB \u00e9s el document, que seria l'equivalent a un registre en un model relacional. Es tracta de documents JSON, formats per parells clau-valor i que representen la informaci\u00f3 d'una manera for\u00e7a intu\u00eftiva. Els servidors MongoDB, per la seva banda, emmagatzemaran aquestes dades en format BSON (JSON binari), un format de serialitzaci\u00f3 binari.</p> <p>Pel que fa als documents JSON per a MongoDB, cal tenir en compte alguns aspectes:</p> <ul> <li>Pel que fa a les claus:</li> <li>No poden ser nules.</li> <li>Poden contenir en qualsevol car\u00e0cter UTF-8, excepte els car\u00e0cters <code>.</code> o <code>$</code>.</li> <li>Distingeixen entre maj\u00fascules i min\u00fascules.</li> <li>Han de ser \u00fanics dins del mateix document.</li> <li>Pel que fa als teus valors:</li> <li>Poden ser de qualsevol tipus permesos: enter, real, text, boole\u00e0, NULL, Objecte o Array</li> <li>Pel que fa al document:</li> <li>Ha de tenir un camp <code>_id</code>, amb un valor \u00fanic, que actuar\u00e0 com a identificador del document.</li> <li>Si no especifiquem aquesta clau, MongoDB la generar\u00e0 autom\u00e0ticament, amb un objecte de tipus <code>ObjectId</code>.</li> </ul> <p></p> <p>i respecte als identificadors que insereix mongo autom\u00e0ticament:</p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#22-importar-i-exportar-colleccions","title":"2.2. Importar i exportar col\u00b7leccions","text":"<p>Un cop tenim instal\u00b7lat el servidor, necessitem accedir a ell per a crear, manipular i consultar informaci\u00f3. Per poder fer-ho necessite un client per a la base de dades. Mongo ens ofereix ferramentes per a connectar-se per consola, que les <code>database-tools</code> i podeu trobar documentaci\u00f3 ac\u00ed https://www.mongodb.com/docs/database-tools/ de com fer-les servir. B\u00e0sicament aquestes eines ens permeten el importar col\u00b7leccions a la BBDD (mongoimport), extreure les cole\u00b7leccions (mongoexport) i connectar-se al servidor amb un shell interactio (mongo).</p> <p>Per a importar una col\u00b7lecci\u00f3 de documents, farem servir el comandament <code>mongoimport</code>, amb la sintaxis Text Only<pre><code>mongoimport &lt;options&gt; &lt;connection-string&gt; &lt;file&gt;\n\n#     m\u00e9s detallat\n\nmongoimport --uri 'mongodb://servidor:port' \\\n  --username='XXX' --password='YYY' --authenticationDatabase=admin \\\n  --db nom_db --collection nom_col --file restaurants.json [--drop]\n</code></pre></p> <p>Tenir en compte:</p> <ul> <li>Si la BBDD no existeix, es crear\u00e0.</li> <li>Si la col\u00b7lecci\u00f3 no existeix la crear\u00e0</li> <li>Si la col\u00b7lexi\u00f3 existeix, afegira els elements del fitxer, a menys que posem l'opci\u00f3  <code>--drop</code>, que elimina la col\u00b7lecci\u00f3 abans de refer-la</li> </ul> <p>Si volem exportar una col\u00b7lecci\u00f3, l'equivalen seria: Bash<pre><code>mongoexport --uri 'mongodb://servidor:port' \\\n  --username='XXX' --password='YYY' --authenticationDatabase=admin \\\n  --db nom_db --collection nom_col --out nou_arxiu.json \n</code></pre></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#23-inserir-documents","title":"2.3. Inserir documents","text":"<p>El comandament per a inserir un document pot ser:</p> JavaScript<pre><code>db.collection.insertOne({document})\ndb.collection.insertMany([{doc1},{doc2}])\n</code></pre> <p>Es retornen els ObjectID dels elements inserits. Espai que com mongo no te estructura es permet qualssevol inserci\u00f3 com a v\u00e0lida.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#24-consultes-de-documents","title":"2.4. Consultes de documents","text":"<p>Per a fer consultes farem servir la sintaxi: JavaScript<pre><code>db.colleccio.find({criteri_en_format_JSON}[{camps_a_mostrar}]);\n</code></pre></p> <p>on:</p> <ul> <li>El criteri \u00e9s un json on especifiquem els valors de la b\u00fasqueda, com un json</li> <li>Els camps a mostrar indiquem tots aquells camps que volem mostrar com <code>camp:1</code> o <code>camp:0</code>. Aquest camp \u00e9s opcional, i es mostren tots cas de no posar-ho</li> </ul> Exemples autoexplicats de consultes <p>Imaginem que tenim una col\u00b7lecci\u00f3 de pel\u00b7l\u00edcules amb l'estructura vista anteriorment JavaScript<pre><code>// Ho mostra tot de totes les pelis\ndb.pelis.find()   \n\n// pelis de l'any 1977\ndb.pelis.find({year:1977})\n\n// pelis de l'any 1977, sols el nom de la peli\ndb.pelis.find({year:1977},{name:1})\n\n// pelis de l'any 1977, sols el nom de la peli (sense el _id)\ndb.pelis.find({year:1977},{name:1,_id:0})\n\n// pelis de l'any 1977, dirigides per directors de nom \"George\"\n// atributs dins d'objectes entre cometes\ndb.pelis.find({year:1977,\"director.nom\":\"George\"}})\n</code></pre></p> <p>Per a fer consultes m\u00e9s complexes podem fer servir els operadors de comparaci\u00f3:</p> Operador Descripci\u00f3 <code>$eq</code> Igual <code>$neq</code> Distint <code>$lt</code> Menor que <code>$lte</code> Menor o igual que <code>$gt</code> Major que <code>$gte</code> Major o igual que <p>i llavors</p> JavaScript<pre><code>// per a fer clar operador valor s'escriur\u00e0\ndb.colleccio.find({clau: {$operador:valor} });\n\n// pelis anterios al  1980, sols el nom de la peli\ndb.pelis.find({year:{$leq:1980}},{name:1})\n\n// pelis que no son de \"George\"\ndb.pelis.find({\"director.nom\":{$neq:\"George\"}})\n</code></pre> <p>No entrarem en m\u00e9s detall en consultes m\u00e9s complexes, ja que no correspon al curs.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#241-ordenacio","title":"2.4.1. Ordenaci\u00f3","text":"<p>El resultat d'una consulta sempre ser\u00e0 un array de documents, o un sol en cas de que sol se'n retorne un. Moltes vegades voldrem ordenar-ho per veure els resultat d'alguna manera. Per a fer-ho, no existeixen ferramentes dins de la consulta, per\u00f2 podem rec\u00f2rrer al llenguatge <code>javascript</code>, que \u00e9s el que enten mongoDB, i invocar al m\u00e8tode <code>sort()</code> que tenen les col\u00b7leccions. </p> <p>La funci\u00f3 <code>llista.sort({criteri_ordenaci\u00f3})</code> aplica el criteri d'ordenaci\u00f3 a la llista. Aquest criteri \u00e9s un objecte amb la estructura <code>{clau_ord:[1|-1]}</code>. El que fa es ordenar la llista per l'atribut <code>clau_ord</code>, sent ascendent si posem un 1 o descendent si posem un -1. Si posem m\u00e9s d'un atribut, s'ordenar\u00e0 pel primer, i en cas d'empat pel segon, i aix\u00ed.</p> Examples d'ordenaci\u00f3 JavaScript<pre><code>// totes les pel\u00edcules, primer la m\u00e9s recent\ndb.pelis.find().sort({year:-1})\n\n// les pel\u00edcules ordenades per director. Per al mateix director les mostra\n// en ordre ascendent\ndb.pelis.find().sort({director:1,year:1})\n\n// comandes ordenades de menys a m\u00e9s preu\ndb.comandes.find().sort({preu:1})\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#25-actualitzacions","title":"2.5. Actualitzaci\u00f3ns","text":"<p>Per a modificar algun registre que existeix pr\u00e8viament en la BBDD, es far\u00e0 amb el <code>update</code>:</p> JavaScript<pre><code>db.colection.update({criteri_busqueda},{operaci\u00f3 actualitzaci\u00f3})\n</code></pre> <p>Cosideracions:</p> <ul> <li>Si no posem el criteri de b\u00fasqueda, deixant-lo en blanc (<code>{}</code>) s'actualitzar\u00e0n tots els documents.</li> <li> <p>La operaci\u00f3 d'actualitzaci\u00f3 pot ser de varios tipus: </p> </li> <li> <p><code>$set</code> estableix un valor a un atribut. Si existeix el modifica, i si no existeix l'afig</p> </li> <li><code>$unset</code> slimina un atribut del document</li> <li><code>$inc</code> incrementa l'atribut tant com indiquem. Sols per a n\u00fameros</li> <li><code>$push</code> afig un element a l'atribut, cas de ser un vector</li> <li><code>$pull</code> elimina un element(s) de l'atribut, cas de ser un vector</li> </ul> Exemple de modificacions JavaScript<pre><code>// incrementa en 1 la edat d'una persona\ndb.persona.update({\"name\":\"Pepe\"},{$inc:{edad:1}})\n\n// Modifica el sou\ndb.empleat.update({\"name\":\"Pepe\"},{$set:{salari:1500}})\n\n// El puja un 10% (a tots els Pepe)\ndb.empleat.update({\"name\":\"Pepe\"},{$set:{salari:salari+salari*0.1}})\n\n// afig un actor a una peli\ndb.peli.update({\"title\":\"Rogue one\"},{$push:{actors:\"Diego Luna\"}})\n</code></pre> <p>Com hem comentat, podriem aporfondir molt m\u00e9s, per\u00f2 per al curs \u00e9s suficient. En els m\u00f2dus de dades (BD i BDA) segur que aprofundiu molt m\u00e9s</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#26-eliminar-bases-de-dades","title":"2.6. Eliminar bases de dades","text":"<p>Si volem eliminar elements d'una col\u00b7lecci\u00f3, disposem del comandament <code>deleteXXX</code>:</p> Exemples d'esborrats <p>```js // esborra el primer usuari de 39 anys db.usuaris.deleteOne({edat:39})</p> <p>// esborra tots els usuaris de 39 anys db.usuaris.deleteMany({edat:39})</p> <p>// esborra tots els usuaris db.usuaris.deleteMany({})</p> <p>// elimina tota la col\u00b7lecci\u00f3 (documents i estructura) db.usuaris.drop()</p> <p>Si per a lgun motiu volem eliminar una BBDD sencera amb totes les col\u00b7leccions que cont\u00e9, podem fer-ho amb el comandament:</p> JavaScript<pre><code>db.dropDatabase()\n</code></pre> <p>Recordar que si no has seleccionat cap base de dades, eliminar\u00e0 la base de dades de test (la que est\u00e0 seleccionada per defecte).</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#27-pymongo-treball-amb-mongodb-des-de-python","title":"2.7. <code>pymongo</code>: treball amb <code>mongoDB</code> des de <code>Python</code>","text":"<p>Per a accedir a mongoDB desde programes es fa servir la estructura <code>mongoclient</code>, i \u00e9s <code>pymongo</code> la llibreria encarregada de proporcionar-nos dita funcionalitat. Sempre que ens connectem a una BBDD, independentment del llenguatge de programaci\u00f3, el fluxe de treball ser\u00e0:</p> <ol> <li>Carregar el driver (mongoclient)</li> <li>Crear la cadena de connexi\u00f3, on indicarem on est\u00e0 el servidor, usuari i contrassenya, i si escau la BBDD</li> <li>Seleccionar la BBDD per defecte</li> <li>Crear la consulta|modificaci\u00f3 que volem llan\u00e7ar</li> <li>Executar-la</li> <li>Recuperar i processar els resultats, si \u00e9s que hi han</li> <li>Tancar la connexi\u00f3 abans d'eixir del programa.</li> </ol> <p>La documentaci\u00f3 completa la podeu trobar a la p\u00e0gina oficial https://pymongo.readthedocs.io/en/stable/</p> <p>Anem a veure ara pas a pas com es faria: Python<pre><code># 1. Carregar el driver\nfrom pymongo import MongoClient\n\n# 2. Crear la cadena de connexi\u00f3, on indicarem on est\u00e0 el servidor, usuari i contrassenya,\n# i si escau la BBDD\n\n## Per defecte sense credencials\nclient = MongoClient()\n\n## Per defecte sense credencials\nclient = MongoClient(\"localhost\", 27017)\n\n## Amb cadena, sense credencials\nuri=\"mongodb://localhost:27017/\"\nclient = MongoClient(uri)\n\n## Amb cadena, amb credencials\nuri = \"mongodb://user:password@localhost:27017/default_db?authSource=admin\"\nclient = MongoClient(uri)\n\n## Amb cadena i variables\nuser=\"root\"\npasswd=\"toor\"\nddbb=\"pelis\"\nserver=\"localhost\"\nport=\"27017\"\nuri = 'mongodb://%s:%s@%s:%s/%s?authSource=admin'%(user,passwd,server,port,ddbb)\nclient = MongoClient(uri)\n\n# 2.1 Seleccionar o canviar la BBDD per defecte.\n# En aquestes ordres seleccionem la BBDD\ndb=client[\"pelis\"]\n\ndb=client[\"restaurants\"]\n\n# 3. Operem sobre la BBDD\n\n# Seleccionem amb quina colecci\u00f3 dins de la BBDD anem a treballar\ncollection=db.nom_coleccio\n\n# 4. i 5. Fem la consulta i/o operaci\u00f3 i la executem\n# tota la col\u00b7lecci\u00f3\ncursor=collection.find()\nfor doc in cursor:\n  print(doc)\n\n#\u00a0o be el primer document que te 24 anys\nfiltre={\"edat\":24}\ndoc=collection.find_one(filtre)\nprint(doc)\n\n# o be aplicar un descompte\nfiltre={\"edat\":24}\nmodifica={$set:{\"descompte\":0.1}}\ncollection.update(filtre,modifica)\n</code></pre></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#3-mongoengine","title":"3. <code>mongoengine</code>","text":"<p>MongoEngine \u00e9s un ODM (Object-Document Mapper)  per a Python per a treballar amb MongoDB. Pots trobar tots els detalls en https://mongoengine-odm.readthedocs.io</p> <p>Un ODM (Object-Document Mapper) \u00e9s un concepte similar al ORM (Object-Relational Mapper), per\u00f2 aplicat a bases de dades de documents en lloc de bases de dades relacionals. \u00c9s una biblioteca o eina que mapeja documents emmagatzemats en bases de dades no relacionals (com MongoDB) a objectes de programaci\u00f3 dins d'una aplicaci\u00f3. Aix\u00f2 facilita la interacci\u00f3 amb la base de dades, proporcionant un mecanisme per treballar amb els documents com si fossin objectes natius del llenguatge de programaci\u00f3.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#31-caracteristiques-principals","title":"3.1. Caracter\u00edstiques principals","text":"<ol> <li> <p>Mapeig de documents a objectes:    Els documents emmagatzemats en format JSON, BSON o altres formats es converteixen en objectes del llenguatge de programaci\u00f3.</p> </li> <li> <p>Simplificaci\u00f3 de la interacci\u00f3 amb la base de dades:    L'ODM permet executar operacions com crear, llegir, actualitzar i eliminar (CRUD) sense necessitat d'escriure consultes directes en el llenguatge de la base de dades.</p> </li> <li> <p>Validaci\u00f3 i esquemes:    Molts ODMs ofereixen eines per definir esquemes que validen els documents abans de guardar-los a la base de dades.</p> </li> <li> <p>Gesti\u00f3 de relacions (si s'escau):    Tot i que les bases de dades de documents no s\u00f3n relacionals, molts ODMs permeten definir relacions entre col\u00b7leccions de documents.</p> </li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#32-connectant-en-la-bbdd","title":"3.2. Connectant en la BBDD","text":"<p>Per connectar-se a una inst\u00e0ncia en execuci\u00f3 de mongod, utilitzeu la funci\u00f3 <code>connect()</code>:</p> Python<pre><code>connect(\n    db=db_name,\n    username=db_user,\n    password=db_pass,\n    host=db_host\n)\n</code></pre> <p>Les connexions en MongoEngine es registren globalment i s'identifiquen amb \u00e0lies. Si no es proporciona cap \u00e0lies durant la connexi\u00f3, s'utilitzar\u00e0 \"default\" com a \u00e0lies. Si volem connexions a diverses BBDD hauriem de fer:</p> Python<pre><code>connect(db=\"base1\", alias=\"bd1\")\nconnect(db=\"base2\", alias=\"bd2\")\n</code></pre> <p>posteriorment quan definim els elements a guardar haurem d'indicar l'\u00e0lies de la BBDD on el volem guardar.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#33-definint-les-nostres-classesdocumnets","title":"3.3. Definint les nostres classes/Documnets","text":"<p>La idea \u00e9s crear unes classes en Python que farem servir per a guardar-les directament en els documents de la BBDD mongo. Per a fer-ho definirem els atributs de les classes com a elements <code>Fields</code> de <code>mongoengine</code> especialitzant-los a alguns dels concrets  <code>IntField</code>,<code>FloatField</code>,<code>URLField</code>, <code>StringField</code>. Tens el llistat complet ac\u00ed</p> <p>Aquestes classes:</p> <ul> <li>han d'heretar de la classe de mongoengine <code>Document</code> per fer servir els m\u00e8todes de guardar i dem\u00e9s.</li> <li>Deuen de definir-se els m\u00e8todes a partir de constructors dels tipus comentats anteriorment.</li> </ul> <p>Vegem un primer exemple:</p> Python<pre><code>from mongoengine import Document, StringField, IntField\n\nclass Usuari(Document):\n    nom = StringField(required=True, max_length=50)\n    email = StringField(required=True, unique=True)\n</code></pre> <p>i el seg\u00fcent usuari ser\u00e0 emmagatzemant en la base dades referenciada en la segona manera:</p> Python<pre><code>class UsuariBase2(Document):\n    nom = StringField(required=True)\n    edat = IntField(required=True,min_value=16)\n    meta = {'db_alias': 'bd1'}\n</code></pre> <p>Ara ja podem operar amb la base de dades, per\u00f2 directament amb els objectes creats. Mirem el seg\u00fcent codi comentat:</p> Python<pre><code># Crear un nou usuari\nnou_usuari = Usuari(nom=\"Anna\", edat=25, email=\"anna@example.com\")\n\n#\u00a0guardem l'usuari\nnou_usuari.save()\n\n# Consultar TOTS els usuaris\nusuaris = Usuari.objects()\nfor usuari in usuaris:\n    print(f\"Nom: {usuari.nom}, Edat: {usuari.edat}, Email: {usuari.email}\")\n\n\n# Consultar TOTS els usuaris que tenen 30 anys\nusuaris_30 = Usuari.objects(edat=30)\nprint(\"Usuaris de 30 anys\")\nfor usuari in usuaris_30:\n    print(f\"Nom: {usuari.nom}, Email: {usuari.email}\")\n\n\n# Modificar un document existent\nusuari_modificat = Usuari.objects(nom=\"Joan\").first()\nif usuari_modificat:\n    usuari_modificat.edat = 31\n    usuari_modificat.save()\n    print(\"Document modificat amb \u00e8xit!\")\n\n\n# Eliminar un document\nusuari_a_eliminar = Usuari.objects(nom=\"Joan\").first()\nif usuari_a_eliminar:\n    usuari_a_eliminar.delete()\n    print(\"Document eliminat amb \u00e8xit!\")\n</code></pre> <p>Atenci\u00f3</p> <ol> <li>Quan ens connectem, s'indica el nom de la BBDD. Si no existeix es crea la BBDD.</li> <li>El mateix passa en la col\u00b7lecci\u00f3, si no existeix, la primera vegada que s'insereix es crear\u00e0.</li> <li>Tots els objectes (documents) creats tenen un camp <code>id</code> que cont\u00e9 el objectID assignat per mongo. </li> </ol> <p>Per a b\u00fasquedes i filtrat de documents podem fer servir, afegint al nom dels atributs el seguients operadors</p> <ul> <li><code>__lt</code>: Menor que (less than).</li> <li><code>__gte</code>: Major o igual que (greater than or equal to).</li> <li><code>__lte</code>: Menor o igual que (less than or equal to).</li> <li><code>__ne</code>: Distint de (not equal).</li> <li><code>__in</code>: Contingut en una lista de valores.</li> <li><code>__nin</code>: No contingut en una lista de valores.</li> <li><code>__contains</code>: un text cont\u00e9 a altre. <code>__icontains</code> per a fer-ho case insensitive.</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#4-annex-protegint-dades-sensibles-els-arxius-env","title":"4. Annex. Protegint dades sensibles. Els arxius <code>.env</code>","text":"<p>Un arxiu <code>.env</code> \u00e9s un fitxer de text pla que cont\u00e9 variables d'entorn (environment variables) que es poden utilitzar en una aplicaci\u00f3. Es fa servir principalment per emmagatzemar informaci\u00f3 sensible o configuracions que no volem incloure directament en el codi font, com per exemple:</p> <ul> <li>Claus API</li> <li>Credencials de bases de dades</li> <li>Configuracions d'entorn (producci\u00f3, desenvolupament, etc.)</li> </ul> <p>Els arxius <code>.env</code> solen tenir el seg\u00fcent format:</p> Text Only<pre><code>VARIABLE_1=valor1\nVARIABLE_2=valor2\n</code></pre> <p>Aquest format \u00e9s senzill, i cada l\u00ednia defineix una variable d'entorn amb un nom i un valor separats per <code>=</code>. Els comentaris es poden afegir amb <code>#</code> al principi de la l\u00ednia.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#41-per-que-utilitzar-arxius-env","title":"4.1. Per qu\u00e8 utilitzar arxius <code>.env</code>?","text":"<ol> <li>Seguretat: Permeten evitar exposar informaci\u00f3 sensible al repositori de codi.</li> <li>Flexibilitat: Permeten canviar configuracions sense modificar el codi.</li> <li>Portabilitat: Faciliten la configuraci\u00f3 del projecte en diferents entorns.</li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/2.%20Contenidors%20de%20BBDD%20amb%20Docker/#42-com-utilitzar-arxius-env-amb-python","title":"4.2. Com utilitzar arxius <code>.env</code> amb Python","text":"<p>El que necessitarem \u00e9s carregar aquesta informaci\u00f3 des dels nostres programes. Vejam com</p> <p>Instal\u00b7lar la biblioteca <code>python-dotenv</code></p> <p>La forma m\u00e9s f\u00e0cil de treballar amb arxius <code>.env</code> a Python \u00e9s utilitzant la biblioteca <code>python-dotenv</code>. Per instal\u00b7lar-la:</p> Text Only<pre><code>pip install python-dotenv\n</code></pre> <p>Crear un arxiu <code>.env</code></p> <p>Crea un fitxer <code>.env</code> al directori arrel del projecte amb el seg\u00fcent contingut d'exemple:</p> Text Only<pre><code>API_KEY=12345abcde\nDB_HOST=localhost\nDB_USER=admin\nDB_PASS=817267354\n</code></pre> <p>Carregar les variables d'entorn en el codi Python</p> <p>Fes servir la biblioteca <code>python-dotenv</code> per carregar les variables d'entorn al teu programa Python. Aquestes variables estaran disponibles mitjan\u00e7ant <code>os.environ</code>.</p> Python<pre><code>from dotenv import load_dotenv\nimport os\n\n# Carregar les variables de l'arxiu .env en l'entorn del SO actual\nload_dotenv()\n\n# Accedir a les variables d'entorn\napi_key = os.getenv(\"API_KEY\")\ndb_host = os.getenv(\"DB_HOST\")\ndb_user = os.getenv(\"DB_USER\")\ndb_pass = os.getenv(\"DB_PASS\")\n\nprint(f\"API Key: {api_key}\")\nprint(f\"Database Host: {db_host}\")\n</code></pre> <p>Gestionar valors predeterminats</p> <p>Si una variable no es troba definida al fitxer <code>.env</code>, pots especificar un valor predeterminat:</p> Python<pre><code>api_key = os.getenv(\"API_KEY\", \"default_key\")\n</code></pre> <p>Evitar que l'arxiu <code>.env</code> es publiqui a github</p> <p>Afegeix el fitxer <code>.env</code> al <code>.gitignore</code> per evitar que sigui incl\u00f2s en el control de versions:</p> Text Only<pre><code># Arxiu .gitignore\n.env\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/","title":"3. Peticions HTTP. API REST","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#el-protocol-htpp","title":"El protocol HTPP","text":"<p>Hui en dia tot el n\u00favol d'aplicacions i la web est\u00e0 gestionat, entre altres pel protocol HTTP i altres serveis que permeten estar interconnectats.</p> <p>HTTP (Hiper Text Transfer Protocol) es basa en senzilles operacions de sol\u00b7licitud/resposta:</p> <ol> <li>Un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud. Aquesta petici\u00f3 s'anomena <code>request</code> i destaquen 4 tipus de peticions:</li> <li>GET, per a demanar algun recurs al servidor</li> <li>POST, per a desar algun recurs al servidor</li> <li>PUT, per a modificar algun recurs ja existent al resvidor</li> <li>DELETE, per a esborrar algun recurs</li> <li>El servidor respon amb un missatge similar, que cont\u00e9 l'estat de l'operaci\u00f3 i el seu possible resultat. Aquesta resposta s'anomena <code>response</code>, formada, com hem dit per:</li> <li>Els possibles estat son un codi que indica el resultat de la petici\u00f3. Infomraci\u00f3 m\u00e9s detallada a la wikipedia<ol> <li>1XX Respostes informatives</li> <li>2XX Peticions correctes</li> <li>3XX Redireccions</li> <li>4XX Errors provocats pel client</li> <li>5XX Errors provocats dins del servidor</li> </ol> </li> <li>El recurs sol\u00b7licitad. Habitualmente ser\u00e0 una p\u00e0gina web (HTML m\u00e9s la hiperm\u00e8dia), un arxiu JSON amb dades, un arxiu PDF, etc.</li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#serveis-api-rest","title":"Serveis API REST","text":"<p>Anem a definir una API REST de manera molt b\u00e0sica per a poder-ho entendre r\u00e0pidament:</p> <ul> <li>S'anomena un servei tot all\u00f2 que ens pot donar un servidor. Dades, p\u00e0gines, arxius, l'hora, etc.</li> <li> <p>API \u00e9s l'acr\u00f2nim de Application Programming Interfaces i indica tot all\u00f2 que ens pot oferir un servidor, aix\u00ed com la sintaxi que hem de fer sevir per a demana-li les coses</p> <p>Dins del llenguatges de programaci\u00f3, la API son les llibreries que disposa i com hem de invocar a les funcions de dites llibreries. </p> </li> <li> <p>Una API REST (Representational State Transfer) \u00e9s un conjunt de regles i convencions arquitect\u00f2niques per dissenyar serveis web basats en el protocol HTTP. Cap destacar que REST implica:</p> </li> <li>Fer servir HTTP, i per tant identificar la seua API mitjan\u00e7ant:<ul> <li>Les URL on es demana la petici\u00f3 (ruta al servidor)</li> <li>El tipus o m\u00e8tode de la petici\u00f3 (GET, POST, etc.)</li> </ul> </li> <li>Que siga Stateless o sense mem\u00f2ria. Una petici\u00f3 ser\u00e0 atesa per ella mateixa, sense recordar res de les anteriors peticions.</li> <li>Estat Representacional: es refereix a l'estat del recurs demanat en el moment de la petici\u00f3, i ve expresat en XML o actualment en JSON</li> <li>Seguretat (amb JWT) i hiperm\u00e8dia (HAETOAS, amb enlla\u00e7os als recursos relacionats)</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#consumint-recursos-de-internet-la-llibreria-request","title":"Consumint recursos de internet. La llibreria <code>request</code>","text":"<p>\u00c9s en aquest apartat on anem a estudiar com fer peticions a recursos de internet, mitjan\u00e7ant les peticions vistes anteriorment amb http. Aquestes peticinos s'engloben dins de la llibreria <code>request</code>. Els recursos poden ser be:</p> <ul> <li>Una p\u00e0gina web</li> <li>Una imatge o arxiu ubicat en algun lloc</li> <li>Una API rest a la que demanarem/enviarem algun recurs</li> </ul> <p>El fluxe de treball ser\u00e0:</p> <ol> <li>Composar la URL de dest\u00ed </li> <li>Afegir a la petici\u00f3 arguments o par\u00e0metres</li> <li>Llan\u00e7ar la petici\u00f3</li> <li>Arreplegar la resposta (response)</li> <li>Avaluar el codi d'estat per saber com ha anat</li> <li>Recuperar el cos de la resposta (JSON, Arxius, HTML, etc..)</li> </ol> Petici\u00f3 b\u00e0sica amb request Python<pre><code>import requests\n\nresposta=requests.get('https://swapi.dev/api/films/1/')\n\nprint(type(resposta))\nprint(resposta.status_code)\nprint(resposta.headers)\nprint(resposta.json())\n</code></pre> <p>Com pot observar-se:</p> <ul> <li>Es crea tot a partir del objecte <code>requests</code>. Aquest m\u00e8tode te tants m\u00e8todes com tipus de peticions http, encara que sols veurem les 4 b\u00e0siques. Rep com a par\u00e0metre la url que volem fer la petici\u00f3.</li> <li>Ens retorna un objecte de tipus <code>Response</code>, el qual encapsula la resposta del servidor:</li> <li><code>Response.status_code</code> amb el codi html de com ha anat la petici\u00f3</li> <li><code>Response.headers</code> la cap\u00e7alera en la metainformaci\u00f3 de la resposta. Per exemple:   JSON<pre><code>{\n    'Server': 'nginx/1.16.1', \n    'Date': 'Mon, 18 Sep 2023 08:11:28 GMT', \n    'Content-Type': 'application/json', \n    'Transfer-Encoding': 'chunked', '\n    Connection': 'keep-alive', \n    'Vary': 'Accept, Cookie', \n    'X-Frame-Options': 'SAMEORIGIN', \n    'ETag': '\"5af12d8e740a258e0c502b480ae78f2f\"', \n    'Allow': 'GET, HEAD, OPTIONS', 'Strict-Transport-Security': \n    'max-age=15768000'\n }\n</code></pre></li> <li><code>Response.content</code> el contingut de la resposta, directament en bytes. Si la resposta es text, s'interpreta directament.</li> <li><code>Response.text</code> la resposta en format text.</li> <li><code>Response.json()</code>, quan la resposta cont\u00e9 un json, ens permet parsejar-la directament i guarda-la dins d'un objecte:    JSON<pre><code>{\n   'title': 'A New Hope', \n   'episode_id': 4, \n   'opening_crawl': \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\", \n   'director': 'George Lucas', \n   ...\n   }\n</code></pre></li> </ul> Descarregant una imatge de la web Python<pre><code>from PIL import Image\nfrom io import BytesIO\nimport requests\n\nr=requests.get('https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/701px-Python-logo-notext.svg.png')\n\n# print(r.json()) Donaria error\nimatge = Image.open(BytesIO(r.content))\nimatge.show()\nimatge.save(\"Python.png\")\n</code></pre> <p>A l'anterior exemple:</p> <ul> <li>La petici\u00f3 <code>get()</code> \u00e9s a un recurs gr\u00e0fic.</li> <li>El content es passem per la classe <code>BytesIO</code> que ens permet tractar-lo com un stream de bytes, el que ens permet passar-ho a:</li> <li>el m\u00e8tode <code>open()</code> de la classe <code>Image</code> de la llibreria <code>PIL</code> (Python Image Library), dedicada a la manipulaci\u00f3 d'imatges.</li> <li>La imatge la podem obrir e incl\u00f2s guardar-la a un fitxer al nostre sistema. </li> </ul> Repte <p>Busca a la documentaci\u00f3 com implementaries la descarrega d'un fitxer de qualssevol tipus, un pdf o un zip, i implementa-ho</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#afegint-parametres-i-recursos","title":"Afegint par\u00e0metres i recursos","text":"<p>De vegades (i molt sovint) voldrem enviar dades  al servidor que ens aten la petici\u00f3, per exemple identificar-nos, penjar un arxiu, marcar una compra a la cistella, etc. Existeixen dos maneres b\u00e0siques de enviar eixa informaci\u00f3, per par\u00e0metres o amb el cos de la petici\u00f3</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#enviar-parametres","title":"Enviar par\u00e0metres","text":"<p>Les dades dins dels par\u00e0metres s'envien afegint al recurs que volem les dades a enviar de la forma <code>parametre=valor</code> darrere d'un s\u00edmbol d'interrogaci\u00f3 (<code>?</code>). Cas d'haver m\u00e9s par\u00e0metres, es concatenen amb l'ampersand (<code>&amp;</code>). Per exemple si volem fer un login, la petici\u00f3 seria algo com <code>http://www.elmeuservidor.com/login?user=pepito&amp;password=123456</code>.</p> <p>La primera soluci\u00f3 per a fer-ho aix\u00ed seria composar la url de manera artesanal:</p> Python<pre><code>user=\"Pepito\"\npassword=\"123456\"\nurl=\"http://www.elmeuservidor.com/login?user=\"+user+\"&amp;password=\"+password\n\nresposta=request.get(url)\n</code></pre> <p>La segona soluci\u00f3, recomanable. \u00e9s fer servir eines pr\u00f2pies de la llibreria per a elaborar-ho m\u00e9s f\u00e0cil:</p> Python<pre><code>dades={\n   \"user\":\"Pepito\"\n   \"password\":\"123456\"\n}\nurl=\"http://www.elmeuservidor.com/login\"\n\nresponse = requests.get(url, params=dades)\n</code></pre> <p>Si volem afegir dades, al cos de la petici\u00f3, de la mateixa manera que es fa amb postman o similar, s'ha de fer canviant la crida:</p> Python<pre><code>dades={\n   \"user\":\"Pepito\"\n   \"password\":\"123456\"\n}\nurl=\"http://www.elmeuservidor.com/login\"\n\nresponse = requests.get(url, json=dades)\n</code></pre> <p>Teniu m\u00e9s informaci\u00f3 disponible a la p\u00e0gina ofical https://requests.readthedocs.io/en/latest/.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#web-scraping","title":"Web Scraping","text":"<p>El web scraping, o rascat web en catal\u00e0, \u00e9s una t\u00e8cnica utilitzada per extreure informaci\u00f3 de llocs web de manera automatitzada. En altres paraules, es tracta de processos automatitzats que naveguen per p\u00e0gines web, descarreguen el seu contingut i extreuen dades espec\u00edfiques d'inter\u00e8s. Aquestes dades poden incloure text, imatges, enlla\u00e7os, preus, puntuacions i molt m\u00e9s, depenent de la naturalesa del lloc web i de la informaci\u00f3 que es vulgui obtenir.</p> <p>El web scraping \u00e9s una eina valuosa per recopilar dades de la web quan no es disposa d'un acc\u00e9s directe a una API (Interf\u00edcie de Programaci\u00f3 d'Aplicacions) o quan es necessita automatitzar la recopilaci\u00f3 d'informaci\u00f3. Tot i aix\u00f2, \u00e9s important fer servir aquesta t\u00e8cnica amb responsabilitat i respectar els termes d'\u00fas dels llocs web, ja que alguns llocs poden prohibir o limitar l'\u00fas del web scraping per tal de protegir les seves dades i continguts.</p> <p>Com que necessitem descarregar contingut web, la llibreria request estudiat anteriorment casa perfectament per a descarregar els arxius HTML.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#beautifulsoup","title":"BeautifulSoup","text":"<p>Beautiful Soup \u00e9s una biblioteca de Python que facilita l'extracci\u00f3 de dades de documents HTML i XML. Aquesta biblioteca proporciona eines per analitzar i \"navegar\" pels elements d'un document web, facilitant la tasca d'extreure informaci\u00f3 espec\u00edfica. \u00c9s especialment \u00fatil en conjunci\u00f3 amb t\u00e8cniques de web scraping, ja que permet accedir als diferents components d'una p\u00e0gina web i extraure el contingut desitjat de manera m\u00e9s eficient.</p> <p>Per a fer servir aquiesta llibreria, hem de instal\u00b7lar-la amb <code>pip install beautifulsoup4</code> o mitjan\u00e7ant <code>conda</code>. L'estrctura b\u00e0sica d'un programa de scrapping \u00e9s la seg\u00fcent:</p> Obtenir la sopa Python<pre><code>    import requests\n    from bs4 import BeautifulSoup\n\n    # URL de la p\u00e0gina a estudiar\n    url = 'https://www.la_meua_web.es'\n\n    # Fer la sol\u00b7licitud HTTP i obtenir el contingut de la p\u00e0gina\n    response = requests.get(url)\n    content = response.content\n\n    # Crear un objecte BeautifulSoup per analitzar el contingut HTML\n    soup = BeautifulSoup(content, 'html.parser')\n</code></pre> <p>Consideracions:</p> <ul> <li>La dificultat del Scraping \u00e9s el veure en quina part de la p\u00e0gina est\u00e0 el contingut a extreure</li> <li>Moltes p\u00e0gines tenen mecanismes d'intentar detectar bots o programes de scraping, per aix\u00f2 \u00e9s bona idea el aplicar un user agent (navegador) distint.</li> </ul> Canviar navegador d'orige Python<pre><code>import requests\nfrom fake_useragent import UserAgent\n\n# Instanciar un objeto UserAgent\nua = UserAgent()\n\n# Realizar varias solicitudes con User-Agents aleatorios\nfor _ in range(5):\n      headers = {'User-Agent': ua.random}\n      print(f\"User-Agent: {headers['User-Agent']}\")\n\n      # Petici\u00f3 des d'aquest user-agent\n      response = requests.get(url, headers=headers)\n</code></pre> <p>Aix\u00f2 generar\u00e0 alguna cosa com:</p> Bash<pre><code>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.0 Safari/605.1.15\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36\n</code></pre> <p>Tot i que podem trobar tota la documentaci\u00f3 a https://www.crummy.com/software/BeautifulSoup/bs4/doc/, anem a veure els principals elements que podem trobar per a accedir a les etiquetes d'una p\u00e0gina.</p> <p>Atenci\u00f3</p> <p>El m\u00e9s important \u00e9s recordar:</p> Text Only<pre><code>- La estructura del DOM (**Documento Object Model**), fortament jerarquitzada (elements que contenen elements, amb estructura de pares-fills i germans)\n- Cada element \u00e9s d'un tipus, definit per la etiqueta del mateix. A banda de la etiqueta, podem veure de quina classe \u00e9s (atribut `class=xxx`)\n- Pot identificar-se elements accedint amb l'identificador del mateix, que si es compleix la especificaic\u00f3 del HTML, deu ser \u00fanic (`id=yyy`).\n</code></pre> <p>Atenci\u00f3</p> <p>Hem partit d'un exemple al qual ens baixem l'HTML de la p\u00e0gina web a fer scrapping, per\u00f2 ara tenim que tindre en consideraci\u00f3 el seg\u00fcent. El que mostra el navegador no sempre \u00e9s el HTML, sin\u00f2 que moltes vegades aquest HTML font s'amplia amb l'execuci\u00f3 de JAvascript</p> <p>Si descarreguem amb <code>request</code> la p\u00e0gina web tindrem el HTML pre-javascript. i a nosaltres ens interessa el HTML post-javascript, ja que molta informaci\u00f3 pot ser el resultat de l'execuci\u00f3 de javascript, amb consultes a BBDD o similar</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#selenuim","title":"Selenuim","text":"<p>Sel\u00e8nium https://www.selenium.dev \u00e9s una potent suite d'eines per a la automatitzaci\u00f3 de navegadors web. Dissenyat inicialment per a testing automatitzat de p\u00e0gines web, Selenium s'ha convertit en una eina essencial per als desenvolupadors i testers que necessiten interactuar amb navegadors web mitjan\u00e7ant codi.</p> <p>Amb Selenium, els usuaris poden escriure scripts en diversos llenguatges de programaci\u00f3 com Python, Java, C#, entre d'altres, per a realitzar tasques automatitzades a trav\u00e9s de l'interf\u00edcie gr\u00e0fica d'un navegador web. Aix\u00f2 inclou clicar en enlla\u00e7os, emplenar formularis, navegar entre p\u00e0gines i molt m\u00e9s.</p> <p>Selenium suporta diversos navegadors com Chrome, Firefox, Safari i Edge, el que fa que sigui una eina vers\u00e0til per a la creaci\u00f3 de proves automatitzades o per a la realitzaci\u00f3 de tasques repetitives en l'entorn web.</p> <p>A m\u00e9s de la seva utilitzaci\u00f3 en testing, Selenium tamb\u00e9 \u00e9s \u00e0mpliament utilitzat en web scraping, monitoratge de p\u00e0gines web, i altres tasques d'automatitzaci\u00f3 relacionades amb la interacci\u00f3 amb navegadors. La seva naturalesa flexible i la capacitat de controlar navegadors en temps real fan de Selenium una eina imprescindible per als desenvolupadors i professionals del control de qualitat que treballen amb aplicacions web.</p> <p>Per fer la instal\u00b7laci\u00f3 de selenium <code>conda install -c conda-forge selenium</code>.</p> <p>Si recordes hem arribat ac\u00ed perqu\u00e8 volem la versi\u00f3 definitiva del HTML (post javascript). Llavors no ens queda altra que navegar per aquella p\u00e0gina que volem scrapejar, i Selenium ens permet emular dita navegaci\u00f3. </p> <p>Selecci\u00f3 del navegador</p> Python<pre><code>from selenium import webdriver\n\n\ndef getBrowser():\n   browser=random.randint(1,3)\n   if browser==1:\n      driver = webdriver.Edge()\n   elif browser==2:\n      driver=webdriver.Chrome()\n   elif browser==3:\n      driver = webdriver.Safari()\n\n   return driver\n</code></pre> <p>Aquest codi ens permet seleccionar un navegador distint (o no) cada cop que el demanem. Aix\u00f2 \u00e9s adequat per a evitar mecanismes anti-scrapping. Tamb\u00e9 podrien ser canviar les IP d'orige, per a semblar consexions de llocs distints.</p> <p>Un cop sel\u00b7leccionat el navegador, simplement deurem d'al\u00e7ar la inst\u00e0ncia del mateix, dir-li la p\u00e0gina on volem a nar i revisar-la tota (anant de dalt a baix...)</p> <p>Navegaci\u00f3 per la p\u00e0gina www.marca.com</p> Python<pre><code>driver = getBrowser()         # seleccionem un navegador\ndriver.get(\"www.marca.com\")   # indiquem la web a visitar\ndriver.maximize_window()      # (opcional) maximitzem\ntime.sleep(0.5)               # esperem mig segon\n\n# anem fent scroll fins al final de la web\niter=1\nwhile True:\n   # Qu\u00e8 ens queda fins arribar baix de tot?\n   scrollHeight = driver.execute_script(\"return document.documentElement.scrollHeight\")\n   # aleatori el bot cap avall, multiplicat per la iteraci\u00f3 actual\n   height=random.randint(300,400)*iter\n   # Ens situem en dita posici\u00f3\n   driver.execute_script(\"window.scrollTo(0, \" + str(Height) + \");\")\n\n   # Si ja hem arribat al final trenquem el bucle i eixim\n   if height &gt; scrollHeight:\n      print('End of page')\n      break\n   time.sleep(0.5)\n   iter+=1\n\n\n# recuperem el interior del cos, quedant-nos amb el HTML\nbody = driver.execute_script(\"return document.body\")\nsource = body.get_attribute('innerHTML')\n\n# creem el DOM per a processar-lo amb BeautifulSoup\nsoup = BeautifulSoup(source, \"html.parser\")\n\n# Fer scraping amb la \"sopa\"\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#beautifulsoup_1","title":"BeautifulSoup","text":"<p>Anem a veure els m\u00e8todes m\u00e9s important que farem servir de la llibreria BeautifulSoup un cop recuperat l'HTML i parsejat. Partim una mica del seg\u00fcent DOM per a l'explicaci\u00f3</p> HTML<pre><code>&lt;body&gt;\n    &lt;h1&gt;Just testing&lt;/h1&gt;\n    &lt;div class=\"block\"&gt;\n      &lt;h2&gt;Some links&lt;/h2&gt;\n      &lt;p&gt;Hi there!&lt;/p&gt;\n      &lt;ul id=\"data\"&gt;\n        &lt;li class=\"blue\"&gt;&lt;a href=\"https://example1.com\"&gt;Example 1&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=\"red\"&gt;&lt;a href=\"https://example2.com\"&gt;Example 2&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=\"gold\"&gt;&lt;a href=\"https://example3.com\"&gt;Example 3&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n    &lt;div class=\"block\"&gt;\n      &lt;h2&gt;Formulario&lt;/h2&gt;\n      &lt;form action=\"\" method=\"post\"&gt;\n        &lt;label for=\"POST-name\"&gt;Nombre:&lt;/label&gt;\n        &lt;input id=\"POST-name\" type=\"text\" name=\"name\"&gt;\n        &lt;input type=\"submit\" value=\"Save\"&gt;\n      &lt;/form&gt;\n    &lt;/div&gt;\n    &lt;div class=\"footer\"&gt;\n      This is the footer\n      &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 1&lt;/p&gt;&lt;/span&gt;\n      &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 2&lt;/p&gt;&lt;/span&gt;\n      &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 2&lt;/p&gt;&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre> <p>Observem que cada element cont\u00e9: HTML<pre><code>&lt;etiqueta class=\"classe\" id=\"idETQ\" atr1=valor1 atr2=valor2 &gt; text &lt;/etiqueta&gt;\n</code></pre></p> <p>i podem buscar-los com segueix:</p> <ul> <li>Localitazar elements <code>soup.find_all('etiqueta')</code>. Retorna tots els elements del tipus d'etiqueta indicat. Per exemple <code>soup.find_all('li')</code> tornar\u00e0 tots els elements de la llista.</li> <li> <p>Localitazar elements d'una classe:</p> </li> <li> <p><code>soup.find_all('etiqueta',class_='classe')</code>. Torna els elements de les etiquetes indicades d'una certa classe</p> </li> <li><code>soup.find_all(class_='classe')</code>. Torna els elements indicades d'una certa classe, podent ser de distint tipus d'etiqueta</li> <li>Localitzar un element identificat <code>soup.find_all('etiqueta',id='identificacor')</code></li> </ul> <p>Atenci\u00f3</p> <p>Tenir en compte:</p> <ul> <li>Els m\u00e8todes <code>find_all()</code> retornent un conjunt d'elements (buit o no) </li> <li>Els m\u00e8tode <code>find</code> retorna:<ul> <li>None si no troba res (no existeix)</li> <li>Un element, quan per exemple busquem per identificador, i el troba</li> <li>El primer element en cas de trobar-ne diversos.</li> </ul> </li> </ul> <p>Espai a les b\u00fasquede</p> <p>Tenir en compte que els m\u00e8todes <code>find</code> i <code>find_all()</code> efectuen la b\u00fasqueda a l'interior del element des del qual busquem:</p> <ul> <li><code>soup.find_all('li')</code> retornar\u00e0 tots els elements que hi han al document, ja que busquem desde l'inici del DOM</li> <li><code>element.find_all('div')</code> buscar\u00e0 sols dins de cada element.</li> </ul> <p>Un cop ja tenim localitzat un element podem accedir, des d'ell a tot el seg\u00fcent. Suposem que el tenim referenciat amb la variable <code>elem</code>:</p> <ul> <li>Tipus d'element o tag \u2192 <code>elem.name</code> Python<pre><code>elem = soup.find('ul', id='data')\nelem.name\n'ul'\n</code></pre></li> <li>Accedir a caracter\u00edstiques o atributs d'ell \u2192 Una etiqueta pot tenir un llistat d'atributs o caracter\u00edstiques. Podem accedir a ells com si d'un diccionari es tratara <code>elem[atribut]</code>:</li> </ul> Python<pre><code>elem = soup.find('input', id='POST-name')\n\n# elem \u00e9s &lt;input id=\"POST-name\" name=\"melibea\" type=\"json\"/&gt;\n\nelem['id']     # retorna 'POST-name'\n\nelem['name']   # retorna 'melibea'\n\nelem['type']   # retorn 'json'\n</code></pre> <p>Tamb\u00e9 podem recuperar-los tots amb <code>elem.attrs</code>:</p> Python<pre><code>elem.attrs\n{'id': 'POST-name', 'type': 'json', 'name': 'melibea'}\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#accedir-al-contingut-com-a-text","title":"Accedir al contingut com a text","text":"<p>El contingut textual, per entendre-ho, ha de diferenciar-se que podem diferenciar entre els seg\u00fcents tipus d'elements:</p> <ul> <li>Elements que contenen sols una l\u00ednea de text  XML<pre><code>&lt;elem&gt;Contingut textual&lt;/eleme&gt;\n</code></pre></li> <li> <p>Elements que contenen altres elements:  XML<pre><code>&lt;div class=\"footer\"&gt;\nPeu de la p\u00e0gina\n   &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 1&lt;/p&gt;&lt;/span&gt;\n   &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 2&lt;/p&gt;&lt;/span&gt;\n   &lt;span class=\"inline\"&gt;&lt;p&gt;This is span 2&lt;/p&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre> Tenim diverses opcions per a recuperar contingut:</p> </li> <li> <p><code>elem.text</code> \u2192 retorna un string amb tot el contingut textual. Apareixeran els bots de linia si els elements d'on extraguem el text estan en linies diferents, incl\u00f2s sagnats. Segons els tipus anteriors tindriem:</p> <p><code>Contingut textual</code></p> <p>o be </p> <p><code>'\\n      Peu de la p\u00e0gina\\n      This is span 1\\nThis is span 2\\nThis is span 2\\n'</code></p> </li> <li> <p><code>elem.strings</code> \u2192 Retorna un llistat (array) amb els elements textuals, incloses bots de linia i blancs. Segons els tipus anteriors tindriem:</p> <p><code>['Contingut textual']</code></p> <p>o be</p> <p><code>['\\n      This is the footer\\n      ',    'This is span 1',    '\\n',    'This is span 2',    '\\n',    'This is span 2',    '\\n']</code></p> </li> <li> <p><code>elem.stripped_strings</code>  \u2192 Retorna un llistat (array) amb els elements textuals, sense bots de linia i blancs. Segons els tipus anteriors tindriem:</p> <p><code>['Contingut textual']</code></p> <p>o be</p> <p><code>['This is the footer','This is span 1','This is span 2','This is span 2']</code> </p> </li> <li> <p><code>elem.string</code> \u2192 retorna sols una cadena, quan l'element cont\u00e9 sols un \u00fanic element textual. Cas contrari (buida o m\u00e9s d'una) no retorna res</p> </li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#navegacio-a-partir-dun-element","title":"Navegaci\u00f3 a partir d'un element","text":"<p> Acci\u00f3 funci\u00f3 Contigut <code>elem.contents</code> Contingut iterable <code>elem.children</code> Accedir al pare del element <code>elem.parent</code> Llista amb tots els pares <code>elem.parents</code> El seg\u00fcent germa (dins d'element) <code>elem.next_sibling</code> Iterable amb els seg\u00fcents germans <code>elem.next_siblings</code> L'anterior germa (dins d'element) <code>elem.previous_sibling</code> Iterable amb els anteriors germans <code>elem.previous_siblings</code> Seg\u00fcent element (germ\u00e0 o no) <code>elem.next_element</code> Anterior element (germ\u00e0 o no) <code>elem.previous</code> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/3.%20Peticions%20HTTP.%20API-REST/#exemple-de-scraping","title":"Exemple de scraping","text":"<p>Primer que res hem d'analitzar el contingut de la p\u00e0gina web. A l'exemple anem a estudiar la web <code>whatcar.com</code>, que fa an\u00e0lisi de cotxes. Dins de la web, podem accedir a la pestanya de reviews, i ens trobem aix\u00f2:</p> <p></p> <p>Sembla que hi ha un enlla\u00e7 per a cada marca. Per veure el  tipus d'element, hem de fer una tasca d'an\u00e0lisi del codi font, mitjan\u00e7ant les eines de desenvolupador. Llavors ens trobem que:</p> <p></p> <ul> <li>Per a cada marca que s'analitza est\u00e0 dins d'etiquetes <code>&lt;a class=\"FragmentReviewsMake-makeContainer-d9f354b1\" ...&gt;</code></li> <li>Dins de cada marka hi ha un link a la p\u00e0gina de cada marca <code>&lt;a href='...'&gt;</code></li> </ul> <p>Arreplegant els links de les marques</p> Python<pre><code>base_url=\"https://www.whatcar.com\"\npage=\"/reviews\"\n\nsoup=get_soup_from_webPage(base_url+page)\n\nclass_marca='FragmentReviewsMake-makeContainer-d9f354b1'\n\nsoup=\nmarques=soup.find_all('a',class_=class_marca)\n\nfile = open(\"Brands.txt\",\"w\", encoding='utf-8')\nfor marca in marques:\n     link_marca= marca['href']\n     file.write(base_url+link_marca+\"\\n\")\n</code></pre> <p>el resultat \u00e9s un arxiu de text amb el seg\u00fcent contingut:</p> Text Only<pre><code>https://www.whatcar.com/make/abarth\nhttps://www.whatcar.com/make/alfa-romeo\nhttps://www.whatcar.com/make/alpine\nhttps://www.whatcar.com/make/aston-martin\nhttps://www.whatcar.com/make/audi\n</code></pre> <p>Ara, de manera recursiva hauriem d'analitzar cadascuna de les marques, vegem primer la estructura de cada marca:</p> <p></p> <p>i si explorem cadascuna de les targetes de cada model:</p> <p></p> <p>podem trobar que dins mateix tenim un link <code>&lt;a href=\"/bmw/2-series/hatchback/review/n78\" ...&gt; &lt;/a&gt;</code>, del qual sols ens interessa el href..</p> <p>Posteriorment hauriem de veure com accedir a la p\u00e0gina de cada model i buscar els elements amb informaci\u00f3 interessant per veure com extreure-la.</p> <p>Enlla\u00e7os</p> <p>Refer\u00e8ncies:</p> <ul> <li>https://verneacademy.com/blog/articulos-data/web-scraping-paginas-dinamicas-selenium-python-y-beautifulsoup/</li> <li>https://medium.com/@repopkukato/web-scraping-en-python-con-selenium-y-beautiful-soup-19fccb62908e</li> <li>https://pypi.org/project/selenium/</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/","title":"4. Servidors amb Flask","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/#primer-programa-en-flask","title":"Primer programa en <code>Flask</code>","text":"<p>Per comen\u00e7ar crearem un nou entorn per a tota la programaci\u00f3 en <code>flask</code></p> Preparant l'entorn Text Only<pre><code>conda create -n flask python=3.10\nconda list env\nconda activate flask\n</code></pre> <p>a continuaci\u00f3:</p> <ol> <li>Instal\u00b7lem flask amb <code>conda install flask</code></li> <li>Creem el programa principal, amb nom <code>app.py</code> (per exemple)</li> <li>(Linux) Exportem el nom de l'aplicaci\u00f3 <code>export FLASK_APP=app.py</code></li> <li>(Windows) <code>set FLASK_APP=app.py</code></li> <li>S'executa amb <code>flask run</code></li> </ol> <p>Un cop executat, ens apareixer\u00e0 una cosa com: Text Only<pre><code> * Serving Flask app 'app.py'\n * Debug mode: off\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\n * Running on http://127.0.0.1:5000\n</code></pre></p> <p>El que ens diu que tenim un servidor escoltant al port 5000, i podem obrir-lo al navegador. Vegem el primer programa com quedar\u00e0</p> Hola m\u00f3n amb <code>Flask</code> Python<pre><code>from flask import Flask\napp=Flask(__name__)\n\n@app.route('/')\ndef hola_mon():\n    return \"Hola m\u00f3n\"\n\nif __name__==\"__main__\":\n    app.run()   # localhost at 5000   \n</code></pre> <p>A comentar:</p> <ul> <li>A la primera l\u00ednia importem el framework, creant a continuaci\u00f3 amb el constructor el nostre servidor.</li> <li>Es defineix un primer recurs a oferir (la <code>/</code> o tamb\u00e9 el recurs arrel) dins dels nostre servidor, que ens retornar\u00e0 un string amb la salutaci\u00f3 <code>Hola m\u00f3n</code>.</li> <li>La ruta s'indica amb l'anotaci\u00f3 <code>@app.route(ruta)</code>, i si no es posa res m\u00e9s s'enten que la petici\u00f3 \u00e9s <code>GET</code> </li> <li>Aquesta servidor ser\u00e0 llan\u00e7at desde el programa principal (aquell que s'anomena main)</li> </ul> <p>Llavors ja podem accedit des del navegador a dit recurs: </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/#mapejant-noves-rutes-i-metodes","title":"Mapejant noves rutes i m\u00e8todes","text":"<p>Si volem podeer mapejar altre tipus de peticions, hem d'indicar quin m\u00e8tode \u00e9s. Podem fer-ho indicant-ho com a par\u00e0metre del <code>app.route()</code>. Adem\u00e9s hem d'extreure el JSON que ens ha enviat el client dins del cos, cosa que podem fer amb el m\u00e8tode <code>request.get_json()</code>, que ens retorna el json del body de la petici\u00f3 dins d'un diccionari python.</p> Primer exemple de POST Python<pre><code>@app.route(\"/saluda\",methods=[\"POST\"])\ndef saluda():\n    body=request.get_json();\n    resp=\"Hola &lt;b&gt;\" + body[\"name\"]+\"&lt;/b&gt;\"\n    ret={\n        \"resposta\":resp\n    }\n\n    return jsonify(ret),201\n</code></pre> <ul> <li>Comentar que hem d'afegir noves importacions, amb la l\u00ednia <code>from flask import Flask, jsonify,request</code>.</li> <li>Adem\u00e9s podem afegir a la resposta, el codi HTTP per a que el client s\u00e0piga quin \u00e9s l'estat de la seua petici\u00f3.</li> </ul> Un POST m\u00e9s complexe i amb control d'errors Python<pre><code>@app.post(\"/suma\")\ndef suma():\n    body=request.get_json()\n    if not all(param in body for param in (\"x\",\"y\")):\n        return \"Error de format al body\", 400\n    x=body[\"x\"]\n    y=body[\"y\"]\n    suma=x+y\n    ret={\n        \"suma\":suma\n    }\n\n    return jsonify(ret),200\n</code></pre> <p>Ac\u00ed observem que:</p> <ul> <li>dins de l'anotaci\u00f3 <code>@app</code>, en compte de la combinaci\u00f3 <code>route</code> i <code>method</code> podem programar directament <code>app.post</code>, <code>app.get</code> (per defecte), <code>app.delete</code>, etc. Aix\u00f2 facilita la lectura del nostre programa</li> <li>Un cop recuperat el json que ens envia el client, podem comprovar els elements necessaris, a la condici\u00f3 de la l\u00ednia 4. Cas de faltar-ne algun retornem un error 400 (petici\u00f3 mal formada)</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/#recuperant-dades-dels-parametres-o-de-la-ruta","title":"Recuperant dades dels par\u00e0metres o de la ruta","text":"<p>Com sabem hi han 3 maneres b\u00e0siques de passar dades a la nostra API, que son mitjan\u00e7ant par\u00e0metres, variables de ruta i al cos de la petici\u00f3:</p> <ul> <li>Par\u00e0metres \u2192 un cop escrita la ruta, s'afig un s\u00edmbol d'interrogaci\u00f3 (<code>?</code>) i es confecciona una llista de par\u00e0metres amb <code>nom=valor</code>. Per exemple <code>localhost:5000/cliente?username=Pepe&amp;password=1234</code>. Per a aconseguir-ho els valors del par\u00e0metres farem servir els m\u00e8tode <code>request.args.get(nom_par\u00e0metre)</code></li> </ul> Recuperaci\u00f3 de par\u00e0metres Python<pre><code># /cliente?username=Pepe&amp;password=1234\n@app.route('/cliente')\ndef get_cliente():\n    username = request.args.get('username')\n    password = request.args.get('password')\n\n    return f'He demanat el client {username} &amp; {password}'\n</code></pre> <ul> <li>Variables de ruta \u2192 dins de la propia ruta apareix un codi o valor que simbolitza una dada. Per exemple <code>localhost:5000/cliente/12</code> on s'arreplegaria les dades del client de codi 12. Per a aconseguir-ho caldr\u00e0 afegir a la funci\u00f3 que mapeja la ruta un par\u00e0metre amb el mateix nom que podem dins de ladefinici\u00f3 de la ruta.</li> </ul> Recuperaci\u00f3 de par\u00e0metres Python<pre><code># /cliente/12\n@app.route('/cliente/&lt;id_Cliente&gt;')\ndef get_cliente_by_Id(id_Cliente):\n    return f'He demanat el client {id_Cliente}'\n</code></pre> <ul> <li>Cos de la petici\u00f3 \u2192 les dades es passen al cos de la petici\u00f3 dins d'un JSON. Ja ho hem vist anteriorment, amb el m\u00e8tode <code>body=request.get_json()</code></li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/#creant-apis-amb-flask","title":"Creant API's amb flask","text":"<p>Flask incopora unes llibreries a traves del paquet flask-restful per a facilitar la construcci\u00f3 de API. Per aix\u00f2 necessitem:</p> <ul> <li><code>conda install flask-restful</code></li> <li><code>from flask_restful import Api,Resource</code></li> <li><code>Api</code> definir\u00e0 una Api dins de la nostra app</li> <li><code>Resource</code> definir\u00e0 cadascun dels recursos o rutes dins de la nostra API</li> </ul> <p>La classe <code>Resource</code> \u00e9s una interf\u00edcie, que cont\u00e9 els m\u00e8todes post(),get(), delete(), etc... Si volem crear una API que atenga a dits m\u00e8todes, deurem crear una classe que implemente dita interf\u00edcie, i implementar cadascun dels m\u00e8todes.</p> <p>Per afegir despr\u00e8s la ruta a cadascun dels m\u00e8todes anteriors, ho podem fer amb el m\u00e0tode <code>api.add_resource(classe, ruta)</code>.</p> Exemple de implementaci\u00f3 de <code>Resource</code> Python<pre><code>class Sumar(Resource):\n    def post(self):\n        return \"He fet un POST a add\"\n    def get(self):\n        return \"He fet un GET a add\"\n    def delete(self):\n        return \"He fet un DELETE a add\"\n    def put(self):\n        return \"He fet un PUT a add\"\n\napi.add_resource(Sumar, \"/add\")\n</code></pre> <p>Amb aix\u00f2 hem definit els 4 m\u00e8todes (post, get, delete i put) per a la ruta <code>/add</code> </p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/4.%20Servidors%20amb%20Flask/#projecte","title":"Projecte","text":"<p>Crear una xicoteta api en Flask que:</p> <ul> <li>Tinga una petici\u00f3 de benvinguda a l\u00b4'index que retorne <code>Hola</code> seguit de la data actual</li> <li>Una petici\u00f3 de <code>/register</code> que reb al cos un username, password i icono, i ho emmagatzeme en una BBDD mongoDB que haurem creat per a l'ocasi\u00f3. El icono servir\u00e0 per a l'avatar. Recorda de guardar el password encriptat (llibreria <code>bcrypt</code>). Hi haur\u00e0 un contador de tokens, iniciat a 10, que son les consultes que pot fer-nos l'usuari. Retornar\u00e0 un missatge \"Hola nom, et queden 10 tokens\"</li> <li>Una petici\u00f3 de <code>/login</code>, que reb al cos el username i password. Cas d'estar tot be, retornar\u00e0 un <code>200 OK</code> i el avatar de l'usuari.</li> <li>Una petici\u00f3 de <code>/consulta</code>, amb un <code>username i password</code>. </li> <li>Cas d'estar tot be retorna un missatge de <code>Consulta efectuada. Et qeden X tokens</code>.</li> <li>Cas de no quedar tokens un codi d'error i un missatge de <code>Efectua rec\u00e0rrega</code></li> <li>Una petici\u00f3 de <code>/refill</code>, amb un <code>username</code>, <code>admin_pw</code> (un password de administrador) i <code>amount</code>, que augmentar\u00e0 la quantitat de tokens. Retornar\u00e0:</li> <li>Un <code>200 ok</code> i un missatge amb la quantitat de tokens actualitzada</li> <li>Un codi i missatge d'error si l'usuari no existeix o que el password d'administrador \u00e9s incorrecte. Aquest password ser\u00e0 fixe (<code>S3g1r0</code>)</li> <li>A mode de administraci\u00f3, implementar un <code>GET /login</code> que retorne tots els usuaris de la BBDD, passant-li com a par\u00e0metre el password de l'adminstrador</li> </ul> <p>Warning</p> Text Only<pre><code>- Discutirem m\u00e9s endavant com protegir algunes rutes amb privilegis, ja que el refill no pot fer-ho tot el mon, sin\u00f2 sols un usuari adminstrador.\n- La part dels iconos deixa-la per al final, com ampliaci\u00f3 de l'exercici, un cop ho tingues tota la funcionalitat b\u00e0sica implementada.\n</code></pre>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/","title":"5. Pr\u00e0ctiques","text":""},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/#practica-1-contenidors","title":"Pr\u00e0ctica 1. Contenidors","text":"<p>Es tracta de crear i orquestrar un parell de contenidors, amb les seg\u00fcents caracter\u00edstiques:</p> <p>Base de dades, amb les seg\u00fcents caracter\u00edstiques:</p> <ol> <li>Contindr\u00e0 un servidor de bases de dades mysql, escoltant al port 3306</li> <li>Deu crear una base de dades amb nom <code>alumnes</code></li> <li>L'usuari administrador tindr\u00e0 com a password <code>toor</code></li> <li>Es carregar\u00e0 el seg\u00fcent script     SQL<pre><code>use alumnes;\n\nCREATE TABLE students(\n    StudentID int not null AUTO_INCREMENT,\n    FirstName varchar(100) NOT NULL,\n    Surname varchar(100) NOT NULL,\n    PRIMARY KEY (StudentID)\n);\n\nINSERT INTO students (FirstName, Surname) VALUES ('Tony', 'Stark');\nINSERT INTO students (FirstName, Surname) VALUES ('Steve', 'Rogers');\nINSERT INTO students (FirstName, Surname) VALUES ('Bruce', 'Banner');\nINSERT INTO students (FirstName, Surname) VALUES ('Natasha', 'Romanoff');\nINSERT INTO students (FirstName, Surname) VALUES ('Thor', 'Odinson');\nINSERT INTO students (FirstName, Surname) VALUES ('Peter', 'Parker');\nINSERT INTO students (FirstName, Surname) VALUES ('Wanda', 'Maximoff');\nINSERT INTO students (FirstName, Surname) VALUES ('Scott', 'Lang');\nINSERT INTO students (FirstName, Surname) VALUES ('Carol', 'Danvers');\nINSERT INTO students (FirstName, Surname) VALUES ('T''Challa', 'Wakanda');\n</code></pre>     Aix\u00f2 es fa afegint al Dockerfile corresponent aquesta linia <code>COPY ./init.sql /docker-entrypoint-initdb.d/</code></li> </ol> <p>Programa en Python, amb les seg\u00fcents caracter\u00edstiques</p> <ol> <li>Es deu de crear un contenidor que requereix python</li> <li> <p>Es copiar\u00e0 el programa seg\u00fcent dins del contenidor     Python<pre><code>import mysql.connector\n\nconnection = mysql.connector.connect(\n    user='root', password='toor', host='db', port=\"3306\", database='alumnes')\nprint(\"DB connected\")\n\ncursor = connection.cursor()\n\ndef show_students():\n\n    # Execute the query\n    cursor.execute('SELECT * FROM students')\n\n    # Fetch the results\n    students = cursor.fetchall()\n\n    # Print the results\n    for student in students:\n        print(student)\n\nshow_students()\n\nconnection.close()\n</code></pre></p> </li> <li> <p>S'executar\u00e0 el programa nom\u00e9s arrancar el contenidor. El programa mostrar\u00e0 els registres que s'han inserit al crear la base de dades.</p> </li> </ol>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/#practica-2-exportacio-importacio","title":"Pr\u00e0ctica 2. Exportaci\u00f3 - Importaci\u00f3","text":"<p>Anem a fer una importaci\u00f3 des d'un dataset a la nostra base de dades. El dataset a manipular ser\u00e0 el que pots trobar a https://www.kaggle.com/datasets/aslanahmedov/market-basket-analysis. Aquest dataset te aproximadament m\u00e9s de mig milio de files.</p> <p>L'objectiu \u00e9s importar-lo a una BBDD mongo, seguint:</p> <ol> <li>Crea una classe per guardar una fila.</li> <li>Fes un bloc que carregue el dataset i neteje els nuls.</li> <li>Guarda els primer 30000 registres en la BBDD.</li> <li>si veus que va lento, investiga com guardar els registres en blocs o lots en compte de un a un.</li> </ol> <p>Fes servir tot l'estudiat i treballat a classe</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/#practica-3-scraping-de-tiempoes","title":"Pr\u00e0ctica 3. Scraping de tiempo.es","text":"<p>Revisant els continguts creats es tracta de crear un projecte que realitze un scrapping de una part de tiempo.es. Volem concretament saber l'oratge de les principals ciutats de la prov\u00edncia de Val\u00e8ncia, i per aix\u00f2 revisarem els continguts que ens ofereix https://www.tiempo.es/valencia-es2509951.html</p> <p>Es demana docs, crear un dataset on tindr\u00e0s per a cada ciutat la previsi\u00f3 del dia actual. Les zones a capturar son les que segueixen:</p> <p></p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/#practica-4-app-per-a-dissenyar-xxnn","title":"Pr\u00e0ctica 4. App per a dissenyar XXNN","text":"<p>Anem a fer en aquest cas pr\u00e0ctic una aplicaci\u00f3 que ens permetr\u00e0 dissenyar una XXNN. El programa presentar\u00e0 a la seua interf\u00edcie un formulari en el qual li indicarem:</p> <ul> <li>Dimensi\u00f3 de la entrada de la xarxa</li> <li>Per a cada capa:</li> <li>N\u00famero de neurones de la mateixa</li> <li>Tipus de capa</li> <li>Funci\u00f3 d'activaci\u00f3  </li> <li>Funci\u00f3 de callback de parada, amb els par\u00e0metres de delta, paciencia i guardat de m\u00ednims. </li> </ul> <p>Disseny</p> <ul> <li>Pensa que el n\u00famero de capes pot variar, aix\u00ed que a la pantalla podrem afegir o llevar files segons el n\u00famero de capes.</li> <li>Fixa't tamb\u00e9 que no totes les capes tenen el mateix n\u00famero d'atributs</li> </ul> <p>El programa generar\u00e0 un JSON, similar a aquest:</p> JSON<pre><code>{\n  \"input\":4,\n  \"layers\":[\n    {\n      \"layer\":'Dense',\n      \"neurons\":8,\n      \"act\":'relu'\n    },\n    {\n      \"layer\":'Dense',\n      \"neurons\":32,\n      \"act\":'selu'\n    },\n         {\n      \"layer\":'BatchNormalization'\n    }\n    {\n      \"layer\":'Dense',\n      \"neurons\":2,\n      \"act\":'relu'\n    }\n    \"stop\":{\n      \"min_delta\":0.001,\n      \"patience\":5, \n      \"restore_best_weights\":True\n    }\n  ]\n}\n</code></pre> <p>Ademes:</p> <ul> <li>Fer una funci\u00f3 que a partir del json anterior, cree el model.</li> <li>Un cop creat el model, entrenara amb un \u00fanic DataFrame ja preparat i netejat, per a no complicar m\u00e9s el disseny.</li> <li>En acabar l'entrenament es guardar\u00e0 a disc el model entrenat i el json en la configuraci\u00f3 del mateix.</li> <li>Un cop entrenat, dibuixar\u00e0 el gr\u00e0fic de les funcions de p\u00e8rdua. </li> <li>Ha de permetre tamb\u00e9 modificar el disseny de la xarxa, tornar-la a entrenar i dibuixar un nou gr\u00e0fic (sense perdre el primer ni els anteriors) per veure l'evoluci\u00f3 del mateix.</li> </ul>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/5.%20Practiques/#practica-5-consum-de-api","title":"Pr\u00e0ctica 5. Consum de API","text":"<p>Per a concloure, anem a fer una aplicaci\u00f3 client d'una API del temps https://www.el-tiempo.net/api. A la qual es presentaran 2 quadres de selecci\u00f3 desplegable, un per a provincia i altre per a municipi.</p> <p>En obrir el programa es consumir\u00e0 la API per a seleccionar les provincies. Amb aquesta informaci\u00f3 s'omplir\u00e0 el quadre de l'esquerre (Provincia).</p> <p>En seleccionar la provincia, es consumir\u00e0 la API i s'ompliran tots els municipis al seleccionable de la dreta. </p> <p>When the municipality is selected, the API will be consumed and the weather forecast for that municipality will be retrieved. General information for the day will be presented, and graphs with temperature, wind speed, and precipitation forecasts should be displayed.</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <p>1 - Frontend. Programaci\u00f3 amb <code>Flet</code>   - Calculadora   - To do App   - Introducci\u00f3 a m\u00e0 al\u00e7ada de car\u00e0cters i entrenament de xarxa neuronal 2 - Docker. Contenidors amb BBDD (MONGO)   - EXPORTAR DATASET A BBDD 3 - API-Rest. Peticions HTTP.   - Xicotet client 4 - Backend. Programaci\u00f3 amb <code>Flask</code>   - FER UN SERVEI SOBRE LA BBDD 5 - Projecte integrador   - FER CLIENT I SERVIDOR ATACANT AL QUE HEM FET</p>"},{"location":"U04%20Programaci%C3%B3%20d%27Aplicacions/exercicis/mongo_first/","title":"Mongo first","text":"<p>Es demana crear un contenidor i comen\u00e7ar a treballar amb mongo.</p> <ol> <li>Crear el contenidor</li> </ol> Bash<pre><code>docker run --name mongo-test \\\n    -e MONGO_INITDB_ROOT_USERNAME=\"root\" \\\n    -e MONGO_INITDB_ROOT_PASSWORD=\"toor\" \\\n    -p 27017:27017 \\\n    -d mongo\n</code></pre> <ol> <li>Un cop creat comprovem que ens podem connectar i veure quines bases de dades existeixen:</li> </ol> Bash<pre><code>mongo -u root -p toor\n\nsh dbs\n</code></pre> <ol> <li>Tanquem la connexi\u00f3 amb el comandament <code>exit</code> i anem a importar una col\u00b7lecci\u00f3. Al recursos tens l'arxiu restaurants.json per a descarregar a la carpeta de treball. </li> </ol> Bash<pre><code>mongoimport --uri 'mongodb://localhost:27017' \\\n  --username='root' --password='toor' --authenticationDatabase=admin \\\n  --db proves_pia --collection restaurant --file restaurants.json\n</code></pre> <ol> <li> <p>Entra i comprova que hi han 3772 documents a la col\u00b7lecci\u00f3 Bash<pre><code>use proves_pia\ndb.restaurant.count()\n</code></pre></p> </li> <li> <p>Ix i torna a importar-ho. </p> </li> <li>Entra i comprova que ara hi han 7544.</li> <li>Ix de nou i torna a importa-ho, per\u00f2 ara amb la opci\u00f3 <code>--drop</code></li> <li> <p>Comprova que tornen a hi haura 3772 documents.</p> </li> <li> <p>Exporta la col\u00b7lecci\u00f3 de restaurants a un arrxiu distint. </p> </li> <li>Verifica el tamany i el contingut de l'arxiu.</li> <li>S\u00f3n distints! Per qu\u00e8? Investiga-ho</li> <li>Exporta ara de la col\u00b7lecci\u00f3 de restaurants a un CSV, amb els atributs name i cuisine. Bash<pre><code>mongoexport --uri 'mongodb://localhost:27017' --username='root' --password='toor'\\\n --authenticationDatabase=admin --db proves_pia --collection restaurant \n --type=csv --out restaurants.csv --fields=borough,cuisine\n</code></pre></li> </ol>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/00_Configurar_Azure/","title":"Configuraci\u00f3 de Azure","text":"<p>En aquesta pr\u00e0ctica anem a veure com configurar un compte amb Azure per a poder treballar i integrar les nostre aplicacions amb ell.</p> <p> </p> <p>Realment hi han diverses plataformes, com be Google, </p> <p> </p> <p>Realment hi han diverses plataformes, com be Amazon, </p> <p> </p> <p>i la pr\u00f2pia Azure, </p> <p> </p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/00_Configurar_Azure/#azure-cognitive-services","title":"Azure Cognitive Services","text":""},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/00_Configurar_Azure/#crear-i-configurar-un-compte-dazure","title":"Crear i configurar un compte d'Azure:","text":"<p>Busquem Azure free students en Google i ens portar\u00e0 a https://azure.microsoft.com/es-es/free/students/</p> <p> </p> <ul> <li>Li diguem de Empezar aqu\u00ed</li> <li>Crear una cuents</li> </ul> <p> </p> <p> </p> <ul> <li>Ens donarem d'alta amb el compte que <code>@alu.edu.gva.es</code> que tens assignat.</li> <li>El password pot ser distint que el del correu!!</li> <li>Comprovarem el codi que ens han enviat.</li> <li>Verificarem que no som un bot</li> </ul> <p> </p> <p> </p> <ul> <li>Completarem les dades</li> </ul> <p> </p> <ul> <li>Ens donar\u00e0 finalment un enlla\u00e7 de verificaci\u00f3</li> </ul> <p> </p> <p> </p> <p> </p> <p>i finalment ja tenim disponibles aquests serveix.</p> <p> </p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/","title":"1. Azure Text","text":""},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#1-el-portal-dazure","title":"1. El portal d'Azure","text":"<p>Anem a treballar un concepte interessant en aquesta unitat, i \u00e9s el que s'anomena AIaaS (Intel\u00b7lig\u00e8ncia artificial as a service). Consistir\u00e0 en fer servir plataformes amb models i eines ja entrenades, preparades per a utilitzar-les.</p> <p>Comen\u00e7arem a treballar amb Azure, i podem veure la justificaci\u00f3 ac\u00ed.</p> <p>Aquests materials complementaris s\u00f3n de Javier Catal\u00e1 Jim\u00e9nez.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#11-alta-amb-azure-amb-compte-educatiu","title":"1.1. Alta amb Azure amb compte educatiu","text":"<p>Actualment la Conselleria d'Educaci\u00f3  disposa d'un contracte amb Microsoft on disposem d'un compte corporatiu, dins del domini <code>@alu.edu.gva.es</code> i <code>@edu.gva.es</code> per a alumnes i professors, respectivament. Amb aquest compte disposem de 100$ de saldo per a les recursos que utilitzem, i acc\u00e8s a la capa gratu\u00efta dels serveis durant un any.</p> <p>Aquests  serveis tenen certes limitacions, con per exemple 5000 transaccions mensuals, suficients per a la nostra feina dins del curs.</p> <p>Podem seguir el procediment d'alta en aquesta presentaci\u00f3</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#12-alta-amb-compte-gratuit","title":"1.2. Alta amb compte gratu\u00eft","text":"<p>Suposadament amb aquesta capa gratu\u00efta tindrem prou per a les tasques del nostre curs. Aquesta funcionar\u00e0 sempre que ens quede algo de saldo.  La soluci\u00f3 \u00e9s crear-te un nou compte, amb un correu distint, obviament on tindr\u00e0s 200$ i la capa gratuita de nou durant un any. </p> <p>El problema d'aquest recurs \u00e9s que hem de posar el numero de la targeta de cr\u00e8dit, amb la qual cosa hem de tenir molta cura de aturar els serveis que puguem arrancar, si no volem tindre sorpreses a final de m\u00e9s. Per sort, sembla que Microsoft abans de carregar-nos res ens enviar\u00e0 un correu electr\u00f2nic</p> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#13-configuracio-general-de-les-api-dazure","title":"1.3. Configuraci\u00f3 general de les API d'azure","text":"<p>Anem a veure com \u00e9s funcionament general d'aquest serveis d'IA:</p> <ol> <li>Haurem de crear des de la plataforma el recurs que desitjem; veu, imatge, so, etc.</li> <li>Un cop creat, haurem de veure a la seua configuraci\u00f3 els par\u00e0metres:<ol> <li>entrypoint \u2192 \u00e9s la url del recurs, on farem les peticions del mateix</li> <li>key o token \u2192 \u00e9s el identificador que ens ha assignat Azure per a fer \u00fas del recurs.</li> </ol> </li> <li>Des del nostre programa carregarem la llibreria per a connectar-nos</li> <li>Farem la petici\u00f3</li> <li>Processarem els resultats</li> </ol> <p>Pots veure el proc\u00e9s de creaci\u00f3 als seg\u00fcents passos. En auqest cas veurem el de text, que \u00e9s el primer que treballarem:</p> <ol> <li> <p>Li creem un nou recurs de An\u00e0lisi de text: </p> </li> <li> <p>Li diguem crear: </p> </li> <li> <p>Es deixen les caracter\u00edstiques per defecte, sense afegir-ne cap altra: </p> </li> <li> <p>Indiquem que el grup de recursos, o el creem si \u00e9s el primer cop (com a nom, <code>UDCognitiveServices</code> o simimlar) i un nou recurs d'An\u00e0lisi de Text, per exemple <code>TextAnalyticsDemoJoange</code> </p> </li> <li> <p>Li indiquem el pla de pagament, gratu\u00eft. Revisem i llavors acceptem els termes de lic\u00e8ncia: </p> </li> <li> <p>Finalment creem: </p> </li> <li> <p>I ja tenim el servei a punt. </p> </li> </ol> <p>Podem fer les peticions mitjan\u00e7ant request, postman o curl, per\u00f2 ens ser\u00e0 m\u00e9s complicat, sobretot per temes de seguretat:</p> <p></p> <p>La millor alternativa \u00e9s fer servir les llibreries del SDK de Azure, disponibles per als llenguatges de programaci\u00f3 m\u00e9s utilitzats:</p> <p></p> <p>Aquest eines, a banda d'oferir objectes estructurats per a enviar i arreplegar la informaci\u00f3, encripten autom\u00e0ticament les peticions (i la informaci\u00f3 que viatja amb elles), donant-li una major capa de protecci\u00f3.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#2-llenguatge-analisi-de-sentiments","title":"2. Llenguatge - An\u00e0lisi de sentiments","text":"<p>Anem a estudiar com podem analitzar els sentiments d'un text. L'an\u00e0lisi de sentiments \u00e9s com fer un ex\u00e0men d'emocions en textos per determinar si el contingut expressa opinions positives, negatives o neutres. Els algorismes d'an\u00e0lisi de sentiments utilitzen processament del llenguatge natural (PLN) per analitzar les paraules i frases en un text i determinar la seva tonalitat emocional.</p> <p>Aix\u00f2 implica:</p> <ul> <li>identificar paraules clau, </li> <li>frases o contextos que indiquin sentiments</li> </ul> <p>Per exemple, si alg\u00fa diu estic molt content amb aquest producte, el sistema hauria de recon\u00e8ixer la paraula content i interpretar-la com una expressi\u00f3 positiva.</p> <p>Aquesta tecnologia \u00e9s molt utilitzada en:</p> <ul> <li>monitoritzaci\u00f3 de xarxes socials </li> <li>ressenyes de productes</li> <li>opinions dels clients i </li> <li>altres \u00e0mbits on es vol entendre la resposta emocional dels usuaris. </li> </ul> <p>Hi ha diverses eines i plataformes que ofereixen serveis d'an\u00e0lisi de sentiments utilitzant tecnologies de processament del llenguatge natural (PLN). Algunes d'aquestes inclouen:</p> <ol> <li> <p>IBM Watson Natural Language Understanding: Proporciona an\u00e0lisi de sentiments entre altres funcionalitats PLN.</p> </li> <li> <p>Google Cloud Natural Language API: Ofereix an\u00e0lisi de sentiments i altres funcions de PLN.</p> </li> <li> <p>Microsoft Azure Text Analytics: Proporciona an\u00e0lisi de sentiments, detecci\u00f3 d'idiomes i altres funcionalitats basades en text.</p> </li> <li> <p>AWS (Amazon Web Services) ofereix una eina anomenada Amazon Comprehend que inclou funcionalitats d'an\u00e0lisi de sentiments, que pot detectar i analitzar les emocions expressades en text. A trav\u00e9s de l'API d'Amazon Comprehend, pots enviar text i rebre informaci\u00f3 sobre les emocions associades, com ara positiu, negatiu, neutre o mixt.</p> </li> <li> <p>Aylien: Una plataforma de processament del llenguatge natural que ofereix an\u00e0lisi de sentiments i altres eines d'an\u00e0lisi de text.</p> </li> <li> <p>VADER (Valence Aware Dictionary and sEntiment Reasoner): Una eina espec\u00edfica per a l'an\u00e0lisi de sentiments en angl\u00e8s, molt utilitzada i senzilla.</p> </li> <li> <p>NLTK (Natural Language Toolkit): Una llibreria de Python que inclou m\u00f2duls per a l'an\u00e0lisi de sentiments i altres tasques de PLN.</p> </li> <li> <p>TextBlob: Una llibreria de Python que facilita l'an\u00e0lisi de sentiments i altres tasques relacionades amb el processament del llenguatge natural.</p> </li> <li> <p>Hugging Face Transformers: Una llibreria que proporciona models preentrenats per a diverses tasques, inclosa l'an\u00e0lisi de sentiments.</p> </li> </ol>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#21-deteccio-de-sentiments-amb-azure","title":"2.1. Detecci\u00f3 de sentiments amb Azure","text":"<p>Anem a estudiar les eines que ens ofereix el SDK de Python per a Azure</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#211-creacio-del-client","title":"2.1.1. Creaci\u00f3 del client","text":"<p>L'objecte clau per fer la crida \u00e9s el client, i aquest \u00e9s els <code>class azure.ai.textanalytics.TextAnalyticsClient</code></p> <p>Aquest classe presenta dos arguments:</p> <ul> <li><code>endpoint (str)</code> \u2192 sent la url al nostre recurs del servei del llenguatge supportat per Azure. Es del tipus <code>https://&lt;resource-name&gt;.cognitiveservices.azure.com</code>.</li> <li><code>credential (AzureKeyCredential or TokenCredential)</code> \u2192 La credencial necessaria per a validar el client al servei d'Azure. Pot ser de dos tipus:<ul> <li><code>AzureKeyCredential</code> si fem servir un token del serveis de Cognitive Services/Language API</li> <li>Un token credential de <code>azure.identity</code>.</li> </ul> </li> </ul> <p>Aquesta informaci\u00f3 la pots extreure del servei que haurem creat pr\u00e8viament. Des de les opcions del recurs:  </p> <p>I les podem veure o incl\u00f2s directament copiar-les: </p> Example de configuraci\u00f3 del client Python<pre><code>import os\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\n\"\"\"\"  \nSi guardem les credencials com a variables d'entorn del SO\nles podem carregar amb aquestes instruccions\nendpoint = os.environ[\"AZURE_LANGUAGE_ENDPOINT\"]\nkey = os.environ[\"AZURE_LANGUAGE_KEY\"]\n\"\"\"\n\nkey=\"XXXXXXXXXXXXXXXXXXXXXXXXXX\"\nendpoint= \"https://nom_del_teu_recurs.cognitiveservices.azure.com/\"\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#212-avaluant-el-sentiment","title":"2.1.2. Avaluant el sentiment","text":"<p>El m\u00e8tode per a fer la petici\u00f3 \u00e9s <code>analyze_sentiment</code>, amb aquesta sintaxi retallada:</p> Python<pre><code>analyze_sentiment(\n        documents: Union[List[str], \n        . . .\n         \u2192 List[Union[AnalyzeSentimentResult, DocumentError]]\n</code></pre> <p>Per simplificar:</p> <ul> <li> <p>A aquest m\u00e8tode li passarem un o m\u00e9s textos, anomentats com a documents. Ha de ser una llista: </p> <ul> <li>Poden ser un llistat de textos, com a str:</li> </ul> Python<pre><code>documents=[\"Hola m'encanta aquest modul\",\"Estic una mica cansat\",\"I'm very bored\"]\n</code></pre> <ul> <li>Un llistat del anomentat <code>TextDocumentInput</code>, en el qual podem donar-li m\u00e9s detalls:</li> </ul> Python<pre><code>  documents=[{\"id\": \"1\", \"language\": \"ca\", \"text\": \"Hola m'encanta aquest modul\"},\n            {\"id\": \"1\", \"language\": \"es\", \"text\": \"Me encuentro cansado\"},\n            {\"id\": \"1\", \"language\": \"en\", \"text\": \"I'm very bored\"}]\n</code></pre> </li> <li> <p>El retorn de la funci\u00f3 \u00e9s una llista combinada (de tuples)  de <code>AnalyzeSentimentResult</code> o <code>DocumentError</code>, amb tants elements com documents s'han passat.</p> </li> </ul> Valor real retornat Python<pre><code>AnalyzeSentimentResult(id=3, sentiment=negative, warnings=[], statistics=None,\nconfidence_scores=SentimentConfidenceScores(positive=0.0, neutral=0.01, negative=0.98), \nsentences=[\n  SentenceSentiment(\n    text=I'm very bored, \n    sentiment=negative, \n    confidence_scores=SentimentConfidenceScores(positive=0.0, neutral=0.01, negative=0.98), \n    length=14, \n    offset=0, \n    mined_opinions=[])], \n  is_error=False, \n  kind=SentimentAnalysis)\n</code></pre> <p>Com podem veure, les opcions importants del <code>AnalyzeSentimentResult</code> son:</p> <ul> <li><code>sentiment</code> \u2192 ens classifica el text avaluat en positiu, neutral o negatiu. Pot apareixer un mixed.</li> <li><code>confidence_scores</code> \u2192 ens informa de la probabilitat de cada un dels tres nivells.</li> <li><code>sentences</code> \u2192 per a cada unitat del text individual (fixa't que divideix el text en sent\u00e8ncies) ens torna a donar la informaci\u00f3 per separat.</li> </ul> Proc\u00e9s dels resultats Python<pre><code># ens quedem en aqulles que no donen error, en un llistat\ndocs = [doc for doc in result if not doc.is_error]\n\n# processem els documents\nfor idx, doc in enumerate(docs):\n  print(f\"Opini\u00f3n general del document {idx}: {doc.sentiment}\"); \n  for sentencia in doc.sentences:\n    print(f\"\\tOpinio de la frase {sentencia.text} \u00e9s &lt;{sentencia.sentiment}&gt;\")\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#3-llenguatge-deteccio-didioma","title":"3. Llenguatge. Detecci\u00f3 d'idioma","text":"<p>Per a an\u00e0lisi de llenguatge necessitem crear un recurs de traducci\u00f3, de manera similar de com l'hem creat anteriorment.</p> <p></p> <p>Per fer una primera detecci\u00f3 del llenguatge, haurem de procedir invocant al recurs d'Azure i cridar al m\u00e8tode <code>detect_language</code> de l'analitzador de text:</p> Acc\u00e8s al recurs i identificaci\u00f3 del llenguatge Python<pre><code>from azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\nkey=\"XXXXXX\"\nendpoint= \"https://textanalyticsdemojoange.cognitiveservices.azure.com/\"\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\nTEXT1=\"En un lugar de la mancha de cuyo nombre\"\nTEXT2=\"Once upon a time\"\nTEXT3=\"Dans la deuxi\u00e8me partie (Cosette), on voit Jean Valjean s'\u00e9vader, arracher Cosette aux Th\u00e9nardier, et tenter de s'installer \u00e0 Paris\"\n\ndocuments=[TEXT1,TEXT2,TEXT3]\n\nresultats=text_analytics_client.detect_language(documents)\n</code></pre> <p>Els resultat \u00e9s un llistat (un per text enviat) de <code>DetectLanguageResult</code>, un objecte que el podem veure detallat com segueix:</p> JSON<pre><code>{ 'id': '0', \n  'primary_language':\n  DetectedLanguage(\n    name=Spanish, \n    iso6391_name=es, \n    confidence_score=1.0), \n  'warnings': [], 'statistics': None, 'is_error': False, 'kind': 'LanguageDetection'\n}\n</code></pre> <p>on l'element m\u00e9s important \u00e9s el <code>DetectedLanguage</code>, contenint com podem veure el nom del llenguatge i el grau de confian\u00e7a de la detecci\u00f3.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#4-llenguatge-deteccio-dentitats","title":"4. Llenguatge - Detecci\u00f3 d'entitats","text":"<p>La detecci\u00f3 d'entitats en text d'Azure \u00e9s una funci\u00f3 que utilitza tecnologies de processament de llenguatge natural per identificar i extraure informaci\u00f3 rellevant o entitats d'un text. Les entitats es refereixen a elements espec\u00edfics o conceptes dins del text, com ara noms de persones, llocs, dates, quantitats, etc.</p> <p>Aix\u00f2 pot ser molt \u00fatil en diverses aplicacions, com ara l'an\u00e0lisi de sentiments (vist), la categoritzaci\u00f3 de contingut, l'extracci\u00f3 d'informaci\u00f3 clau i altres tasques de processament de llenguatge natural.</p> <p>Per fer-lo servir, haurem de fer refer\u00e8ncia a un <code>TextAnalyticsClient</code> com el que hem fet servir abans. A l'igual que abans, prepararem el text o texts dins d'un llistat de docuents, i cridarem el m\u00e8tode <code>recognize_entities</code>. Pots trobar m\u00e9s informaci\u00f3 ac\u00ed</p> Reconeixemnet d'entitats Python<pre><code>from azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\nkey=\"XXXXXXXXXXXXXXXXXXXXXXXXXX\"\nendpoint= \"https://nom_del_teu_recurs.cognitiveservices.azure.com/\"\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n# iniciem els 3 text\nreviews = [TEXT1,TEXT2,TEXT3]\n\nresult = text_analytics_client.recognize_entities(reviews)\n</code></pre> <p>El resultat \u00e9s un llistat d'objectes de tipus <code>RecognizeEntitiesResult</code>, que ja deuriem de rec\u00f2rrer per treure una col\u00b7lecci\u00f3, anomenada <code>CategorizedEntity</code>, on tenim la informaci\u00f3 de les entitats detectades. Ac\u00ed podem veure un exemple de valor retornat:</p> Text Only<pre><code>RecognizeEntitiesResult(\n  id=0, \n  entities=[\n    CategorizedEntity(text=Francia, category=Location, subcategory=GPE, length=7, offset=13, confidence_score=1.0), \n    CategorizedEntity(text=verano, category=DateTime, subcategory=DateRange, length=6, offset=25, confidence_score=0.8), \n    CategorizedEntity(text=Provenza, category=Location, subcategory=GPE, length=8, offset=105, confidence_score=0.78), \n    CategorizedEntity(text=Normand\u00eda, category=Location, subcategory=GPE, length=9, offset=194, confidence_score=0.96), \n    CategorizedEntity(text=gu\u00eda, category=PersonType, subcategory=None, length=4, offset=231, confidence_score=0.92), \n    CategorizedEntity(text=Pierre Martin, category=Person, subcategory=None, length=13, offset=237, confidence_score=1.0)], \n    warnings=[], statistics=None, is_error=False, kind=EntityRecognition)\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#41-entitats-enllacades","title":"4.1. Entitats enlla\u00e7ades","text":"<p>Investiga al voltant de les <code>Entitats enlla\u00e7ades</code>, on a banda de trobar les entitats, podem trobar enlla\u00e7os per aprofundir en les entitas trobades.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#5-llenguatge-traduccio-de-texts","title":"5. Llenguatge -  Traducci\u00f3 de texts","text":"<p>Per a la traducci\u00f3 anem a fer una crida que no requereix d'un recurs propiament dit per\u00f2 si d'una credencial d'Azure. Com a novetat anem a fer-ho amb un request simple en compte d'eines concretes del SDK. Hem de preparar per tant la petici\u00f3 del request, amb aquestes caracter\u00edstiques:</p> Python<pre><code>request = requests.post(constructed_url, params=params, headers=headers, json=body)\n</code></pre> Preparaci\u00f3 de la url Python<pre><code>endpoint_textTranslation=\"https://api.cognitive.microsofttranslator.com/\"\npath = '/translate'\nconstructed_url = endpoint_textTranslation + path\n</code></pre> <p>Amb aix\u00f2 ja tenim el punt de conexi\u00f3 de la nosta API</p> Par\u00e0metres de la crida <p>En aquest apartat indicarem la versi\u00f3 de la api, aix\u00ed com l'idioma del text que anem a passar i una llista dels idiomes als quals volem traduir. Tenim a continuaci\u00f3 un exemple:</p> Python<pre><code>params = {\n    'api-version': '3.0',\n    'from': 'en',\n    'to': ['ca', 'es']\n}\n</code></pre> Cap\u00e7alera de la petici\u00f3 <p>Ac\u00ed hem de indicar la metainformaci\u00f3 de la petici\u00f3, en el format esperat per la API. En la primera opci\u00f3 posarem la nostra clau del recurs <code>TextAnalytic</code> que hem creat.</p> <p>L'altra opci\u00f3 important \u00e9s la localitzaci\u00f3 del servei, al nostre cas europa de l'oest</p> Python<pre><code>key=\"la_nostra_clau_de_azure\"\nlocation = \"westeurope\"\nheaders = {\n    'Ocp-Apim-Subscription-Key': key,\n    # location required if you're using a multi-service or regional (not global) resource.\n    'Ocp-Apim-Subscription-Region': location,\n    'Content-type': 'application/json',\n    'X-ClientTraceId': str(uuid.uuid4())\n}\n</code></pre> Text a traduir <p>Ens resta completar el cos de la petici\u00f3, indicant els text o textos a traduir. Ser\u00e0 una llista amb tants elements json com desitjem, encapsultas dins d'una etiqueta <code>text</code>.</p> Python<pre><code>body = [\n  {\n  'text': 'Hello, friend! What did you do today?'\n  },\n  {\n  'text': 'A long time ago in a galaxy far, far away....'\n  }\n]\n</code></pre> Crida i arreplegant el resultat <p>Finalment farem la crida i arreplegarem el resultat en un JSON. Aquest JSON conte una llista amb una col\u00b7lecci\u00f3 d'objectes, tants com texts passats:</p> <ul> <li>Objectes amb clau <code>translations</code>, que tindra tindr\u00e0 un llistat amb les traduccions als distints idiomes que hem indicat.</li> <li>Cada objecte dins del llistat contindr\u00e0:</li> <li>Una clau <code>to</code> on d'indica a quin idioma s'ha traduit</li> <li>Una clau <code>text</code> amb el text traduit a l'idioma indicat</li> </ul> Python<pre><code># crida\nrequest = requests.post(constructed_url, params=params, headers=headers, json=body)\n# extracci\u00f3 de resultats\nresponse = request.json()\n</code></pre> <p>i el contingut de la resposta \u00e9s pot veure a continuaci\u00f3: JSON<pre><code>[{\n    \"translations\": [\n        {\n            \"text\": \"Hola amic! Qu\u00e8 has fet avui?\",\n            \"to\": \"ca\"\n        },\n        {\n            \"text\": \"\u00a1Hola! \u00bfQu\u00e9 has hecho hoy?\",\n            \"to\": \"es\"\n        }\n    ]\n},\n{\n    \"translations\": [\n        {\n            \"text\": \"Fa molt de temps en una gal\u00e0xia llunyana, llunyana....\",\n            \"to\": \"ca\"\n        },\n        {\n            \"text\": \"Hace mucho tiempo en una galaxia muy, muy lejana...\",\n            \"to\": \"es\"\n        }\n    ]\n}]\n</code></pre></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#51-ampliacio","title":"5.1. Ampliaci\u00f3","text":"<p>Investiga per la teua part i intenta fer la implementaci\u00f3 anterior amb eines pr\u00f2pies del SDK d'Azure. Ens referim a <code>TextTranslationClient</code></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#52-traduccio-de-documents","title":"5.2. Traducci\u00f3 de documents","text":"<p>Respecte a la traducci\u00f3 de documents sencers, la deixarem com a opcional, ja que requereix de la creaci\u00f3 d'un recurs especial, que pots suposar un cost afegit. Tot i ser relativament barat, anar en compte per no acabar el saldo que disposem d'Azure</p> <p>La forma de treballar seria la seg\u00fcent:</p> <ol> <li>Crear un Azure Blob Storage containers, que \u00e9s un contenidor (espai) per a emmagatzemar els nostres documents a traduir.</li> <li>Crear un DocumentTranslationClient, en el qual especificarem:</li> <li>Entrades: que ser\u00e0n documents guardats al nostre contenidor</li> <li>Eixides: que es guardaran tamb\u00e9 al nostre contenidos</li> </ol> <p>Queda proposat com a exercici opcional</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#6-llenguatge-text-a-veu-i-vice-versa","title":"6. Llenguatge - Text a veu i vice-versa","text":"<p>En primer lloc hem de crear un recurs de veu, dins del nostre contenidor de recursos.</p> <p></p> <p>Recorda de posar el pla gratu\u00eft. Als noms no poden fer-se servir barres baixes.</p> <p></p> <p></p> <p></p> <p>Per \u00faltim fixar-se que el recurs no \u00e9s nostre propi, sin\u00f2 \u00e9s un entrypoint gen\u00e8ric. Ser\u00e0 amb el token com s'accedir\u00e0 al nostre recurs.</p> <p></p> <p>Al nostre programa ens caldr\u00e0 per tant la regi\u00f3 i el token d'acc\u00e8s</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#61-desenvolupant-el-programa-de-veu-a-text","title":"6.1. Desenvolupant el programa, de veu a text","text":"<p>Necessitarem crear un objecte de tipus <code>SpeechConfig</code>, al qual li indicarem el token i la regio creada</p> Creaci\u00f3 del recurs de veu Python<pre><code>import azure.cognitiveservices.speech as speechsdk\n\nspeech_key=\"XXXXXX\"\nspeech_region=\"westeurope\"\nspeech_endpoint=\"https://westeurope.api.cognitive.microsoft.com/sts/v1.0/issuetoken\"\n\nspeech_config = speechsdk.SpeechConfig(subscription=speech_key, region=speech_region)\nspeech_config.speech_recognition_language=\"es-ES\"\n</code></pre> <p>A continuaci\u00f3 necessitarem crear la configuraci\u00f3 del audio i del reconeixedor de veu, tot a partir del sdk de veu:</p> Audio i reconeixedor Python<pre><code>audio_config = speechsdk.audio.AudioConfig(use_default_microphone=True)\nspeech_recognizer = speechsdk.SpeechRecognizer(speech_config=speech_config, audio_config=audio_config)\n</code></pre> <p>Ah\u00ed indiquem:</p> <ul> <li>Que farem servir el micr\u00f2fon per defecte a la classe <code>AudioConfig</code>. Podeu trobar m\u00e9s informaci\u00f3 ac\u00ed</li> <li>Enllacem el microfon amb la configuraci\u00f3 creada anteriorment</li> </ul> <p>Finalmen farem servir el m\u00e8tode <code>recognize_once_async</code> per a transcriure blocs de fins a 30 segons  o fins detectar un silenci. Podeu trobar m\u00e9s informaci\u00f3 per a m\u00e9s coses dins de la documentaci\u00f3 de Reconeiximent de veu</p> Crida i processament del resultat Python<pre><code>speech_recognition_result = speech_recognizer.recognize_once_async().get()\n\nprint(str(speech_recognition_result))\n\nif speech_recognition_result.reason == speechsdk.ResultReason.RecognizedSpeech:\n    print(\"Text reconegut: {}\".format(speech_recognition_result.text))\nelif speech_recognition_result.reason == speechsdk.ResultReason.NoMatch:\n    print(\"No s'ha detectat text parlat: {}\".format(speech_recognition_result.no_match_details))\nelif speech_recognition_result.reason == speechsdk.ResultReason.Canceled:\n    cancellation_details = speech_recognition_result.cancellation_details\n    print(\"S'ha cancelat la parla: {}\".format(cancellation_details.reason))\n    if cancellation_details.reason == speechsdk.CancellationReason.Error:\n        print(\"Detall dels errors: {}\".format(cancellation_details.error_details))\n        print(\"Tens ben posat la clau i la zona de la parla?\")\n</code></pre> <p>El resultat obtigut despr\u00e8s de <code>speech_recognizer.recognize_once_async().get()</code> \u00e9s algo un <code>SpeechRecognitionResult</code></p> <p>que te com a contingut: JSON<pre><code>result_id=920a7d085efb4c23adf056e37df82986, \ntext=\"Bon d\u00eda com va tot?\", \nreason=ResultReason.RecognizedSpeech\n</code></pre></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/01_AzureTextAnalytics/#62-desenvolupant-el-programa-de-text-a-veu","title":"6.2. Desenvolupant el programa, de text a veu","text":"<p>Indiquem sols el programa d'exemple, el qual deuries de provar i analitzar.</p> Problema resolt de text a veu. Analitza'l Python<pre><code>import azure.cognitiveservices.speech as speechsdk\n\n# Creem la instancia del recurs de veu\nspeech_key, service_region = \"XXXX\", \"westeurope\"\nspeech_config = speechsdk.SpeechConfig(subscription=speech_key, region=service_region)\n\n# Establim la veu, a https://aka.ms/speech/voices/neural tens la llista completa. Espai que les neutres ja no funcionen.\nspeech_config.speech_synthesis_voice_name = \"es-ES-ElviraNeural\"\n\n# Creem el sintetitzador de veu\nspeech_synthesizer = speechsdk.SpeechSynthesizer(speech_config=speech_config)\n\n# Llegim el text de l'usuari\ntext = input(\"Escriu el text que vols narrar...\")\n\n# Fem la crida as\u00edncrona\nresult = speech_synthesizer.speak_text_async(text).get()\n\nprint(str(result))\n\n# Checks result.\nif result.reason == speechsdk.ResultReason.SynthesizingAudioCompleted:\n    print(\"Text a reproduir [{}]\".format(text))\n    stream = speechsdk.AudioDataStream(result)\n    stream.save_to_wav_file(\"sample.wav\")\nelif result.reason == speechsdk.ResultReason.Canceled:\n    cancellation_details = result.cancellation_details\n    print(\"Parla cancelada: {}\".format(cancellation_details.reason))\n    if cancellation_details.reason == speechsdk.CancellationReason.Error:\n        if cancellation_details.error_details:\n            print(\"Detalls dels errors: {}\".format(cancellation_details.error_details))\n    print(\"Tens be la informaci\u00f3 de la subscripci\u00f3?\")\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/","title":"2. Azure Face","text":""},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/#1-introduccio-a-face-no-valid-amb-compte-corporatiu","title":"1. Introducci\u00f3 a <code>Face</code> - No v\u00e0lid amb compte corporatiu","text":"<p>Face \u00e9s el servei de reconeixement facial d'Azure Cognitive Services. Aquest servei ens ofereix cinc operacions relacionades amb el reconeixement de cares en imatges:</p> <ul> <li>Detecci\u00f3 (<code>Detect</code>) \u2192 \u00c9s la funcionalitat b\u00e0sica de Face, que permet detectar les cares en una imatge, i obtenir informaci\u00f3 de cadascuna de les cares detectades.</li> </ul> <p></p> <ul> <li>Cares similars (<code>Find Similar</code>) \u2192 Permet localitzar cares similars a una de donada dins d'un conjunt de cares. Per defecte se seleccionen cares que pertanyin a la mateixa persona, per\u00f2 si s'indica un nombre m\u00ednim de cares que cal obtenir, es seleccionaran les m\u00e9s semblants, encara que pertanyin a altres persones.</li> <li>Verificaci\u00f3 (<code>Verify</code>) \u2192 Aquesta opci\u00f3 permet determinar si dues cares pertanyen a la mateixa persona.</li> <li>Agrupaci\u00f3 (<code>Group</code>) \u2192 Permet agrupar un conjunt de cares per semblan\u00e7a (normalment es crea un grup per a cada persona).</li> <li>Identificaci\u00f3 (<code>Identify</code>) \u2192 Aquesta funcionalitat permet identificar una persona a partir d'una imatge amb la cara. Per utilitzar-lo cal haver associat a aquesta persona un conjunt d'imatges de la cara.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/#11-estructures-de-dades-de-les-api","title":"1.1. Estructures de dades de les API","text":"<p>Quan utilitzem les funcionalitats de l'API de Face haurem de manipular diferents estructures de dades, entre les quals hi ha les seg\u00fcents:</p> <ul> <li><code>DetectedFace</code> \u2192 representa una cara detectada en una imatge. Inclou informaci\u00f3 de la cara (a la petici\u00f3 es pot indicar quina informaci\u00f3 es vol obtenir) i per defecte t\u00e9 una vig\u00e8ncia de 24 hores.</li> <li><code>PersistedFace</code> \u2192 \u00e9s semblant a l'anterior, per\u00f2 no t\u00e9 caducitat. Quan un objecte DetectedFace s'afegeix a algun tipus de col\u00b7lecci\u00f3 de cares (FaceList o Person) es converteix en PersistedFace.</li> <li><code>FaceList</code> \u2192 llista variada d'objectes PersistedFace, que normalment pertanyen a persones diferents.</li> <li><code>Person</code> \u2192 representa una persona, i est\u00e0 format per un conjunt d'objectes PersistedFace d'aquesta persona, a m\u00e9s del nom.</li> <li><code>PersonGroup</code> \u2192 llista dobjectes Person. Un objecte Person sempre ha de pert\u00e0nyer a un PersonGroup.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/#12-informacio-de-les-cares","title":"1.2. Informaci\u00f3 de les cares","text":"<p>Quan utilitzem la funcionalitat de detecci\u00f3 de cares, per a cadascuna de les cares detectades (objecte <code>DetectedFace</code>) podrem obtenir informaci\u00f3 descriptiva de la cara. Sempre s'obtindr\u00e0 la localitzaci\u00f3 de la cara dins de la imatge (el que s'anomena el rectangle de la cara), per\u00f2 a m\u00e9s es pot sol\u00b7licitar la informaci\u00f3 seg\u00fcent:</p> <ul> <li>Punts de refer\u00e8ncia de la cara \u2192 coordenades dels diferents punts que defineixen les parts de la cara.</li> <li>Atributs de la cara  caracter\u00edstiques descriptives de la cara, entre les quals hi ha l'edat, el sexe, l'emoci\u00f3 o la pres\u00e8ncia de m\u00e0scara.</li> </ul> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/#13-imatges-dentrada","title":"1.3. Imatges d'entrada","text":"<p>Aquestes s\u00f3n algunes de les caracter\u00edstiques i limitacions m\u00e9s importants de Face:</p> <ul> <li>Les imatges que es processen poden estar en els formats JPEG, PNG, BMP i GIF (si \u00e9s una animaci\u00f3 es processar\u00e0 el primer fotograma).</li> <li>El servei admet processar imatges a partir d'un URL o rebent les dades bin\u00e0ries de la imatge.</li> <li>La mida m\u00e0xima de les imatges a processar \u00e9s de 6 MB.</li> <li>El nombre de m\u00e0xim de cares que es poden detectar en una mateixa imatge \u00e9s de 100. Les imatges processades no s'emmagatzemen a Azure. \u00danicament es guarden les dades descriptives de les cares detectades.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/02_FaceDetection/#2-configuracio-del-servei","title":"2. Configuraci\u00f3 del servei","text":"<p>El primer que haurem de fer \u00e9s crear el recurs de <code>Face</code> des del nostre tauler de control de Azure</p> <p>Creem el recurs de Face:</p> <p></p> <p>Indiquem tots els par\u00e0metres. Revisa la opci\u00f3 Free F0</p> <p></p> <p>Verifiquem i acceptem:</p> <p></p> <p>Com sempre en Claves y productos \u00e9s on haurem de copiar el token i els entrypoint.</p> Enlla\u00e7os d'inter\u00e8s <ul> <li>Podem accedir a la documentaci\u00f3 r\u00e0pidament Inici r\u00e0pid amb Python</li> <li>Podem testejar la api desde aquesta p\u00e0gina *En aquest repositori de github podem trobar imatges de test </li> </ul> <p>Adem\u00e9s:</p> <ul> <li>Les peticions a aquests serveis, els podem fer be directament amb API request o be amb el SDK que ens ofereix Microsoft per a cada llenguatge. Escollirem aquesta \u00faltima opci\u00f3</li> </ul> <p>\u00a9 Materials basat en els de Javier Catal\u00e0 Desarrollo de aplicaciones inteligentes con Azure Cognitive Services</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/","title":"3. Computer Vision","text":""},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#1-computer-vision","title":"1. Computer Vision","text":"<p>Azure t\u00e9 b\u00e0sicament 2 serveis d'an\u00e0lisi d'imatges: </p> <ul> <li>Computer Vision\u2192 Analitza el contingut d'imatges i v\u00eddeos.</li> <li>Custom Vision\u2192 Ens permet personalitzar el reconeixement d'imatges per adaptar-lo a les nostres necessitats.</li> </ul> <p>Ens centrem de moment en computer vision. Computer Vision ens permet\u2192</p> <ul> <li> <p>Detectar elements en una imatge </p> </li> <li> <p>Obtenir les coordenades d'un rectangle que delimita l'\u00e0rea principal d'inter\u00e8s</p> </li> </ul> <p> * Ens permet fer miniatures centrant-nos nom\u00e9s en una zona d'inter\u00e8s.</p> <p> * Recon\u00e8ixer text impr\u00e8s o escrit a m\u00e0 en imatges i PDFs (OCR)</p> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#2-analisi-dimatges","title":"2. An\u00e0lisi d'imatges","text":"<p>Quan utilitzem la funcionalitat d'an\u00e0lisi d'imatge podrem sol\u00b7licitar al servei les caracter\u00edstiques seg\u00fcents\u2192</p> <ul> <li>Categoria \u2192 classificaci\u00f3 de la imatge dins una llista tancada de categories i subcategories.</li> <li>Etiquetes \u2192 llista de paraules rellevants per al contingut de la imatge. Es pot sol\u00b7licitar amb la funcionalitat Independent Tag Image.</li> <li>Descripci\u00f3 \u2192 genera una descripci\u00f3 de la imatge en una frase en llenguatge natural. Es pot sol\u00b7licitar amb la funcionalitat Independent Describe Image.</li> <li>Objectes \u2192 llista d'objectes trobats a la imatge, indicant per a cadascun el tipus d'objecte i les coordenades del rectangle que el delimita. Es pot sol\u00b7licitar amb la funcionalitat independent Detect Objects.</li> <li>Cares \u2192 llista de cares trobades a la imatge. Per a cada cara, se n'obt\u00e9 el rectangle associat, el g\u00e8nere i l'edat estimada.</li> <li>Color \u2192 color dominant (de primer pla i fons) i color d'\u00e8mfasi de la imatge. Tamb\u00e9 determina si la imatge \u00e9s blanc i negre.</li> <li>Marques \u2192 marques comercials reconegudes a la imatge.</li> <li>Adults \u2192 determina si el contingut de la imatge pot ser catalogat com contingut per a adults, pujat de to o violent.</li> <li>Tipus d'imatge \u2192 detecta si la imatge \u00e9s un dibuix o imatge predissenyada.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#21-creant-peticions","title":"2.1. Creant peticions","text":"Preparant la petici\u00f3 Python<pre><code>from azure.cognitiveservices.vision.computervision import ComputerVisionClient\nfrom azure.cognitiveservices.vision.computervision.models import VisualFeatureTypes\nfrom msrest.authentication import CognitiveServicesCredentials\n\n# Add your key and endpoint\nkey_computer_vision=\"XXX\"\nendpoint_computer_vision= \"https://XXX.cognitiveservices.azure.com/\"\nregion_computer_vision=\"eastus\"\n\n# Preparem les caracter\u00edstiques que vullguem\nvisual_features=[\n        VisualFeatureTypes.image_type,  # Could use simple str \"ImageType\"\n        VisualFeatureTypes.faces,      # Could use simple str \"Faces\"\n        VisualFeatureTypes.categories,  # Could use simple str \"Categories\"\n        VisualFeatureTypes.color,      # Could use simple str \"Color\"\n        VisualFeatureTypes.tags,       # Could use simple str \"Tags\"\n        VisualFeatureTypes.description,  # Could use simple str \"Description\"\n        VisualFeatureTypes.objects,     # Could use simple str \"Objects\"\n        VisualFeatureTypes.adult,    # Could use simple str \"Adult\"\n        VisualFeatureTypes.brands # Could use simple str \"Brands\"\n    ]\ncredentials = CognitiveServicesCredentials(key_computer_vision)\nclient = ComputerVisionClient(\n  endpoint=endpoint_computer_vision,\n  credentials=credentials)\n\n# fem la petici\u00f3\nimage_analysis = client.analyze_image(url_image,visual_features=visual_features)\n</code></pre> Info <p>La petici\u00f3 que ens ha perm\u00e9s efectuar l'an\u00e0lisi \u00e9s <code>client.analyze_image(url_image,visual_features=visual_features)</code>. Com podem veure:</p> <ul> <li>li pasem la url de la imatge a estudiar</li> <li>Li indiquem les caracter\u00edstiques que volem obtenir de la mateixa</li> <li>En compte de <code>analyze_image</code> podem cridar a <code>analyze_image_in_stream</code> passant-li la imatge pr\u00f2piament dita en compte de la url de la mateixa.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#22-processant-les-respostes","title":"2.2. Processant les respostes","text":"<p>El servei ens retornar\u00e0 un objecte del tipus <code>ImageAnalysis</code>, que contindr\u00e0, segons el demanat les seg\u00fcents claus, del tipus indicant: JSON<pre><code>{\n    'adult': AdultInfo,\n    'brands': [DetectedBrand],\n    'categories':[Category],\n    'color': ColorInfo,\n    'description': ImageDescriptionDetails,\n    'faces': [FaceDescription],\n    'imageType': ImageType,\n    'metadata': ImageMetadata,\n    'modelVersion': str,\n    'objects':[DetectedObject],\n    'requestId': str,\n    'tags': [ImageTag]\n  }\n</code></pre></p> <p>Pot consultar-se si tenim o no dits atributs:</p> <ul> <li><code>dir(objecte)</code> \u2192 Retorna una llista amb els nom i m\u00e8todes del objecte.</li> <li><code>hasattr(objecte, element)</code> \u2192  retorna <code>True</code> si l'objecte te dit element.</li> </ul> <p>Fixar-se que alguns atributs estan tancats entre claud\u00e0tors, el que significa que el valor retornat \u00e9s una llista, i tindrem per tant una col\u00b7lecci\u00f3 d'objectes, com per exemple s'han detectat diversos objectes.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#23-dibuixant-caixes-i-arees-dinteres","title":"2.3. Dibuixant caixes i \u00c0rees d'interes","text":"<p>Podem fer servir les llibreries de <code>matplotlib</code> combinades amb la llibreria <code>PIL</code> per a representar les imatges analitzades i afegir els mecanismes de detecci\u00f3.</p> <p>Una de les coses m\u00e9s habituals ser\u00e0 tancar en una caixa (rectangle) els objectes i cares detectades. \u00c9s per aix\u00f2 que tant els objectes <code>FaceDescription</code> com <code>DetectedObject</code> inclouen un atribut <code>rectangle</code>, amb les coordenades del vertex superior esquerre i l'alt i ample.</p> Dibuix de caixes sobre objectes <p>Pr\u00e8viament:</p> <ul> <li>s'ha carregat en la variable <code>img</code> la imatge a processar.</li> <li>El servei ens ha retornat l'estudi en la variable <code>analysis</code></li> </ul> Python<pre><code>import matplotlib.pyplot as plt\nfrom PIL import Image, ImageDraw\n\nfig = plt.figure(figsize=(16, 8))\n\nif analysis.objects:\nfor object in analysis.objects:\n    r = object.rectangle\n    bounding_box = ((r.x, r.y), (r.x + r.w, r.y + r.h))  # sup-esq a inf-dret\n    draw = ImageDraw.Draw(img)                           # dibuixem imatge sencera\n    draw.rectangle(bounding_box, outline='magenta', width=5)  # dibuixem caixa\n    plt.annotate(object.object_property,(r.x, r.y), backgroundcolor='magenta')   # etiqueta de la caixa\n\nplt.axis('off')\nplt.imshow(img)\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#24-exercici","title":"2.4 Exercici.","text":"<p>A partit d'una imatge que tinga 3 o 4 objectes ben diferenciats has de :</p> <ul> <li>P\u00e1ssala a Azure per a analitzar-la.</li> <li>A partir dels objectes que et retorna:</li> <li>Retalla cadascun dels objectes</li> <li>Guarda una imatge amb cada retall aconseguit</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#3-miniatures","title":"3. Miniatures","text":"<p>El servei de miniatures (thumbnail) no sols ens permet fer una versi\u00f3 redu\u00efda de la imatge que facilitem, sin\u00f2 el fer una miniatura del que es coneix com un retall intel\u00b7ligent o smart_croping.</p> <p>El m\u00e8tode que ens permet fer-ho \u00e9s <code>generate_thumbnail</code> o <code>generate_thumbnail_in_stream</code>:</p> <p>!!!   example \"Sint\u00e0xi del m\u00e8tode\"     Python<pre><code>def generate_thumbnail_in_stream(\n  self,\n  width: int,\n  height: int,\n  image: Any,\n  smart_cropping: bool = False,\n  ...\n</code></pre></p> Text Only<pre><code>Indicarem la dimensi\u00f3 que volem de la miniatura, passant la imatge (url o els bytes de la mateixa) i si volem fer un retall intel\u00b7ligent.\n</code></pre> <p>Aquesta operaci\u00f3 genera una imatge en miniatura amb l'amplada i l'al\u00e7ada especificades per l'usuari. Per defecte, el servei analitza la imatge, identifica la regi\u00f3 d'inter\u00e8s (ROI) i genera coordenades de retall intel\u00b7ligent basades en el ROI. El retall intel\u00b7ligent ajuda quan especifiqueu una relaci\u00f3 d'aspecte diferent de la de la imatge d'entrada. Una resposta correcta cont\u00e9 el binari de la imatge en miniatura. Si la sol\u00b7licitud ha fallat, la resposta cont\u00e9 un codi d'error i un missatge per ajudar a determinar qu\u00e8 ha fallat.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#4-ocr-des-dimatges","title":"4. OCR des d'imatges","text":"<p>En aquesta secci\u00f3 anem a extreure text de les nostres imatges, el que \u00e9s coneix com a OCR Optical Character Recognition. El text pot ser impres o manuscrit, aix\u00ed com les imatges poden estar online o passar-li nosaltres les pr\u00f2pies imatges.</p> <p>Abans de fer l'exemple anem a veure com fer una c\u00e0rrega adequada de les credencial, per a que no estiguen hard-coded dins del nostre programa. Les claus les guaradarem en un arxius de claus, en un simple format json:</p> JSON<pre><code>{\n  \"key_computer_vision\":\"la_teua_clau\",\n  \"endpoint_computer_vision\":\"https://el_teu_usuari_compvision.cognitiveservices.azure.com/\",\n  \"region_computer_vision\":\"la_teua_zona\"\n}\n</code></pre> <p>Aquest fitxer el carregarem a un document json nom\u00e9s iniciar el programa:</p> Python<pre><code>import json\n\nclaus={}\nwith open('claus.json') as json_file:\n    claus = json.load(json_file)\n</code></pre> <p>Anem a veure com quedaria ara la carrega de les credencials i la creaci\u00f3 del client respecta als anteriors exemples</p> Carregant el client Python<pre><code># Afegim les claus i punt de connexi\u00f3\nkey_computer_vision=claus['key_computer_vision']\nendpoint_computer_vision= claus['endpoint_computer_vision']\nregion_computer_vision=claus['region_computer_vision']\n\n# Creem les credencials\ncredentials = CognitiveServicesCredentials(key_computer_vision)\n\n# Carregem el client\nclient = ComputerVisionClient(\n    endpoint=endpoint_computer_vision,\n    credentials=credentials)\n</code></pre> <p>A continuaci\u00f3 necessitem carregar la imatge que tenim en un fitxer en un stream de bytes. Aquest stream \u00e9s el que enviarem mitjan\u00e7ant el nostre client al servidor de Azure:</p> Enviem les dades i recuperem la operaci\u00f3 Python<pre><code>import BytesIO\n# obrim la imatge i transformem a stream de bytes\nwith open(img_file, \"rb\") as image_file:\n    image_stream = BytesIO(image_file.read())\n\n# fem la petici\u00f3 a Azure\nread_response = client.read_in_stream(image=image_stream, language=\"es\",raw=True)\nread_operation_location = read_response.headers[\"Operation-Location\"]\noperation_id = read_operation_location.split(\"/\")[-1]\n</code></pre> <p>Azute no ens torna directament l'an\u00e0lisi de la imatge, sin\u00f2 una nova url amb l'identificador de la operaci\u00f3 (Operation-Location). Aquesta url te un aspecte com aquest:</p> <p>https://la_teua_urscompvision.cognitiveservices.azure.com/vision/v3.2/read/analyzeResults/43ba3fb1-8670-4151-bc1d-28986c068e79</p> <p>El que ens interessa agafar \u00e9s el codi a partir de la \u00faltima barra, per a demanar-li l'an\u00e0lisi de la imatge. Anem a veure el codi, explicat entre els comentaris </p> Arreplegant els resultats Python<pre><code># Agafem els resultats de l'an\u00e0lisi\nread_result = client.get_read_result(operation_id)\n\n# Aquest objecte te tants elements com blocs de text s'hagen trobat\n# Processem els resultats de l'an\u00e0lisi\nfor text_result in read_result.analyze_result.read_results:\n        # per a cada linia del text trobat\n        for line in text_result.lines:\n            # mostrem la linia\n            print(line.text)\n\n            # mostrem el bounding box\n            print(line.bounding_box)\n</code></pre> <p>Una possible eixida seria com la que es veu. De l'objecte <code>read_result.analyze_result.read_results</code> ens trobem una col\u00b7lecci\u00f3 d'objectes <code>line</code>, que tenen els seg\u00fcents atributs:</p> <ul> <li><code>text</code> \u2192 mostra el text reconegut</li> <li><code>bounding_box</code> Mostra les coordenades d'un pol\u00edgon (habitualment un rectangle) que tanca el text detectat. No ha de ser un rectangle, ja que el text pot no estar en horizontal.</li> </ul> Bash<pre><code>You must be the change you\n(254, 268, 671, 261, 672, 306, 255, 319)\nWish to see in the world !\n(326, 343, 692, 332, 694, 368, 327, 382)\n</code></pre> <p>Aix\u00ed, a partir d'aquesta imatge:</p> <p></p> <p>obtindrem alguna cosa com:</p> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#5-customvision","title":"5. CustomVision","text":"<p>Custom Vision d'Azure \u00e9s un servei de Microsoft que et permet construir, entrenar i implementar models de visi\u00f3 per computador personalitzats de manera senzilla i eficient. B\u00e0sicament, es tracta de proporcionar eines perqu\u00e8 puguis ensenyar al teu sistema a recon\u00e8ixer patrons visuals espec\u00edfics que siguin rellevants per al teu projecte o aplicaci\u00f3.</p> <p>L'aspecte personalitzat de Custom Vision significa que pots entrenar el model amb les teves pr\u00f2pies dades i requeriments, ajustant-lo al context espec\u00edfic del teu projecte. Aix\u00f2 fa que sigui una eina vers\u00e0til i aplicable a una \u00e0mplia gamma d'ind\u00fastries i casos d'\u00fas, des de la vigil\u00e0ncia fins a la classificaci\u00f3 d'imatges en comer\u00e7 electr\u00f2nic.</p> <p>Per utilitzar aquest servei haurem de fer dos passos:</p> <ol> <li>Entrenament del model</li> <li>\u00das del model per fer una predicci\u00f3.</li> </ol>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#51-entrenament-del-model","title":"5.1 Entrenament del model","text":"<p>Durant l\u00b4entrenament del model proporcionarem a Custom Vision imatges d\u00b4exemple amb l\u00b4etiqueta que aquestes imatges tenen associada. Com m\u00e9s exemples proporcionem dels diferents tipus d'imatges que volem recon\u00e8ixer, m\u00e9s precisi\u00f3 tindr\u00e0 el nostre model. Un cop subministrades les imatges, el model ha de ser entrenat perqu\u00e8 aprengui de les imatges aportades.</p> <p>A Custom Vision els models s'organitzen en projectes. Cada projecte s'utilitzar\u00e0 per a un domini espec\u00edfic, per\u00f2 es pot entrenar amb nous exemples i etiquetes les vegades que vulguem.   </p> <p>L'entrenament del model es pot fer des del portal https://customvision.ai o utilitzant l'API d'entrenament.</p> Molta cura <ul> <li>En Custom Vision els models s'organitzen en projectes, i en la capa gratu\u00efta sols ens permet tenir 2 projectes.</li> <li>Cada projecte pot ser entrenat amb nous exemples i etiquetes les vegades que vulguem.</li> </ul> <p>Despr\u00e9s d'entrenar el model, ens poden arribar noves fotos i podem voler incorporar aquestes imatges noves a una nova iteraci\u00f3 per millorar la predicci\u00f3. Cada cop que s'entreni el model se'n generar\u00e0 una nova versi\u00f3 (iteraci\u00f3), i a l'hora de predir es podr\u00e0 triar la iteraci\u00f3 a utilitzar.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#52-prediccio","title":"5.2 Predicci\u00f3","text":"<p>Un cop preparat i entrenat el nostre model, podrem fer-lo servir per fer una predicci\u00f3 a partir d'una imatge nova. Per aix\u00f2 utilitzarem l'API de predicci\u00f3 (Custom Vision - Prediction).</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#53-practica-detectem-un-conjunt-de-flors","title":"5.3 Pr\u00e0ctica - Detectem un conjunt de flors","text":"<p>El primer que hem de fer \u00e9s crear el recurs de Custom Vision de la mateixa manera que creem els recursos. Sols recorda de marcar  la tarifa d\u00a1aprenentatge i previsi\u00f3 <code>Free F0</code> que ens permet 2 peticions per segon en 2 projectes.</p> <p></p> <p>Un cop creat el recurs de Custom Vision, podr\u00e0s comprovar que en realitat se n'han creat dos, amb el mateix prefixe: un \u00e9s el model d'entrenament i l'altre el model de predicci\u00f3.</p> <p></p> <p>Tenir en compte que aix\u00ed com abans sols teniem una clau i un endpoint ara en tindrem per duplicat:</p> <ul> <li><code>VISION_TRAINING_KEY</code>, la clau del recurs d'entrenament.</li> <li><code>VISION_TRAINING_ENDPOINT</code>, la url d'entrenament.</li> <li><code>VISION_PREDICTION_KEY</code>, la clau del recurs de predicci\u00f3.</li> <li><code>VISION_PREDICTION_ENDPOINT</code>, la url del recurs de predicci\u00f3</li> <li><code>VISION_PREDICTION_RESOURCE_ID</code>, el id del recurs de predicci\u00f3.</li> </ul> Protegim les nostres claus <p>Per a aquesta pr\u00e0ctica no posarem els valors de les claus hardcoded al nostre codi, sin\u00f2 mitjan\u00e7ant variables d'entorn</p> Bash<pre><code># en windows\nsetx VISION_TRAINING_KEY your-training-key\n\n# en linux/mac (atenci\u00f3 al =)\nexport VISION_TRAINING_KEY=your-training-key\n</code></pre> <p>despr\u00e8s carregarem els valors de les variables d'entorn al nostre programa:</p> Python<pre><code>import os\n\ntraining_key = os.environ[\"VISION_TRAINING_KEY\"]\n</code></pre>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#531-entrenament-de-les-dades","title":"5.3.1. Entrenament de les dades","text":"<p>L'entrenament el podem efectuar desde el nostre codi, fent servir les llibreries del SDK de Python. La classe involucrada en l'entrenament de les imatges \u00e9s <code>CustomVisionTrainingClient</code>, i pots trobar informaci\u00f3 en aquest enlla\u00e7 sobre dita classe.</p> <p>Nosaltres per a l'entrenament farem servir la plataforma web https://www.customvision.ai/</p> <p></p> <p>Pots trobar informaci\u00f3 de com entrenar un model etiquetant i carregant a Azure mitjan\u00e7ant codi ac\u00ed. Aix\u00f2 ho demanarem en una pr\u00e0ctica posterior.</p> <p>Despr\u00e8s haurem de crear el projecte</p> <p></p> <ul> <li>Seleccionem com a recurs el que no acaba en prediction (per a entrenament).</li> <li>Tamb\u00e9 ens pregunta el tipus de projecte i tenim 2 opcions:</li> <li>Classificaci\u00f3: A partir d'una imatge intentem que ens digui de quin tipus \u00e9s. </li> <li>Detecci\u00f3 d'objectes: A partir d'una imatge podem detectar objectes diferenciant nom\u00e9s els que m'interessin a mi.</li> </ul> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#532-afegint-imatges-per-entrenar-el-model","title":"5.3.2 Afegint imatges per entrenar el model","text":"<p>Ara haurem d'afegir imatges per a entrenar el model. Resulta interessant fer el que us hauran comentat en altres moduls i tamb\u00e9 en aquest, de dividir les dades que tenim en un 80%-20% per a entrenament i per a test.</p> <p>Haurem de pujar els datasets per a cada etiqueta que volem crear</p> <p></p> <p></p> <p>Finalment tenim un boto que ens diur <code>Train</code>, que ens permet executar l'entrenament. Li direm de fer-lo r\u00e0pid (al voltant d'un hora), cas d'imatges m\u00e9s simples o avan\u00e7at, que trigar\u00e0 m\u00e9s temps (fins i tot dies). </p> <p>L'entrenament pot trigar una estona (segurament te per baix una xarxa neuronal convolucional) i en acabar moatrar\u00e0 un resum 3 mesures que normalment s'utilitzen per a l'aprenentatge autom\u00e0tic: Precision, Recall i AP. Ens diu la iteraci\u00f3 perqu\u00e8 si canvi\u00e9ssim alguna cosa (noves imatges, etiquetes,...) i torn\u00e9ssim a entrenar apareixeria una nova iteraci\u00f3.</p> <p></p> <p>Li indicarem tamb\u00e9 l'umbral que volem per a considerar com a v\u00e0lid</p> <p></p> <p>Finalment li donarem a publicar dins del nostre recurs de predicci\u00f3, i podrem veure les cap\u00e7aleres i claus per a fer-lo servir:</p> <p></p> <p>|</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/03_ComputerVision/#533-accedint-al-servei","title":"5.3.3 Accedint al servei","text":"<p>Ens resta el accedir al servei per a fer prediccions d'imatges, evident-ment amb les no utilitzades</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/04_Practiques/","title":"1 Qu\u00e8 estem escoltant?","text":"<p>Fer un programa amb una GUI dissenyada amb flet, en la qual es demana textos escrits. Amb un bot\u00f3 demanarem a Azure que ens diga en quin idioma est\u00e0 dit text. Posteriorment farem una crida per a que ens el transforme a \u00e0udio, guardant-lo en wav o mp3. El programa reproduir\u00e0 dit \u00e0udio.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/04_Practiques/#2-com-de-saludables-son-elements","title":"2 Com de saludables son elements?","text":"<p>Volem a partir de la fotografia dels valors energ\u00e8tics d'un producte</p> <p></p> <p>Passar un OCR que ens busque les quantitats per calcular el fam\u00f2s nutriscore amb la f\u00f3rmula que segueix:</p> <p>:</p> <p></p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/04_Practiques/#3-prediccio-dimatges-lliure","title":"3 Predicci\u00f3 d'imatges (Lliure)","text":"<p>Crea una aplicaci\u00f3 servidora que escoltara peticions des d'un client. El client ens enviar\u00e0 una imatge, que ser\u00e0 recollida des del nostre servidor.</p> <p>El servidor haur\u00e0 de classificar-la amb un servei creat pr\u00e8viamnet amb Azure de manera similar a l'apartat 5.3</p> <p>La informaci\u00f3 en l'element detectat ser\u00e0 retornada a l'aplicaci\u00f3 client.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/04_Practiques/#4-traduccio-automatica-de-manuscrits","title":"4 Traducci\u00f3 autom\u00e0tica de manuscrits","text":"<p>Crea una aplicaci\u00f3 amb Flet que utilitze la c\u00e0mera web per capturar imatges de text manuscrit. Aquestes imatges s\u2019enviaran a AWS Textract per a la seva an\u00e0lisi i reconeixement de text. El text que ens reconega, s'enviar\u00e0 de nou a AWS Translate per a la seua traducci\u00f3a l\u2019idioma seleccionat per l\u2019usuari a trav\u00e9s de la interf\u00edcie.</p> <ul> <li>Interf\u00edcie d\u2019Usuari (UI):</li> <li>Activar la c\u00e0mera web.</li> <li>Prendre una fotografia del text manuscrit.</li> <li>Seleccionar l\u2019idioma de dest\u00ed per a la traducci\u00f3.</li> <li> <p>Visualitzar el text tradu\u00eft.</p> </li> <li> <p>Integraci\u00f3 amb AWS Textract:</p> </li> <li>Configurar una connexi\u00f3 amb AWS Textract.</li> <li>Enviar la imatge capturada a AWS Textract per a l\u2019an\u00e0lisi de text.</li> <li> <p>Recuperar el text reconegut des de AWS Textract.</p> </li> <li> <p>Traducci\u00f3:</p> </li> <li>Configurar una conexi\u00f3 amb AWS Translate.</li> <li> <p>Traduir el text reconegut a l'idioma seleccionat per l\u2019usuari.</p> </li> <li> <p>Prova i Validaci\u00f3:</p> </li> <li>Realitzar proves per assegurar-se que l\u2019aplicaci\u00f3 funciona correctament, validant la precisi\u00f3 del text reconegut i la traducci\u00f3.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/04_Practiques/#entrega","title":"Entrega:","text":"<ul> <li>Codi font de l\u2019aplicaci\u00f3 Flet.</li> <li>Captures de proves i validaci\u00f3.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <ul> <li>Azure Cognitive Services</li> <li></li> <li>AWS</li> <li>IBM Watson</li> <li> <p>...</p> </li> <li> <p>Projecte</p> </li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/Gestionant_Credencials/","title":"Gesti\u00f3 de credencials","text":"<p>Des dels nostres programes haurem d'accedir a serveis externs, al qual devem d'estar registrats i per tant tindre unes credencials, per\u00f2, com posem eixes credencials als nostres programes. </p> <p>El que no hem de posar mai son coses com:</p> Python<pre><code>usuari=\"middle\"\npassword=\"T0mm@\"\ntoken=\"rj8539cdea89_Ff\"\n</code></pre> <p>Posar les credencials directament al codi com en l'exemple que has proporcionat pot ser problem\u00e0tic per diverses raons:</p> <ol> <li> <p>Manca de Seguretat: fa que sigui f\u00e0cil per a alg\u00fa que tingui acc\u00e9s al codi veure i utilitzar aquestes credencials. </p> </li> <li> <p>Dificultat per a la Gesti\u00f3 de Credencials: \u00c9s dif\u00edcil de canviar o actualitzar-les quan sigui necessari. Si les credencials canviessin (per exemple, per raons de seguretat), hauries de modificar manualment el codi, el que pot ser propens a errors i cost\u00f3s en termes de temps (hard-coded). </p> </li> <li> <p>Problemes de Manteniment: Les credencials poden estar disperses per tot el codi i \u00e9s dif\u00edcil de seguir-les.</p> </li> <li> <p>Risc d'Exposici\u00f3 Accidental: Si el teu codi s'ha de compartir o publicar, hi ha un risc d'exposar les credencials accidentalment. Aix\u00f2 pot oc\u00f3rrer, per exemple, si compartissis el codi en un repositori p\u00fablic de GitHub sense adonar-te que les credencials estan incloses al codi.</p> </li> </ol> <p>Per evitar aquests problemes, \u00e9s millor utilitzar variables d'entorn o altres m\u00e8todes segurs.</p>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/Gestionant_Credencials/#utilitza-variables-dentorn","title":"Utilitza Variables d'Entorn:","text":"<p>La millor manera de manejar dades sensibles com ara contrasenyes en el teu codi de Python \u00e9s utilitzant variables d'entorn. Aix\u00f2 et permet emmagatzemar les dades de manera segura fora del teu codi i fer refer\u00e8ncia a elles des del codi.</p> <p>Aqu\u00ed tens una manera senzilla de fer-ho:</p> <ol> <li>Defineix les variables d'entorn amb les teves credencials:</li> </ol> Bash<pre><code>export NOM_USUARI=\"el_teu_usuari\"\nexport CONTRASENYA=\"la_teva_contrasenya\"\n</code></pre> <ol> <li>Des del teu codi de Python, pots accedir a aquestes variables d'entorn utilitzant la llibreria <code>os</code>:</li> </ol> Python<pre><code>import os\n\nnom_usuari = os.environ.get(\"NOM_USUARI\")\ncontrasenya = os.environ.get(\"CONTRASENYA\")\n\n# Ara pots utilitzar 'nom_usuari' i 'contrasenya' en el teu codi\n</code></pre> <ol> <li>Quan s'executa el codi, les variables d'entorn es carregaran i el teu codi les utilitzar\u00e0 sense haver de fer-ho hard-coded dins del teu script.</li> </ol>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/Gestionant_Credencials/#2-utilitza-la-llibreria-python-dotenv","title":"2. Utilitza la Llibreria <code>python-dotenv</code>:","text":"<p>El problema de l'anterior m\u00e8tode \u00e9s que hem de fer les exportacions de les variables d'entorn cada cop, i aix\u00f2 implica en cada execuci\u00f3, sobretot en terminals distintes. Recorda que les variables d'entorn es reinicien quan es tanca la sessi\u00f3, cosa que ocorre al tancar la terminal.</p> <p>Amb aquesta llibreria el que hem de fer \u00e9s:</p> <ul> <li>Crear a un arxiu (sempre amb el mateix nom) <code>.env</code> una col\u00b7lecci\u00f3 de l\u00ednies <code>variable=valor</code></li> <li>La llibreria transfereix dites definicions a la terminal d'execuci\u00f3.</li> <li>Ja podem carregar les variables desde l'entor an programa amb la llibreria <code>os</code> de la mateixa manera que abans</li> </ul> <p>Aix\u00f2 fa que siga molt f\u00e0cil d'utilitzar i integrar.</p> Exemple d'\u00fas d'Arxiu <code>.env</code> Bash<pre><code>NOM_USUARI=el_teu_usuari\nCONTRASENYA=la_teva_contrasenya\n</code></pre> Python<pre><code>import os\nfrom dotenv import load_dotenv\n\n# Carrega les variables d'entorn des del fitxer .env\nload_dotenv()\n\n# Obt\u00e9 les credencials dels variables d'entorn\nnom_usuari = os.getenv(\"NOM_USUARI\")\ncontrasenya = os.getenv(\"CONTRASENYA\")\n\n# Ara pots fer servir 'nom_usuari' i 'contrasenya' al teu codi\nprint(\"Nom d'usuari:\", nom_usuari)\nprint(\"Contrasenya:\", contrasenya)\n</code></pre> Molta atenci\u00f3 <ul> <li>Mant\u00e9n el fitxer <code>.env</code> fora del control de versions per evitar exposar les credencials.</li> <li>No compartisques les credencials amb altres persones i mant\u00e9n-les segures.</li> <li>Actualitza les credencials regularment per mantenir la seguretat.</li> </ul>"},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/exercicis/01_TascaComputerVision/","title":"01 TascaComputerVision","text":""},{"location":"U05%20Programaci%C3%B3%20d%27Apps%20d%27IA/exercicis/01_TascaComputerVision/#decripcio-de-la-imatge","title":"Decripci\u00f3 de la imatge","text":"<p>A l'activitat entregable d'aquesta pr\u00e0ctica utilitzarem el servei Computer Vision per generar una p\u00e0gina HTML relacionada amb la imatge a partir d'una imatge. La p\u00e0gina haur\u00e0 de contenir:</p> <ul> <li>La descripci\u00f3 de la imatge (\u00fanicament la frase que la descriu).</li> <li>La imatge original i dues miniatures de la imatge (una en format vertical i una altra en format horitzontal).</li> <li>Les etiquetes associades a la imatge.</li> <li>El text contingut a la imatge, en cas que n'hi hagu\u00e9s.</li> <li>El color de fons de la p\u00e0gina ser\u00e0 el color d'\u00e8mfasi de la imatge (accentColor)</li> </ul> <p>La p\u00e0gina es pot generar de dues maneres:</p> <ul> <li>Escrivint l'HTML en un fitxer des del codi de la nostra aplicaci\u00f3. </li> <li>Escrivint l'HTML a la consola, i redirigint la sortida de l'execuci\u00f3 a un fitxer (per exemple, <code>programa &gt; sortida.html</code>).</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/","title":"1. Computer Vision","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#1-introduccio-a-opencv-i-pil-python-imaging-library","title":"1. Introducci\u00f3 a OpenCV i PIL (Python Imaging Library):","text":"<p>OpenCV (Open Source Computer Vision) i PIL (Python Imaging Library) s\u00f3n dues potents llibreries de processament d'imatges en Python que ofereixen funcionalitats complement\u00e0ries per a l'an\u00e0lisi, la manipulaci\u00f3 i la millora d'imatges. Aquestes eines s\u00f3n essencials en diverses aplicacions, des del desenvolupament d'algoritmes de visi\u00f3 per computadora fins a la creaci\u00f3 d'eines de processament d'imatges en projectes d'intel\u00b7lig\u00e8ncia artificial.</p> <p>OpenCV</p> <p>OpenCV \u00e9s una llibreria de visi\u00f3 per computadora de codi obert, proporciona una \u00e0mplia varietat de funcions per al processament d'imatges i v\u00eddeo. Amb suport per a m\u00faltiples plataformes i llenguatges de programaci\u00f3, OpenCV facilita tasques com la detecci\u00f3 d'objectes, el seguiment de moviments, el reconeixement facial i la calibraci\u00f3 de c\u00e0meres. La seva flexibilitat i efici\u00e8ncia fan que sigui una elecci\u00f3 popular en el desenvolupament d'aplicacions relacionades amb la visi\u00f3 per computadora.</p> <p>Instal\u00b7lar OpenCV</p> Bash<pre><code>pip install opencv-python\n</code></pre> <p>Documentaci\u00f3 completa a https://docs.opencv.org/</p> <p>PIL</p> <p>PIL, tamb\u00e9 coneguda com a Pillow, \u00e9s una llibreria que ofereix eines robustes per a la manipulaci\u00f3 d'imatges a Python. Tot i que ha estat substitu\u00efda per Pillow en termes de desenvolupament actiu, PIL encara es menciona pel seu llegat. Pillow mant\u00e9 la compatibilitat amb el codi PIL existent i afegeix noves caracter\u00edstiques. Aquesta llibreria \u00e9s ideal per a operacions b\u00e0siques com obrir, manipular i desar imatges en diversos formats.</p> <p>Instal\u00b7lar Pillow</p> Bash<pre><code>pip install pillow\n</code></pre> <p>Documentaci\u00f3 completa a https://pillow.readthedocs.io/en/latest/handbook/index.html</p> <p>Combinant OpenCV i PIL:</p> <p>La combinaci\u00f3 d'OpenCV i PIL aprofita el millor de totes dues llibreries. OpenCV ofereix algoritmes avan\u00e7ats i t\u00e8cniques de visi\u00f3 per computadora, mentre que PIL proporciona funcions addicionals per al processament b\u00e0sic i la manipulaci\u00f3 eficient d'imatges. La integraci\u00f3 d'aquestes dues eines permet als desenvolupadors abordar una \u00e0mplia gamma de reptes en el processament d'imatges, des de tasques senzilles fins a projectes m\u00e9s complexos que requereixen funcions especialitzades.</p> <p>En aquest apartat, explorar\u00e0s com aprofitar de manera sin\u00e8rgica OpenCV i PIL per a maximitzar la teva capacitat per treballar amb imatges a Python, obtenint aix\u00ed una base s\u00f2lida per abordar projectes relacionats amb el processament d'imatges i la intel\u00b7lig\u00e8ncia artificial.</p> <p>Primer, aprendr\u00e0s el seg\u00fcent:</p> <ul> <li>Llegir una imatge</li> <li>Comprovar els atributs de la imatge com ara el tipus de dades i la forma</li> <li>Representaci\u00f3 de matriu d'una imatge en <code>Numpy</code></li> <li>Imatges en color i separaci\u00f3/fusi\u00f3 de canals d'imatge</li> <li>Mostrar imatges utilitzant <code>matplotlib</code></li> <li>Desar imatges</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#2-operacions-basiques-amb-imatges","title":"2. Operacions basiques amb imatges","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#21-obrint-la-imatge","title":"2.1. Obrint la imatge","text":"<p>OpenCV permet llegir diferents tipus d'imatges (JPG, PNG, etc). Pots carregar imatges en escala de grisos, imatges en color o tamb\u00e9 pots carregar imatges amb canal Alpha. Utilitza la funci\u00f3 <code>cv2.imread()</code> que t\u00e9 la seg\u00fcent sintaxi <code>img = cv2.imread(filename[,flags] )</code>, on:</p> <ul> <li><code>img</code>: \u00c9s la imatge si es carrega amb \u00e8xit. En cas contrari, \u00e9s <code>None</code>. Aix\u00f2 pot succeir si el nom del fitxer \u00e9s incorrecte o si el fitxer est\u00e0 corrupte.</li> <li><code>filename</code>: Pot ser una ruta absoluta o relativa. Aquest \u00e9s un argument obligatori.</li> <li> <p><code>flags</code>: Aquestes banderes s'utilitzen per llegir una imatge en un format particular (per exemple, escala de grisos/color/amb canal alfa). Aquest \u00e9s un argument opcional amb un valor per defecte de <code>cv2.IMREAD_COLOR</code> o <code>1</code>, que carrega la imatge com a imatge en color. Algunes de les <code>flags</code> disponibles:</p> <ol> <li><code>cv2.IMREAD_GRAYSCALE</code>: Carrega la imatge en mode d'escala de grisos.</li> <li><code>cv2.IMREAD_COLOR</code>: Carrega una imatge en color. Qualsevol transpar\u00e8ncia de la imatge ser\u00e0 ignorada. \u00c9s la bandera per defecte.</li> <li><code>cv2.IMREAD_UNCHANGED</code>: Carrega la imatge tal com \u00e9s, incloent el canal alfa.</li> </ol> </li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#22-mostrant-atributs","title":"2.2. Mostrant atributs","text":"<p>Analitza el seg\u00fcent bloc de codi:</p> <p>Mostrant la imatge</p> Python<pre><code>#  mostrem les dimensions\nprint(\"Image size (H, W) is:\", img.shape)\n\n# mostrem els tipus de dades\nprint(\"Data type of image is:\", img.dtype)\n\n# imprimim la imatge\nprint(img)\n\n# La mostrem... per\u00f2\nplt.imshow(img)\n\n# En escala de grisos\nplt.imshow(img, cmap=\"gray\")\n</code></pre> <p>Les ixides seran algo com:</p> <p> </p> <p>Si la imatge llegida \u00e9s en color, aix\u00f2 ens crear\u00e0 un array de numpy tridimensional, on cada p\u00edxel \u00e9s una combinaci\u00f3 de 3 canals RGB</p> <p>Separant els canal de la imatge</p> Python<pre><code># Split the image into the B,G,R components\nimg_NZ_bgr = cv2.imread(\"New_Zealand_Lake.jpg\", cv2.IMREAD_COLOR)\n\nb, g, r = cv2.split(img_NZ_bgr)\n\n# Show the channels\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 6))\naxes = axes.flatten()\n\naxes[0].imshow(r, cmap=\"gray\");axes[0].set_title(\"Canal Red\")\naxes[1].imshow(g, cmap=\"gray\");axes[1].set_title(\"Canal Green\")\naxes[2].imshow(b, cmap=\"gray\");axes[2].set_title(\"Canal Blue\")\n\nimgMerged = cv2.merge((r, g, b))\naxes[3].imshow(imgMerged);axes[3].set_title(\"Merged Output\")\n\n# Ajustar el espaciado entre los subplots\nplt.tight_layout()\n\n# Mostrar la figura\nplt.show()\n</code></pre> <p>Quedant el resultat com segueix:</p> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#23-espais-de-colors","title":"2.3. Espais de colors","text":"<p>La funci\u00f3 <code>cv2.cvtColor()</code> Converteix una imatge d'un espai de colors a un altre. La funci\u00f3 converteix una imatge d'un espai de colors d'entrada a un altre. En cas d'una transformaci\u00f3 des-de l'espai de colors RGB, l'ordre dels canals s'ha d'especificar expl\u00edcitament (RGB o BGR). </p> <p>Cal tenir en compte que el format de color per defecte a OpenCV sovint es denomina RGB, per\u00f2 en realitat \u00e9s BGR (els bytes estan invertits). Per tant, el primer byte en una imatge de color est\u00e0ndard (de 24 bits) ser\u00e0 un component Blau de 8 bits, el segon byte ser\u00e0 Verd i el tercer byte ser\u00e0 Vermell. El quart, cinqu\u00e8 i sis\u00e8 bytes serien llavors el segon p\u00edxel (Blau, despr\u00e9s Verd, despr\u00e9s Vermell), i aix\u00ed successivament.</p> <p><code>dst = cv2.cvtColor(src,code)</code> on:</p> <ul> <li><code>dst</code>: \u00c9s la imatge de sortida amb la mateixa mida i profunditat que <code>src</code>.</li> <li><code>src</code>: Imatge d'entrada</li> <li><code>code</code>: Codi de conversi\u00f3 de l'espai de colors (vegeu ColorConversionCodes).</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#24-guardant-imatges","title":"2.4. Guardant imatges","text":"<p>Guardar la imatge \u00e9s tan senzill com llegir una imatge a OpenCV. Utilitzem la funci\u00f3 <code>cv2.imwrite()</code> amb dos arguments. El primer \u00e9s el nom del fitxer i el segon \u00e9s l'objecte imatge.</p> <p>La funci\u00f3 imwrite guarda la imatge al fitxer especificat. El format de la imatge es tria en funci\u00f3 de l'extensi\u00f3 del nom del fitxer. En general, nom\u00e9s es poden guardar imatges de 8 bits de canal \u00fanic o de 3 canals (amb ordre de canals 'BGR') utilitzant aquesta funci\u00f3 </p> <p>La funci\u00f3 \u00e9s <code>cv2.imwrite( filename, img[, params] )</code>, on:</p> <ul> <li><code>filename</code>: \u00e9s el nom del fitxer amb l'extensi\u00f3</li> <li><code>img</code>: \u00e9s la imatge que tenim carregada en mem\u00f2ria</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#3-manipulacio-basica-imatges","title":"3. Manipulaci\u00f3 b\u00e0sica imatges","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#31-accedint-a-pixels-individuals","title":"3.1. Accedint a p\u00edxels individuals","text":"<p>Veurem com accedir a un p\u00edxel de la imatge. Donat que al carregar la imatge, \u00e9s una matriu numpy, has d'utilitzar la notaci\u00f3 de matriu com <code>img[f,c]</code>, on <code>f</code> \u00e9s el n\u00famero de fila i <code>c</code> \u00e9s el n\u00famero de columna. Tamb\u00e9 cal tenir en compte que la matriu comen\u00e7a a l'\u00edndex 0.</p> <p>Per exemple, si vols accedir al primer p\u00edxel, has de especificar img[0,0], per\u00f2:</p> <ul> <li>si la imatge \u00e9s en escala de grisos, tindr\u00e0s un valor enter entre 0 i 255</li> <li>si la imatge \u00e9s en color, tindr\u00e0s un array de 3 valors entre 0 i 255, amb els valors BGR.</li> </ul> <p>Atenci\u00f3: coordenades</p> <p></p> <p>Vigila que cada llibreria pot diferir com avalua les coordenades. En openCV el punt (0,0) \u00e9s el de dalt a l'esquerre i:</p> <ul> <li>Les x van cap a la dreta</li> <li>Les y van cap a baix</li> </ul> <p>Dibuixem diagonals</p> Python<pre><code>img_orig = cv2.imread(\"checkerboard_18x18.png\", cv2.IMREAD_GRAYSCALE)\n\nimg_mod=img_orig.copy()   #sino modifiquem les dos\n\n# dibuixem les dos diagonals\nfor i in range(img_orig.shape[0]):\n  img_mod[i,i]=128                      #diagonal principal\n  img_mod[img_orig.shape[0]-i-1,i]=128  #diagonal inversa\n\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))\naxes = axes.flatten()\n\naxes[0].imshow(img_orig, cmap=\"gray\");axes[0].set_title(\"Original\")\naxes[1].imshow(img_mod, cmap=\"gray\");axes[1].set_title(\"Modificada\")\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#32-retallant-crop","title":"3.2. Retallant (crop)","text":"<p>El fet de retallar una imatge no \u00e9s me seleccionar una porci\u00f3 de la mateixa. Donat que una imatge \u00e9s una matriu Numpy, ho farem amb els rangs de selecci\u00f3 d'imatges, \u00e9s a dir l'operador dos punt.</p> <p>Seleccionem el barco</p> Python<pre><code>img_NZ_bgr = cv2.imread(\"New_Zealand_Boat.jpg\", cv2.IMREAD_COLOR)\nimg_NZ_rgb = img_NZ_bgr[:, :, ::-1]   # a RGB\n\nboat=img_NZ_rgb[200:400,200:600].copy()\n\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))\naxes = axes.flatten()\n\naxes[0].imshow(img_NZ_rgb);axes[0].set_title(\"Original\")\naxes[1].imshow(boat);axes[1].set_title(\"Modificada\")\n</code></pre> <p></p> Divideix una imatge en 4 porcions, 2 dalt i dos baix Python<pre><code>img_NZ_bgr = cv2.imread(\"New_Zealand_Boat.jpg\", cv2.IMREAD_COLOR)\nimg_NZ_rgb = img_NZ_bgr[:, :, ::-1]\n\n(height,width,col)=img_NZ_rgb.shape\n\nimg_0=img_NZ_rgb[:height//2,:width//2].copy()\nimg_1=img_NZ_rgb[height//2:,:width//2].copy()\nimg_2=img_NZ_rgb[:height//2,width//2:].copy()\nimg_3=img_NZ_rgb[height//2:,width//2:].copy()\n\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 12))\naxes = axes.flatten()\n\naxes[0].imshow(img_0);axes[0].set_title(\"Dalt Esquerre\")\naxes[1].imshow(img_2);axes[1].set_title(\"Dalt Dreta\")\naxes[2].imshow(img_1);axes[2].set_title(\"Baix Esquerre\")\naxes[3].imshow(img_3);axes[3].set_title(\"Baix Dreta\")\n\nplt.tight_layout()\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#33-canviant-les-dimensions","title":"3.3. Canviant les dimensions","text":"<p>La funci\u00f3 <code>resize</code> redimensiona la imatge <code>src</code> cap avall o cap amunt fins a la mida especificada. La mida i el tipus es deriven de <code>src</code>, <code>dsize</code>, <code>fx</code> i <code>fy</code>.</p> <p>La sintaxi \u00e9s <code>dst = resize( src, dsize[, dst[, fx[, fy[, interpolation]]]] )</code>, on:</p> <ul> <li><code>dst</code>: imatge de sortida; t\u00e9 la mida <code>dsize</code> (quan \u00e9s diferent de zero) o la mida calculada a partir de <code>src.size()</code>, <code>fx</code> i <code>fy</code>.</li> <li><code>src</code>: imatge d'entrada</li> <li><code>dsize</code>: mida de la imatge de sortida</li> <li> <p>Opcionalment:</p> </li> <li> <p><code>fx</code>: factor d'escala a l'eix horitzontal; quan \u00e9s igual a 0, es calcula com <code>(\ud835\ude8d\ud835\ude98\ud835\ude9e\ud835\ude8b\ud835\ude95\ud835\ude8e)\ud835\ude9c\ud835\ude92\ud835\udea3\ud835\ude8e.\ud835\udea0\ud835\ude92\ud835\ude8d\ud835\ude9d\ud835\ude91/\ud835\ude9c\ud835\ude9b\ud835\ude8c.\ud835\ude8c\ud835\ude98\ud835\ude95\ud835\ude9c</code></p> </li> <li><code>fy</code>: factor d'escala a l'eix vertical; quan \u00e9s igual a 0, es calcula com <code>(\ud835\ude8d\ud835\ude98\ud835\ude9e\ud835\ude8b\ud835\ude95\ud835\ude8e)\ud835\ude8d\ud835\ude9c\ud835\ude92\ud835\udea3\ud835\ude8e.\ud835\ude91\ud835\ude8e\ud835\ude92\ud835\ude90\ud835\ude91\ud835\ude9d/\ud835\ude9c\ud835\ude9b\ud835\ude8c.\ud835\ude9b\ud835\ude98\ud835\udea0\ud835\ude9c</code></li> </ul> <p>Reescalem una imatge</p> Python<pre><code>img_NZ_bgr = cv2.imread(\"New_Zealand_Boat.jpg\", cv2.IMREAD_COLOR)\nimg_NZ_rgb = img_NZ_bgr[:, :, ::-1]\n\nboat=img_NZ_rgb[200:400,200:600].copy()\nboat_2x_2x=cv2.resize(boat,None,fx=2,fy=2)\nboat_2x_1x=cv2.resize(boat,None,fx=2,fy=1)\nboat_1x_2x=cv2.resize(boat,None,fx=1,fy=2)\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 6))\naxes = axes.flatten()\n\naxes[0].imshow(boat);axes[0].set_title(\"Original \"+str(boat.shape))\naxes[1].imshow(boat_2x_1x);axes[1].set_title(\"Doble llarg \"+str(boat_2x_1x.shape))\naxes[2].imshow(boat_1x_2x);axes[2].set_title(\"Doble alt \"+str(boat_1x_2x.shape))\naxes[3].imshow(boat_2x_2x);axes[3].set_title(\"Doble doble \"+str(boat_2x_2x.shape))\n\nplt.tight_layout()\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#34-rotacions","title":"3.4. Rotacions","text":"<p>La funci\u00f3 <code>flip</code> inverteix l'array de tres maneres diferents (els \u00edndexs de files i columnes comencen per 0). La sintaxi \u00e9s <code>dst = cv.flip(src, flipCode)</code>:</p> <ul> <li> <p><code>dst</code>: array de sortida amb la mateixa mida i tipus que src. Els arguments s\u00f3n:</p> <ul> <li><code>src</code>: imatge d'entrada</li> <li><code>flipCode</code>: un indicador per especificar com voltejar l'array:</li> <li>Un valor de 0 significa voltejar al voltant de l'eix <code>x</code></li> <li>Un valor positiu (per exemple, 1) significa voltejar al voltant de l'eix <code>y</code>.</li> <li>Un valor negatiu (per exemple, -1) significa voltejar al voltant dels dos eixos.</li> </ul> </li> </ul> <p>Basicament hem d'entendre el flip o rotaci\u00f3 com l'invertir la imatge com un espill. \u00c9s l'efecte que ha de solventar-se quan fem una foto selfie.</p> <p>Diverses rotacions</p> Python<pre><code>cola=cv2.imread(\"coca-cola-logo.png\", cv2.IMREAD_COLOR)\ncola=cv2.cvtColor(cola,cv2.COLOR_BGR2RGB)\n\ncola_flip_H=cv2.flip(cola,1)\ncola_flip_V=cv2.flip(cola,0)\ncola_flip_HV=cv2.flip(cola,-1)\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 6))\naxes = axes.flatten()\n\naxes[0].imshow(cola);axes[0].set_title(\"Original \")\naxes[1].imshow(cola_flip_H);axes[1].set_title(\"Flop Horizontal\")\naxes[2].imshow(cola_flip_V);axes[2].set_title(\"Flip Vertical\")\naxes[3].imshow(cola_flip_HV);axes[3].set_title(\"Flip Horizontal i Vertical\")  \n\nplt.tight_layout()\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#4-anotant-imatges","title":"4. Anotant imatges","text":"<p>Una de les operacions que mes farem \u00e9s el ressaltar parts de les imatges. Afegir algun text, enquadrar una cara, encerclar un objecte son tasques habituals a fer.</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#41-linies","title":"4.1. L\u00ednies","text":"<p>Comencem dibuixant una l\u00ednia en una imatge. Utilitzarem la funci\u00f3 <code>cv2.line</code> per a aix\u00f2, la sintaxi de la qual \u00e9s <code>img_out = cv2.line(img_in, pt1, pt2, color[, thickness[, lineType[, shift]]])</code>, on:</p> <ul> <li> <p><code>img_out</code>: La imatge de sortida que contindr\u00e0 l'anotaci\u00f3, i com a par\u00e0metres:</p> </li> <li> <p><code>img_in</code>: Imatge en la qual dibuixarem una l\u00ednia.</p> </li> <li><code>pt1</code>: Primer punt, ubicaci\u00f3 (x, y) del segment de l\u00ednia.</li> <li><code>pt2</code>: Segon punt del segment de l\u00ednia.</li> <li><code>color</code>: Color de la l\u00ednia que es dibuixar\u00e0.</li> <li><code>thickness</code>: Enter que especifica l'amplada de la l\u00ednia. El valor per defecte \u00e9s 1.</li> <li><code>lineType</code>: Tipus de l\u00ednia. El valor per defecte \u00e9s 8, que representa una l\u00ednia de 8 connexions. Normalment, s'utilitza cv2.LINE_AA (l\u00ednia antialiasing o suau) per al lineType.</li> </ul> <p>M\u00e9s informaci\u00f3 a la web oficial.</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#42-cercles","title":"4.2. Cercles","text":"<p>Utilitzarem la funci\u00f3 <code>cv2.circle</code> per a aix\u00f2. La sintaxi \u00e9s <code>img_out = cv2.circle(img_in, center, radius, color[, thickness[, lineType[, shift]]])</code>, on:</p> <ul> <li> <p><code>img_out</code>: La imatge de sortida que ha estat anotada, i els arguments s\u00f3n:</p> </li> <li> <p><code>img_in</code>: Imatge en la qual dibuixarem un cercle.</p> </li> <li><code>center</code>: Centre del cercle <code>(x, y)</code> .</li> <li><code>radius</code>: Radi del cercle.</li> <li><code>color</code>:  Color del cercle que es dibuixar\u00e0.</li> <li><code>thickness</code>: Gruix del contorn del cercle (si \u00e9s positiu). Si s'indica un valor negatiu per a aquest argument, es dibuixar\u00e0 un cercle ple.</li> <li><code>lineType</code>:  Tipus de l\u00ednia del contorn del cercle. </li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#43-rectangles","title":"4.3. Rectangles","text":"<p>Utilitzarem la funci\u00f3 <code>cv2.rectangle</code> per dibuixar un rectangle en una imatge. La sintaxi de la funci\u00f3 \u00e9s la seg\u00fcent <code>img_out = cv2.rectangle(img_in, pt1, pt2, color[, thickness[, lineType[, shift]]])</code> on:</p> <ul> <li> <p><code>img_out</code>: La imatge de sortida que ha estat anotada.</p> </li> <li> <p><code>img_in</code>: Imatge en la qual es dibuixar\u00e0 el rectangle.</p> </li> <li> <p><code>pt1</code>: V\u00e8rtex del rectangle. Normalment, utilitzem el v\u00e8rtex superior esquerra aqu\u00ed.</p> </li> <li><code>pt2</code>: V\u00e8rtex del rectangle oposat a <code>pt1</code>. Normalment, utilitzem el v\u00e8rtex inferior dret aqu\u00ed.</li> <li><code>color</code>: Color del rectangle.</li> <li><code>thickness</code>: Gruix del contorn del rectangle (si \u00e9s positiu). Si s'indica un valor negatiu per a aquest argument, es dibuixar\u00e0 un rectangle ple.</li> <li><code>lineType</code>: Tipus de l\u00ednia del contorn del rectangle. \u00c9s el mateix argument lineType que s'utilitza en cv2.line.</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#44-texts","title":"4.4. Texts","text":"<p>Finalment, veurem com podem escriure text en una imatge utilitzant la funci\u00f3 cv2.putText. La sintaxi \u00e9s <code>img_out = cv2.putText(img_in, text, org, fontFace, fontScale, color[, thickness[, lineType[, bottomLeftOrigin]]])</code>, on:</p> <ul> <li><code>img_out</code>: La imatge de sortida que ha estat anotada.</li> <li><code>img_in</code>: Imatge en la qual s'ha d'escriure el text.</li> <li><code>text</code>: Cadena de text a escriure.</li> <li><code>org</code>: Cant\u00f3 inferior esquerra de la cadena de text a la imatge, com una tupla <code>(x,y)</code></li> <li><code>fontFace</code>: Tipus de font. Consultar la documentaci\u00f3 per veure els tipus v\u00e0lids (<code>cv2.FONT_</code>)</li> <li><code>fontScale</code>: Factor d'escala de la font que es multiplica per la mida base espec\u00edfica de la font.</li> <li><code>color</code>: Color de la font.</li> </ul> <p>Exercici Pintem sobre la imatge</p> <p>Sobre la imatge a continuaci\u00f3 (el enlariament de l'Apol\u00b7lo XI):</p> <p></p> <p>Apl\u00edcla-li:</p> <ul> <li>Un t\u00edtol a la part de baix, amb el text que consideres</li> <li>Un requadre que tanque el cohet</li> <li>Una cercle que tanque un objecte extrany a la dreta del cohet</li> <li>Una l\u00ednia horizontal de banda a banda de la imatgeque coincidisca amb la punta del cohet.</li> </ul> <p>Deur\u00e0 quedar alguna cosa similar a:</p> <p></p> Sol\u00b7luci\u00f3 Python<pre><code>image = cv2.imread(\"Apollo_11_Launch.jpg\", cv2.IMREAD_COLOR)\n\n(h,w,d) = image.shape   # Dimensions de la imatge\n\nimage_out = image.copy()\ntext = \"Apollo 11 Saturn V Launch, July 16, 1969\"\nfontScale = 2.3\nfontFace = cv2.FONT_HERSHEY_PLAIN\nfontColor = (0, 255, 0)\nfontThickness = 2\n\nimage_out=cv2.putText(image_out, text, (200, 700), fontFace, fontScale, fontColor, fontThickness, cv2.LINE_AA);\n\nimage_out=cv2.rectangle(image_out, (500, 100), (700, 600), (255, 0, 0), thickness=3, lineType=cv2.LINE_8)\n\nimage_out=cv2.circle(image_out, (925, 575), 50, (0, 0, 255), thickness=3, lineType=cv2.LINE_AA)\n\nimage_out=cv2.line(image_out, (0, 50), (w, 50), (255, 255, 0), thickness=2, lineType=cv2.LINE_AA)\nplt.imshow(image_out)\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#5-aplicant-filtres","title":"5. Aplicant filtres","text":"<p>Els filtres a les imatges poden resultar interessant per diversos motius, ja no sols el retoc fotogr\u00e0fic, sin\u00f2 per exemple l'augmentaci\u00f3 de datasets i la recerca de punts singulars a les imatges.</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#51-suma-per-modifcar-la-brillantor-brigthness","title":"5.1. Suma per modifcar la brillantor (brigthness)","text":"<p>La primera operaci\u00f3 que discutim \u00e9s la simple suma d'imatges. Aix\u00f2 resulta en augmentar o disminuir la brillantor de la imatge ja que finalment estem augmentant o disminuint els valors d'intensitat de cada p\u00edxel en la mateixa quantitat. Aix\u00f2 donar\u00e0 com a resultat un augment/disminuci\u00f3 global de la brillantor.</p> <p>Recorda que com una imatge \u00e9s un numpy array, podem sumar matrius de manera molt simple, com veurem a continuaci\u00f3:</p> <p>Modificant la llum de la imatge</p> Python<pre><code>img_bgr = cv2.imread(\"coca-cola-logo.png\", cv2.IMREAD_COLOR)\nimg_rgb = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2RGB)\n\n# Una matris de 50's. \u00c9s la que sumarem\nmatrix = np.ones(img_rgb.shape, dtype=\"uint8\") * 50\n\n# dos m\u00e9s fosques i dos m\u00e9s clares\nimg_rgb_brighter = cv2.add(img_rgb, matrix)\nimg_rgb_brighter_brighter = cv2.add(img_rgb_brighter, matrix)\nimg_rgb_darker   = cv2.subtract(img_rgb, matrix)\nimg_rgb_darker_darker   = cv2.subtract(img_rgb_darker, matrix)\n\n# 3 files amb dos columnes menys la primera\nfigure=plt.figure(figsize=(10, 15))\naxes1 = figure.add_subplot(3,1,1)\naxes2 = figure.add_subplot(3,2,3)\naxes3 = figure.add_subplot(3,2,4)\naxes4 = figure.add_subplot(3,2,5)\naxes5 = figure.add_subplot(3,2,6)\n\n# Plot the images in the subplots\naxes1.imshow(img_rgb)\naxes1.set_title(\"Original\")\n\naxes2.imshow(img_rgb_darker)\naxes2.set_title(\"Fosca\")\n\naxes3.imshow(img_rgb_brighter)\naxes3.set_title(\"Clara\")\n\naxes4.imshow(img_rgb_darker_darker)\naxes4.set_title(\"M\u00e9s fosca\")\n\naxes5.imshow(img_rgb_brighter_brighter)\naxes5.set_title(\"M\u00e9s clara\")\n\n\n# Adjust the spacing between subplots\nplt.tight_layout()\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#52-multipliquem-per-modificar-el-contrast","title":"5.2. Multipliquem per modificar el contrast","text":"<p>Just com l'addici\u00f3 pot resultar en un canvi de brillantor, la multiplicaci\u00f3 es pot utilitzar per millorar el contrast de la imatge.</p> <p>El contrast \u00e9s la difer\u00e8ncia en els valors d'intensitat dels p\u00edxels d'una imatge. Multiplicar els valors d'intensitat per una constant pot fer que la difer\u00e8ncia sigui m\u00e9s gran o m\u00e9s petita (si el factor de multiplicaci\u00f3 \u00e9s &lt; 1).</p> <p>Modifiquem el contrast</p> Python<pre><code>img_bgr = cv2.imread(\"New_Zealand_Coast.jpg\", cv2.IMREAD_COLOR)\nimg_rgb = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2RGB)\n\nmatrix1 = np.ones(img_rgb.shape) * 0.8\nmatrix2 = np.ones(img_rgb.shape) * 1.2\n\nimg_rgb_darker   = np.uint8(cv2.multiply(np.float64(img_rgb), matrix1))\nimg_rgb_brighter = np.uint8(cv2.multiply(np.float64(img_rgb), matrix2))\n\n# Show the images\nplt.figure(figsize=[18,5])\nplt.subplot(131); plt.imshow(img_rgb_darker);  plt.title(\"Menor contrast\");\nplt.subplot(132); plt.imshow(img_rgb);         plt.title(\"Original\");\nplt.subplot(133); plt.imshow(img_rgb_brighter);plt.title(\"Major Contrast\");\n</code></pre> <p></p> <p>Podeu veure els colors estranys en algunes \u00e0rees de la imatge despr\u00e9s de la multiplicaci\u00f3?</p> <p>El problema \u00e9s que despr\u00e9s de la multiplicaci\u00f3, els valors que ja s\u00f3n alts es tornen m\u00e9s grans que 255. Aix\u00f2 provoca un problema de desbordament. Com ho podem evitar?</p> Soluci\u00f3 amb np.clip() <p>Amb la funci\u00f3 <code>np.clip()</code>  de numpy, ens permeta ajustar qualssevol valor per baix o dalt de dos donats a els valors indicats, sobretot al multiplicar.</p> Python<pre><code>img_rgb_lower  = np.uint8(cv2.multiply(np.float64(img_rgb), matrix1))\nimg_rgb_higher = np.uint8(np.clip(cv2.multiply(np.float64(img_rgb), matrix2), 0, 255))\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#53-umbralitzacio-dimatges","title":"5.3. Umbralitzaci\u00f3 d'imatges","text":"<p>Les imatges bin\u00e0ries (imatges en blanc i negre) tenen molts casos d'\u00fas en el processament d'imatges. Un dels casos d'\u00fas m\u00e9s comuns \u00e9s la creaci\u00f3 de m\u00e0scares o detecci\u00f3 de vores.</p> <p>Les m\u00e0scares d'imatges ens permeten processar parts espec\u00edfiques d'una imatge mantenint les altres parts intactes. La umbralitzaci\u00f3 d'imatges s'utilitza per crear imatges bin\u00e0ries a partir d'imatges en escala de grisos. Podeu utilitzar diferents valors de llindar per crear diferents imatges bin\u00e0ries a partir de la mateixa imatge original.</p> <p>La sintaxi \u00e9s <code>retval, dst = cv2.threshold(src, thresh, maxval, type[, dst])</code>, on:</p> <ul> <li><code>dst</code>: L'array de sortida del mateix tamany i tipus i el mateix nombre de canals que <code>src</code>.</li> <li><code>src</code>: array d'entrada (de m\u00faltiples canals, de 8 bits o de punt flotant de 32 bits).</li> <li><code>thresh</code>: valor de llindar. \u00c9s el l\u00edmit a partir del qual els p\u00edxels es convertiran en un valor espec\u00edfic, determinat pel par\u00e0metre type, normalment o 0 o 1.</li> <li><code>maxval</code>: valor m\u00e0xim a utilitzar amb els tipus de umbralitzaci\u00f3 <code>THRESH_BINARY</code> i <code>THRESH_BINARY_INV</code>.</li> <li><code>type</code>: \u00c9s el tipus d'operaci\u00f3 de thresholding que es vol aplicar. Pots utilitzar els seg\u00fcents valors:</li> <li><code>cv2.THRESH_BINARY</code>: Si el valor del p\u00edxel \u00e9s m\u00e9s gran que el valor de threshold, es posa al valor <code>maxval</code>; si no, es posa a 0.</li> <li><code>cv2.THRESH_BINARY_INV</code>: \u00c9s al contrari de <code>cv2.THRESH_BINARY</code>. Si el valor del p\u00edxel \u00e9s m\u00e9s gran que el valor de threshold, es posa a 0; si no, es posa a <code>maxval</code>.</li> <li><code>cv2.THRESH_TRUNC</code>: Tots els valors m\u00e9s grans que el valor de threshold es posen iguals al valor de threshold.</li> <li><code>cv2.THRESH_TOZERO</code>: Tots els valors m\u00e9s petits que el valor de threshold es posen a 0.</li> <li><code>cv2.THRESH_TOZERO_INV</code>: \u00c9s al contrari de <code>cv2.THRESH_TOZERO</code>. Tots els valors m\u00e9s grans que el valor de threshold es posen a 0.</li> </ul> <p>D'altra banda tenim la funci\u00f3 d'una umbralitzaci\u00f3 adaptativa, que t\u00e9 l'avantatge d'adaptar-se localment als canvis de la intensitat de la imatge. En lloc d'utilitzar un \u00fanic valor de threshold per a tota la imatge, l'adaptaci\u00f3 s'ajusta en funci\u00f3 de petites regions de la imatge, permetent detectar els umbrals de manera disinta segons la part de la imatge en la que estem.</p> <p>La sintaxi \u00e9s bastant semblant <code>dst = cv.adaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C[, dst])</code>, on:</p> <ul> <li><code>dst</code>: Imatge de destinaci\u00f3 del mateix tamany i tipus que <code>src</code>.</li> <li><code>src</code>: Imatge d'origen de 8 bits i un sol canal.</li> <li><code>maxValue</code>: Valor no nul assignat als p\u00edxels per als quals es compleix la condici\u00f3.</li> <li><code>adaptiveMethod</code>: Algorisme de umbralitzaci\u00f3 adaptativa a utilitzar. S'utilitza <code>BORDER_REPLICATE</code> o <code>BORDER_ISOLATED</code> per processar els l\u00edmits.</li> <li><code>thresholdType</code>: Tipus de umbralitzaci\u00f3 que ha de ser THRESH_BINARY o THRESH_BINARY_INV.</li> <li><code>blockSize</code>: Mida d'un ve\u00efnat de p\u00edxels que s'utilitza per calcular un valor de llindar per al p\u00edxel: 3, 5, 7, i aix\u00ed successivament.</li> <li><code>C</code>: Constant que es resta de la mitjana o mitjana ponderada. Normalment, \u00e9s positiu, per\u00f2 tamb\u00e9 pot ser zero o negatiu.</li> </ul> <p>Detectem finestres</p> <p>En aquest exemple anem a intentar detectar zones de la imatge. Apliquem 3 filtres i marquem en la m\u00e0scara resultant aquells p\u00edxels que son menors que 50, 100 i 150, respectivament:</p> Python<pre><code>img_read = cv2.imread(\"building-windows.jpg\", cv2.IMREAD_GRAYSCALE)\n\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(14, 14))\naxes = axes.flatten()\n\nimg_read = cv2.imread(\"building-windows.jpg\", cv2.IMREAD_GRAYSCALE)\naxes[0].imshow(img_read, cmap=\"gray\");axes[0].set_title(\"Original\")\n\nfor i in range(1,4):\nretval, img_thresh = cv2.threshold(img_read, i*50, 255, cv2.THRESH_BINARY)\naxes[i].imshow(img_thresh, cmap=\"gray\");axes[i].set_title(\"Llindar &lt;\" + str(i*50))\n\nplt.tight_layout()\n</code></pre> <p></p> <p>Anem a aplicar el mateix process a altra imatge, la captura de la qual te una s\u00e8rie de ombres. El resultat del codi anterior seria el seg\u00fcent:</p> <p></p> <p>Com pots observar la detecci\u00f3 ha estat incorrecta en la zona ombrejada, degut al fons de mala qualitat. \u00c9s per aix\u00f2 que necessitem una detecci\u00f3 adaptativa, la que puja el llindar segons la zona de la imatge:</p> <p>Detecci\u00f3 adaptativa</p> Python<pre><code>img_read = cv2.imread(\"Piano_Sheet_Music.png\", cv2.IMREAD_GRAYSCALE)\n\n# Perform global thresholding\nretval, img_thresh_gbl_1 = cv2.threshold(img_read, 50, 255, cv2.THRESH_BINARY)\n\n# Perform global thresholding\nretval, img_thresh_gbl_2 = cv2.threshold(img_read, 130, 255, cv2.THRESH_BINARY)\n\n# Perform adaptive thresholding\nimg_thresh_adp = cv2.adaptiveThreshold(img_read, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 11, 7)\n\n# Show the images\nplt.figure(figsize=[18,15])\nplt.subplot(221); plt.imshow(img_read,        cmap=\"gray\");  plt.title(\"Original\");\nplt.subplot(222); plt.imshow(img_thresh_gbl_1,cmap=\"gray\");  plt.title(\"Llindar (global: 50)\");\nplt.subplot(223); plt.imshow(img_thresh_gbl_2,cmap=\"gray\");  plt.title(\"Llindar (global: 130)\");\nplt.subplot(224); plt.imshow(img_thresh_adp,  cmap=\"gray\");  plt.title(\"Adaptatiu\");\n</code></pre> <p></p> <p>En OpenCV, per defecte, quan s'aplica una m\u00e0scara a una imatge, generalment es processen les \u00e0rees de la imatge que estan en blanc en la m\u00e0scara. Aix\u00f2 significa que les operacions es apliquen a les regions on els p\u00edxels de la m\u00e0scara tenen valors no nuls. Ara vorem com podem invertir i combinar imatges per a conseguir m\u00e1scares m\u00e9s precisses, mitjan\u00e7ant operacions a nivell de bit o bitwise</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#54-operacions-a-nivell-de-bit","title":"5.4. Operacions a nivell de bit","text":"<p>Anem a veure una serie d'operacions que efectuen operacions a nivell de bit entre els p\u00edxels de les imatges. Totes tenen la mateixa sintaxi, sols canvia l'operaci\u00f3 efectuada (and,or, not, etc). </p> <p>Aquestes operacions solen aplicar-se per aplicar m\u00e0scares, combinar imatges, seleccionar regions i dem\u00e9s. Principalment es fan servir en escala de negres</p> <p>La sintaxi de les funcions \u00e9s:</p> Python<pre><code>dst = cv2.bitwise_and( src1, src2[, dst[, mask]] )\ndst = cv2.bitwise_or( src1, src2[, dst[, mask]] )\ndst = cv2.bitwise_xor( src1, src2[, dst[, mask]] )\ndst = cv2.bitwise_not( src1)\n</code></pre> <p>Com pot observar-se:</p> <ul> <li><code>src1</code> i <code>src2</code> son les imatges que es combinene donant com a resultat <code>dst</code>. </li> <li>Important \u00e9s <code>mask</code>, que \u00e9s una imatge de la mateixa dimensi\u00f3, que cas d'estar, ja que \u00e9s opcional, aplica el resultats sols als bits que estan en blanc i que tenen valor de 1 (255 en binari) als seus p\u00edxels.</li> </ul> <p>Vegem alguns exemples, partint de les seg\u00fcents imatges:</p> <p>Imatges i m\u00e0scares de partida</p> Python<pre><code>img_rec = cv2.imread(\"rectangle.jpg\", cv2.IMREAD_GRAYSCALE)\nimg_cir = cv2.imread(\"circle.jpg\", cv2.IMREAD_GRAYSCALE)\nmask=np.zeros(img_rec.shape, dtype=\"uint8\")\nmask[125:,:] = 255\n\nplt.figure(figsize=[20, 8])\nplt.subplot(131);plt.imshow(img_rec, cmap=\"gray\");plt.title(\"Rectangle\")\nplt.subplot(132);plt.imshow(img_cir, cmap=\"gray\");plt.title(\"Cercle\")\nplt.subplot(133);plt.imshow(mask, cmap=\"gray\");plt.title(\"M\u00e1scara\")\nprint(img_rec.shape)\n</code></pre> <p></p> <p>Operacions amb i sense m\u00e0scara</p> Python<pre><code>and_img = cv2.bitwise_and(img_rec, img_cir, mask=None)\nand_img_masked = cv2.bitwise_and(img_rec, img_cir, mask=mask)\n\nor_img = cv2.bitwise_or(img_rec, img_cir, mask=None)\nor_img_masked = cv2.bitwise_or(img_rec, img_cir, mask=mask)\n\nxor_img = cv2.bitwise_xor(img_rec, img_cir, mask=None)\nxor_img_masked = cv2.bitwise_xor(img_rec, img_cir, mask=mask)\n\nnot_image=cv2.bitwise_not(img_cir, mask=None) \nnot_image_masked=cv2.bitwise_not(img_cir, mask=mask) \n\nplt.figure(figsize=[8, 10])\n\nplt.subplot(421);plt.imshow(and_img, cmap='gray');plt.title('Bitwise AND')\nplt.subplot(422);plt.imshow(and_img_masked, cmap='gray');plt.title('Masked AND')\n\nplt.subplot(423);plt.imshow(or_img, cmap='gray');plt.title('Bitwise OR')\nplt.subplot(424);plt.imshow(or_img_masked, cmap='gray');plt.title('Masked OR')\n\nplt.subplot(425);plt.imshow(xor_img, cmap='gray');plt.title('Bitwise XOR')\nplt.subplot(426);  plt.imshow(xor_img_masked, cmap='gray');plt.title('Masked XOR')\n\nplt.subplot(427);plt.imshow(not_image, cmap='gray');plt.title('Bitwise NOT')\nplt.subplot(428);plt.imshow(not_image_masked, cmap='gray');plt.title('Masked NOT')\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#55-activitat-practica","title":"5.5. Activitat pr\u00e0ctica.","text":"<p>A partir d'aquestes imatges facilitades, fes la composici\u00f3 tal i com s'indica</p> <p></p> <p></p> <p></p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_Basic/#6-extra-nuvols-de-paraules","title":"6. Extra - N\u00favols de paraules","text":"<p>En aquets pr\u00e0ctica aprendras a fer servir l'eina wordclou, per a dibuixar nuvols de paraules en un quadre o en una forma determinada</p> <p>https://www.datacamp.com/tutorial/wordcloud-python</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/","title":"01 OpenCV OLD","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#1-introduccio-a-opencv-i-pil-python-imaging-library","title":"1. Introducci\u00f3 a OpenCV i PIL (Python Imaging Library):","text":"<p>OpenCV (Open Source Computer Vision) i PIL (Python Imaging Library) s\u00f3n dues potents llibreries de processament d'imatges en Python que ofereixen funcionalitats complement\u00e0ries per a l'an\u00e0lisi, la manipulaci\u00f3 i la millora d'imatges. Aquestes eines s\u00f3n essencials en diverses aplicacions, des del desenvolupament d'algoritmes de visi\u00f3 per computadora fins a la creaci\u00f3 d'eines de processament d'imatges en projectes d'intel\u00b7lig\u00e8ncia artificial.</p> <p>OpenCV:</p> <p>OpenCV \u00e9s una llibreria de visi\u00f3 per computadora de codi obert, proporciona una \u00e0mplia varietat de funcions per al processament d'imatges i v\u00eddeo. Amb suport per a m\u00faltiples plataformes i llenguatges de programaci\u00f3, OpenCV facilita tasques com la detecci\u00f3 d'objectes, el seguiment de moviments, el reconeixement facial i la calibraci\u00f3 de c\u00e0meres. La seva flexibilitat i efici\u00e8ncia fan que sigui una elecci\u00f3 popular en el desenvolupament d'aplicacions relacionades amb la visi\u00f3 per computadora.</p> <p>PIL:</p> <p>PIL, tamb\u00e9 coneguda com a Pillow, \u00e9s una llibreria que ofereix eines robustes per a la manipulaci\u00f3 d'imatges a Python. Tot i que ha estat substitu\u00efda per Pillow en termes de desenvolupament actiu, PIL encara es menciona pel seu llegat. Pillow mant\u00e9 la compatibilitat amb el codi PIL existent i afegeix noves caracter\u00edstiques. Aquesta llibreria \u00e9s ideal per a operacions b\u00e0siques com obrir, manipular i desar imatges en diversos formats.</p> <p>Combinant OpenCV i PIL:</p> <p>La combinaci\u00f3 d'OpenCV i PIL aprofita el millor de totes dues llibreries. OpenCV ofereix algoritmes avan\u00e7ats i t\u00e8cniques de visi\u00f3 per computadora, mentre que PIL proporciona funcions addicionals per al processament b\u00e0sic i la manipulaci\u00f3 eficient d'imatges. La integraci\u00f3 d'aquestes dues eines permet als desenvolupadors abordar una \u00e0mplia gamma de reptes en el processament d'imatges, des de tasques senzilles fins a projectes m\u00e9s complexos que requereixen funcions especialitzades.</p> <p>En aquest apartat, explorar\u00e0s com aprofitar de manera sin\u00e8rgica OpenCV i PIL per a maximitzar la teva capacitat per treballar amb imatges a Python, obtenint aix\u00ed una base s\u00f2lida per abordar projectes relacionats amb el processament d'imatges i la intel\u00b7lig\u00e8ncia artificial.</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#1-manipulacio-basica-dimatges","title":"1 Manipulaci\u00f3 b\u00e0sica d'imatges","text":"<p>La classe m\u00e9s important de la biblioteca d'imatges de Python <code>PIL</code> \u00e9s la classe <code>Image</code>, definida al m\u00f2dul amb el mateix nom. Podeu crear inst\u00e0ncies d'aquesta classe de diverses maneres; ja sigui carregant imatges dels fitxers, processant altres imatges o creant imatges des de zero.</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#11-obrir-i-tancar-amp-pil","title":"1.1. Obrir i tancar AMP PIL","text":"<p>La manera m\u00e9s senzilla de crear-la \u00e9s a partir d'un fitxer del sistema d'arxius, mitjan\u00e7ant <code>Image.open(ruta_a_la imatge)</code>.</p> <p>Podrem mostrar algunes caracter\u00edstiques amb els atributs:</p> <ul> <li><code>format</code> \u2192 identifica la font d'una imatge, cas de llegir-se d'un fitxer</li> <li><code>size</code> \u2192 \u00e9s una tupla de 2 que cont\u00e9 l'amplada (width) i l'al\u00e7ada (height) (en p\u00edxels). </li> <li><code>mode</code> \u2192 defineix el nom del mode de color: L per a grisos, RGB per a color, etc.</li> </ul> <p>Per a desar una imatge ja processada, ho farem mitjan\u00e7ant <code>save(nom_del_fitxer)</code>. Aix\u00f2, depenent de la extensi\u00f3 que li posem, ens permetr\u00e0 tamb\u00e9 canviar el format d'eixida.</p> C\u00e0rrega i guardat d'imatge Python<pre><code># Obrir una imatge i veure les seues caracter\u00edstiques\nfrom PIL import Image\nimport os\n\nimg_input=os.path.join(image_path,\"empire.jpg\")\nim = Image.open(img_input)\n\n# mostar les seues caracter\u00edsties\nprint(im.format, im.size, im.mode)\n\n# mostar al sistema\n#im.show()\n\n# separem del nom la extensi\u00f3\nf,e=os.path.splitext(img_input)\n\n# la canviem\nimg_output=f+\".png\"\n\n#guardem\nim.save(img_output)\n</code></pre> Intenta buscar i carregar una imatge descarregada directament desde Internet Python<pre><code>from PIL import Image\nimport requests\nfrom io import BytesIO\n\n# URL \nurl = \"https://upload.wikimedia.org/wikipedia/commons/2/25/PMSA-300.jpg\"\n\n# Fem una petici\u00f3 GET\nresponse = requests.get(url)\n# A partir de la resposta creem un stream de Bytes\nimg = Image.open(BytesIO(response.content))\n\n# Imatge a punt per a processar\nimg.show()\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#12-miniatures","title":"1.2. Miniatures","text":"<p>Altre metode interessant \u00e9s el de modificar la imatge per a fer minitures (<code>thumbnail</code>). Aquest m\u00e8tode rep el shape al que volem transformar, i l'adapta per a mantenir la relaci\u00f3 d'aspecte. Espai que aquest m\u00e8tode transforma la imatge original</p> Transformant el tamany Python<pre><code>new_size=(300,400)\nimg_final=im.copy()\nimg_final.thumbnail(new_size)\nimg_final.show()\n</code></pre> <p>Si vullgesim crear una nova imatge com a c\u00f2pia de la original, en compte de thumbnail podem fer servir el m\u00e8tode <code>resize</code>, de manera semblant a <code>thumbnail</code></p> <p>Exercici d'ampliaci\u00f3</p> <p>A partir d'aquesta funci\u00f3 donada, investiga que fa cadascun dels m\u00e8todes que ess criden per a transformar la imatge</p> Python<pre><code>from PIL import Image, ImageOps\nsize = (100, 150)\nwith Image.open(\"la teua imatge\") as im:\n    ImageOps.contain(im, size).save(\"imageops_contain.png\")\n    ImageOps.cover(im, size).save(\"imageops_cover.png\")\n    ImageOps.fit(im, size).save(\"imageops_fit.png\")\n    ImageOps.pad(im, size, color=\"#f00\").save(\"imageops_pad.png\")\n\n    # thumbnail() can also be used,\n    # but will modify the image object in place\n    im.thumbnail(size)\n    im.save(\"imageops_thumbnail.png\")\n</code></pre> <p>Com a ampliaci\u00f3 crear una figura amb matplotlib, que es dibuixe en una graella <code>3x2</code> les imatges generades anteriorment. Passa com a imatge original alguna que siga m\u00e9s menuda que el 100x150 que tens al codi</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#13-retallant-i-pintant","title":"1.3. Retallant i Pintant","text":"<p>Anem a veure com podem arar pintar damunt de la imatge i retallar alguna porci\u00f3 de la mateixa. Aix\u00f2 ens resultar\u00e0 particularment \u00fatil quan vullguem marcar sobre la imatge algun punt singular de la mateixa: un conjunt de cares, un vehicle i alguna part de la mateixa.</p> <p>Amb les retalls (crop) aconseguirem crear una nova imatge amb all\u00f2 que hem seleccionat, per a seguir processant all\u00f2 que hem retallat. El m\u00e9s important per a aquestes operacions \u00e9s tindre clar el sistema de coordenades de la imatge, que depenent de la documentaci\u00f3 de la llibreria es far\u00e0 d'una manera o altra:</p> <p>En ambd\u00f3s llibreries, OpenCV i PIL l'oritge de coordenades <code>(0,0)</code> ser\u00e0 el punt superior esquerre de la imatge. A partir d'ahi:</p> <ol> <li> <p>A la imatge anterior es pot comprovar que per marcar una caixa necessitarem 4 punts, especificats com una tupla <code>(x,y,w,h)</code>, on <code>x,y</code> son les coordenades superior esquerre de la caixa, i <code>w,h</code>:  Aquesta notaci\u00f3 tamb\u00e9 ens servir\u00e0 per a dibuixar rectangles</p> </li> <li> <p>En altres casos, com a la llibreria ImageDraw, les coordenades de la caixa seran una tupla de 4 n\u00fameros, per\u00f2 atenci\u00f3 <code>(x,y,x',y')</code> ![Coordenades ImageDRwa(https://i.stack.imgur.com/UB7ho.png){width=75%} Aquesta notaci\u00f3 la farem per a fer retallar imatges amb crop</p> </li> <li> <p>Altra notaci\u00f3 especial ser\u00e0 quan volem tra\u00e7ar l\u00ednies poligonals, que llavors haurem de facilitar als m\u00e8todes una tupla amb tantes parelles de coordenades com punts volem posar, per exemple 12 n\u00fameros per a un hex\u00e0gon <code>((x, y), (x, y),...)</code> o b\u00e9 <code>(x,y,x,y,..)</code> </p> </li> </ol> <p>Com sempre revisar la documentaci\u00f3 dels m\u00e8todes a utilitzar</p> EXemple de retall d'imartge Python<pre><code>from PIL import Image,ImageDraw\n\n# Llegim la imatge\nim = Image.open(img_input)\n\n# Definim la caixa a retallar\ncaixa=(100,600,300,700)\n\n# Retallem la caixa, creant una nova imatge\nretall=im.crop(caixa)\n\n# Pintem sobre la imatge original un rectangle\n# es crea un dibuix obre la imatge original\ndraw = ImageDraw.Draw(im)\n\n# afegim un rectangle, de color roig\ndraw.rectangle(caixa, outline=\"red\", width=2) \n</code></pre> <p>El resultat seria:</p> <p></p> <p>Fixa't que la caixa que s'ha retallat te una dimensi\u00f3 de 200x100</p>"},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#2-2-filtrat-i-kernels","title":"2. 2 Filtrat i kernels","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#3-3-manipulacio-avancada-dimatges","title":"3. 3 Manipulaci\u00f3 avan\u00e7ada d'imatges","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#4-4-visio-per-computador","title":"4. 4 Visi\u00f3 per computador","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#41-deteccion-de-objetos","title":"4.1. Detecci\u00f3n de objetos","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#reconocimiento-facial","title":"Reconocimiento facial","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#42-seguimiento-de-objetos-en-movimiento","title":"4.2. Seguimiento de objetos en movimiento","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#xxnn-convolucionals","title":"XXNN Convolucionals","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#5-projecte-deteccio-democions-i-punts-caracteristics-en-rostres","title":"5. Projecte. Detecci\u00f3 d'emocions i punts caracter\u00edstics en rostres","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#6-projecte-pasar-llista-a-partir-duna-imatge","title":"6. Projecte. Pasar llista a partir d'una imatge","text":""},{"location":"U06%20Convergencia%20tecnologica/01_OpenCV_OLD/#7-bibliografia","title":"7. Bibliografia","text":"<p>Programming Computer Vision with Python, de Jan Erik Solem</p>"},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/","title":"2. Capturar imatges","text":""},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/#1-capturar-imatges-des-de-la-camera-o-webcam","title":"1. Capturar imatges des de la c\u00e0mera o webcam","text":"<p>Amb Opencv, a banda de manipular imatges emmagatzemades en fitxers, tamb\u00e9 podem capturar imatges i videos des de la webcam o des d'altres streams de video. Anem a veure primer alguns snippets que ens ajudaran en els nostres programes.</p> <p>L'equip identifica les c\u00e0mares connectades amb un n\u00famero enter, i per a crear un objecte que connecta amb la c\u00e0mera es far\u00e0 servir <code>camera = cv2.VideoCapture(camera_index)</code>. Amb aquest objecte <code>camera</code> ja podrem fer les captures.</p> <p>Atenci\u00f3</p> <p>Amb aquest mateix m\u00e8tode tamb\u00e9 podem obri un arxiu de video (stream) i processar-lo de manera molt similar al stream que produeix una c\u00e0mera de video</p> <p>Quan s'utilitza el m\u00e8tode <code>(retorn,retorn)=cap.read()</code> a OpenCV per llegir d'una capturadora de v\u00eddeo, el que es llegeix \u00e9s un sol fotograma del v\u00eddeo en curs. El m\u00e8tode cap.read() retorna una tupla amb dos valors:</p> <ul> <li><code>retorn</code> \u2192 Aquest valor boole\u00e0 indica si la lectura del fotograma ha estat exitosa o no. </li> <li><code>frame</code>: Aquest \u00e9s el propi fotograma de v\u00eddeo que es llegeix. \u00c9s una matriu NumPy que cont\u00e9 la informaci\u00f3 de la imatge en format de p\u00edxels.</li> </ul> <p>El m\u00e8tode <code>cap.get()</code>  s'utilitza per obtenir propietats espec\u00edfiques de la c\u00e0mera, retornant el valor actual de la propietat sol\u00b7licitada. Pot tenir un o dos arguments:</p> <ol> <li> <p>Un Argument: Si es proporciona un sol argument, aquest ha de ser un identificador que representi la propietat que es vol obtenir:</p> </li> <li> <p><code>cv2.CAP_PROP_FRAME_WIDTH</code>: Ample del fotograma.</p> </li> <li><code>cv2.CAP_PROP_FRAME_HEIGHT</code>: Alt del fotograma.</li> <li><code>cv2.CAP_PROP_FPS</code>: Fotogrames per segon que permet capturar.</li> <li><code>cv2.CAP_PROP_POS_FRAMES</code>: Posici\u00f3 del fotograma actual en la seq\u00fc\u00e8ncia (v\u00eddeo).</li> <li><code>cv2.CAP_PROP_POS_MSEC</code>: Temps actual en mil\u00b7lisegons.</li> <li><code>cv2.CAP_PROP_FRAME_COUNT</code>: Nombre total de fotogrames al v\u00eddeo.</li> </ol> <p>Totes aquestes constants tenen valors enters que podem posar o trobar-nos en compte de la pr\u00f2pia constant. Pots consultar-lo a la documentaci\u00f3 de openCV</p> <ol> <li>Dos Arguments: Si es proporcionen dos arguments, el primer \u00e9s un identificador de la propietat, i el segon \u00e9s un valor per defecte que es retorna si la propietat no es pot obtenir.</li> </ol> <p>Tamb\u00e9 disposem de <code>cap.set(arg,value)</code> que s'utilitza per modificar algunes propietats, com els FPS (fotogrames per segon) i la resoluci\u00f3 del fotograma. Pot tenir dos arguments:</p> <ol> <li> <p><code>arg</code> \u2192 identificador que representa la propietat que es vol modificar, entre les vistes anteriorment.</p> </li> <li> <p><code>value</code> \u2192 El segon argument \u00e9s el valor que es vol establir per a la propietat de <code>arg</code>.</p> </li> </ol> <p>\u00c9s important tenir en compte que no totes les propietats de la capturadora es poden modificar en tots els casos. </p> <p>Posem la c\u00e0mera a 640x480 i 30FPS</p> Python<pre><code>import cv2\n\n# Obrim la c\u00e0mera\ncap = cv2.VideoCapture(0)\n\n# Ressoluci\u00f3 a 640x480\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)\n\n# Cambiem els FPS a 30\ncap.set(cv2.CAP_PROP_FPS, 30)\n\n# Alliberem la c\u00e0mera\ncap.release()\n</code></pre> <p>Quantes c\u00e0mares tinc i quina \u00e9s la seua ressoluci\u00f3</p> Python<pre><code>def list_cameras():\ncamera_list=[]\nfor camera_index in range(5):   # 5 is the maximum number of cameras that we will check\n    cap = cv2.VideoCapture(camera_index)\n    if not cap.read()[0]:\n        break\n    else:\n    cam={\n        \"index\": camera_index,\n        \"resolution\": f\"{cap.get(cv2.CAP_PROP_FRAME_WIDTH)}x{cap.get(cv2.CAP_PROP_FRAME_HEIGHT)}\"\n    }\n\n    camera_list.append(cam)\n    cap.release()\n\nreturn camera_list\n</code></pre> <p>Fes una foto i mostra-la</p> Python<pre><code>def take_picture(cam_id):\ncap = cv2.VideoCapture(cam_id)\nret, frame = cap.read()\nif ret:\n    cv2.imshow(f\"Camera {cam_id}\", frame)\n    cv2.waitKey(0)          # Fins apretar una tecla\n    cv2.destroyAllWindows()\nelse:\n    print(f\"No puc obrir la c\u00e0mera amb id:{cam_id}\")\ncap.release()\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/#2-videos","title":"2. Videos","text":""},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/#21-llegint-imatges-de-video","title":"2.1. Llegint imatges de video","text":"<p>Un video no \u00e9s m\u00e9s que una seq\u00fc\u00e8ncia de frames. D'aquesta manera OpenCV representa un video de la mateixa manera que el processament d'una c\u00e0mera. Aix\u00ed doncs si volem obrir un video ho farem de manare molt similar a la c\u00e0mera:</p> Python<pre><code>source = 'el_meu_video.mp4'  # source = 0 for webcam\n\ncap = cv2.VideoCapture(source)  # igual que la c\u00e0mera\n\nif not cap.isOpened():\n    print(\"Error opening video stream or file\")\n    quit()\n\nret, frame = cap.read() # ja tenim el primer frame del video\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/#22-escrivint-videos","title":"2.2. Escrivint videos","text":"<p>Per escriure el v\u00eddeo, necessites crear un objecte <code>VideoWriter</code> amb els par\u00e0metres adequats.</p> Python<pre><code>VideoWriter object = cv.VideoWriter(nom_del_fitxer, fourcc, fps, frameSize )\n</code></pre> <p>on els par\u00e0metres son:</p> <ol> <li> <p><code>filename</code>: Nom del fitxer de v\u00eddeo de sortida.</p> </li> <li> <p><code>fourcc</code>: Codi de 4 car\u00e0cters del codec utilitzat per comprimir els frames. Per exemple, <code>VideoWriter::fourcc('P','I','M','1')</code> \u00e9s un codec MPEG-1, <code>VideoWriter::fourcc('M','J','P','G')</code> \u00e9s un codec motion-jpeg, etc. Es pot obtenir una llista de codis a la p\u00e0gina Video Codecs by FOURCC. El backend FFMPEG amb contenidor MP4 utilitza altres valors com a codi fourcc: consulta ObjectType, per la qual cosa pot ser que rebeu un missatge d'av\u00eds d'OpenCV sobre la conversi\u00f3 del codi fourcc. Consultar aci</p> </li> <li> <p><code>fps</code>: Velocitat de fotogrames de l'stream de v\u00eddeo creat.</p> </li> <li> <p><code>frameSize</code>: Mida dels frames del v\u00eddeo.</p> </li> </ol> <p>::: example \"Example d'escriptura de videos</p> Text Only<pre><code>```python\n# mantenim les mesures d'entrada\nframe_width = int(cap.get(3))    # cv2.CAP_PROP_FRAME_WIDTH\nframe_height = int(cap.get(4))   # cv2.CAP_PROP_FRAME_HEIGHT\n\n# Define the codec and create VideoWriter object. per a dos videos distints\nout_avi = cv2.VideoWriter(\"race_car_out.avi\", cv2.VideoWriter_fourcc(\"M\", \"J\", \"P\", \"G\"), 10, (frame_width, frame_height))\n\nout_mp4 = cv2.VideoWriter(\"race_car_out.mp4\", cv2.VideoWriter_fourcc(*\"XVID\"), 10, (frame_width, frame_height))\n\n# Llegim i escrivim als nous formats\nwhile cap.isOpened():\n    # Llegim un fram\n    ret, frame = cap.read()\n\n    if ret:         # Si hi ha frame, guardem\n        out_avi.write(frame)\n        out_mp4.write(frame)\n\n    #   Si no hi ha frame... acabem\n    else:\n        break\n\ncap.release()\nout_avi.release()\nout_mp4.release()\n```\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/02_CapturarImatges/#3-exercici","title":"3. Exercici","text":"<p>Es demana un exercici b\u00e0sic al processament d'imatges, que \u00e9s  llegir un video i guardar tots els fotogrames en una col\u00b7lecci\u00f3 d'imatges. Aix\u00f2 pot servir per a la preparaci\u00f3 de dataset o l'an\u00e0lisi de videos.</p>"},{"location":"U06%20Convergencia%20tecnologica/03_Deteccio_facial/","title":"3. Detecci\u00f3 facial","text":""},{"location":"U06%20Convergencia%20tecnologica/03_Deteccio_facial/#1-deteccio-de-rostres","title":"1. Detecci\u00f3 de rostres","text":"<p>En aquest apartat vas a treballar en un projecte aut\u00f2nom de detecci\u00f3 i reconeixement de rostres.</p> <p>Aquest materials estan basat en el seg\u00fcent tutorial.</p>"},{"location":"U06%20Convergencia%20tecnologica/03_Deteccio_facial/#11-haarcascade","title":"1.1. HaarCascade","text":"<p>La detecci\u00f3 de rostres amb <code>Haar Cascade</code>\u00e9s un m\u00e8tode efica\u00e7 utilitzat en visi\u00f3 artificial i processament d\u2019imatges. Proposat per Paul Viola i Michael Jones el 2001, aquest m\u00e8tode es basa en classificadors en cascada entrenats amb funcions de Haar:</p> <ul> <li>Es necessita un conjunt d\u2019imatges positives (rostres) i negatives (sense rostres) per entrenar el classificador.</li> <li>Les caracter\u00edstiques de Haar s\u00f3n com nuclis convolucionals que s\u2019apliquen a la imatge.</li> <li>Les imatges integrals simplifiquen el c\u00e0lcul de caracter\u00edstiques.</li> </ul> <p>Per sort podem trobar models de classificaci\u00f3 entrenats ja a https://github.com/opencv/opencv/tree/master/data/haarcascades</p>"},{"location":"U06%20Convergencia%20tecnologica/03_Deteccio_facial/#12-implementacio-amb-opencv","title":"1.2. Implementaci\u00f3 amb OpenCV:","text":"<p>OpenCV proporciona un classificador preentrenat per a la detecci\u00f3 de rostres mitjan\u00e7ant Haar Cascade. Pots utilitzar-lo amb la funci\u00f3 <code>cv2.CascadeClassifier</code>.</p> Funcionament del classificador amb Python Python<pre><code>import cv2\n\n# Carrega el classificador preentrenat\nface_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')\n\n# Llegeix la imatge\nimg = cv2.imread('imatge.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n# Detecta rostres\nfaces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5)\n\n# Dibuixa rectangles al voltant dels rostres detectats\nfor (x, y, w, h) in faces:\n    cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)\n\n# Mostra la imatge amb els rostres detectats\ncv2.imshow('Rostres detectats', img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/03_Deteccio_facial/#2-treball-practic-reconeixement-facial","title":"2. Treball pr\u00e0ctic. Reconeixement facial","text":"<p>Anem a fer una pr\u00e0ctica de reconeixemnet facial. Possibles cassos d'\u00fas d'aquest projecte serien:</p> <ul> <li>Acc\u00e9s a la feina, treball</li> <li>Control d'assist\u00e8ncia</li> <li>Detecci\u00f3 de gent no autoritzada</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/","title":"04 Deteccio Objectes YOLO","text":""},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#1-introduccion-descripcion-breve-de-yolo","title":"1. Introducci\u00f3n. Descripci\u00f3n breve de YOLO","text":"<p>https://docs.ultralytics.com/es</p> <p>YOLO (You Only Look Once) es una familia de modelos de deep learning enfocados en la detecci\u00f3n de objetos en im\u00e1genes o videos. Se caracteriza por su velocidad y precisi\u00f3n en tiempo real, ya que el modelo procesa toda la imagen de una sola vez para predecir las regiones donde se encuentran los objetos y su clase.</p> <p>C\u00f3mo se entrena un modelo YOLO</p> <ul> <li>Recopilaci\u00f3n de datos: Se juntan im\u00e1genes etiquetadas con las coordenadas de los objetos y sus categor\u00edas.</li> <li>Preparaci\u00f3n de datos: Se estructuran las etiquetas en un formato compatible (por ejemplo, COCO o YOLO).</li> <li>Configuraci\u00f3n del entrenamiento: Se elige la arquitectura YOLO (p. ej. YOLOv5, YOLOv7, YOLOv8, etc.), el tama\u00f1o del lote (batch size) y los hiperpar\u00e1metros (\u00e9pocas, tasa de aprendizaje, etc.).</li> <li>Proceso de entrenamiento: Con cada batch de im\u00e1genes, la red ajusta los pesos para minimizar la diferencia entre las predicciones y las etiquetas reales.</li> <li>Validaci\u00f3n y ajuste: Se eval\u00faa el rendimiento en un conjunto de validaci\u00f3n para ajustar hiperpar\u00e1metros y evitar sobreajuste.</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#2-dataset","title":"2. Dataset","text":"<p>La estructura del dataset se divide en dos carpetas y archivos de configuraci\u00f3n</p> Bash<pre><code>dataset/\n \u251c\u2500 data.yaml\n \u251c\u2500 images/\n \u2502   \u251c\u2500 train/\n \u2502   \u2502   \u251c\u2500 foto1.jpg\n \u2502   \u2502   \u251c\u2500 foto2.jpg\n \u2502   \u2502   \u2514\u2500 ...\n \u2502   \u2514\u2500 val/\n \u2502       \u251c\u2500 fotoX.jpg\n \u2502       \u2514\u2500 ...\n \u2514\u2500 labels/\n     \u251c\u2500 train/\n     \u2502   \u251c\u2500 foto1.txt\n     \u2502   \u251c\u2500 foto2.txt\n     \u2502   \u2514\u2500 ...\n     \u2514\u2500 val/\n         \u251c\u2500 fotoX.txt\n         \u2514\u2500 ...\n</code></pre> <p>donde: - Por cada <code>fotoX.jpg</code> en <code>images/train</code>, hay un correspondiente <code>fotoX.txt</code> en <code>labels/train</code> que describe todas las cajas de objetos de esa imagen (una l\u00ednea por objeto). - Lo mismo para la carpeta de validaci\u00f3n val.</p> <p>Puedes encontrar un ejemplo aqui https://universe.roboflow.com/vc/matriculas-espanolas/dataset/1</p>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#21-formato-txt","title":"2.1. Formato txt","text":"<p>El formato TXT que emplea YOLO (tanto v5, v7, v8, etc.) para las etiquetas de detecci\u00f3n de objetos sigue una estructura muy concreta. Cada imagen tiene asociado un fichero .txt con el mismo nombre (salvo la extensi\u00f3n). Dentro del fichero de etiquetas, cada l\u00ednea describe un bounding box (caja delimitadora) de un objeto detectado/anotado en la imagen. La l\u00ednea se compone de:</p> <p>Bash<pre><code>class_id  x_center  y_center  width  height\n</code></pre> todos los valores est\u00e1n normalizados en el rango 0-1 con respecto a las dimensiones de la imagen:</p> <ul> <li>class_id: Identificador de la clase (objeto) en formato entero (0, 1, 2...).</li> <li>Si solo tienes una clase (p. ej. \u201clicense_plate\u201d), ser\u00e1 siempre 0. Si por ejemplo tienes matriculas y faro_izq y faro_der, matricula seria el 0 y faro_izq seria el 1 y el faro_der el 2</li> <li>x_center: Coordenada X del centro de la caja, normalizada (dividida entre el ancho de la imagen).</li> <li>y_center: Coordenada Y del centro de la caja, normalizada (dividida entre la altura de la imagen).</li> <li>width: Ancho de la caja, tambi\u00e9n normalizado (dividido entre el ancho de la imagen).</li> <li>height: Alto de la caja, normalizado (dividido entre la altura de la imagen).</li> </ul> <p>Exemple d'una BB</p> <p>Imagina que tu imagen mide 1280 px de ancho por 720 px de alto, y la caja delimitadora que te interesa va de (x1=600, y1=200) a (x2=750, y2=300).</p> <p>Valores reales:</p> <ul> <li>Ancho de la caja = x2 - x1 = 150 px</li> <li>Alto de la caja = y2 - y1 = 100 px</li> <li>Centro X = (x1 + x2)/2 = (600 + 750)/2 = 675 px</li> <li>Centro Y = (y1 + y2)/2 = (200 + 300)/2 = 250 px</li> </ul> <p>Valores normalizados: - Ancho normalizado = 150 / 1280 \u2248 0.1172 - Alto normalizado = 100 / 720 \u2248 0.1389 - Centro X normalizado = 675 / 1280 \u2248 0.5273 - Centro Y normalizado = 250 / 720 \u2248 0.3472</p> <p>Si <code>class_id=0</code>, la l\u00ednea en tu archivo .txt quedar\u00eda: Text Only<pre><code>0 0.5273 0.3472 0.1172 0.1389\n</code></pre></p> <p>En definitiva, cuando YOLO entrena (o infiere), buscar\u00e1 estos archivos .txt para saber d\u00f3nde est\u00e1n los objetos (en tu caso, las matr\u00edculas) y con qu\u00e9 clase asociarlos. Esto es fundamental para que el modelo aprenda de forma supervisada. </p> <p>Luego, en inferencia o prediccion, el modelo generar\u00e1 sus propias coordenadas de salida, tambi\u00e9n normalmente en un sistema similar, pero te las proveer\u00e1 en escala absoluta o normalizada seg\u00fan la librer\u00eda que est\u00e9s usando.</p>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#22-datayaml","title":"2.2. <code>data.yaml</code>","text":"<p>En el caso de YOLO (especialmente en variantes como YOLOv5 o YOLOv8), el archivo <code>.yaml</code> que se encuentra en la carpeta principal (o en la ra\u00edz del dataset) sirve para describir la configuraci\u00f3n del conjunto de datos.</p> <p>Por lo general, este archivo .yaml contiene informaci\u00f3n como:</p> <ul> <li>Rutas de los datos: </li> <li>La ruta o path donde se ubican las im\u00e1genes de entrenamiento (train).</li> <li>La ruta donde se ubican las im\u00e1genes de validaci\u00f3n (val).</li> <li>(Opcionalmente) la ruta a las im\u00e1genes de prueba (test).</li> <li>Cantidad y nombre de las clases:<ul> <li>Un listado con los nombres de cada clase (por ejemplo, ['perro', 'gato', 'persona']).</li> <li>El n\u00famero total de clases en el dataset.</li> </ul> </li> <li>Par\u00e1metros adicionales (opcional):<ul> <li>Rutas de anotaciones, si se manejan en diferentes carpetas.</li> <li>Configuraciones espec\u00edficas para el entrenamiento (aunque este tipo de info a veces va en otro archivo distinto).</li> <li>Identificadores o campos extras que te permitan integrar el dataset en un flujo de trabajo m\u00e1s complejo.</li> </ul> </li> </ul> <p>Un ejemplo sencillo de un archivo data.yaml (para YOLOv5, por ejemplo) se ver\u00eda as\u00ed:</p> YAML<pre><code>train: ../train/images\nval: ../valid/images\ntest: ../test/images\n\nnc: 3\nnames: ['matricula','faro_izq','faro_der']\n\nroboflow:\n  workspace: vc\n  project: matriculas-espanolas\n  version: 1\n  license: CC BY 4.0\n  url: https://universe.roboflow.com/vc/matriculas-espanolas/dataset/1\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#23-augmentacio-del-dataset","title":"2.3. Augmentaci\u00f3 del Dataset","text":"<p>Como sabemos, una de las partes mas complicadas es la generaci\u00f3n del dataset. Podemos incrementar la cantidad de imagenes de dos modos</p>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#231-aumentacion-en-linea-on-the-fly","title":"2.3.1. Aumentaci\u00f3n en l\u00ednea (on-the-fly)","text":"<p>Este tipo de aumentaci\u00f3n se hace durante el entrenamiento. La mayor\u00eda de implementaciones recientes de YOLO (p. ej., YOLOv5, YOLOv7, YOLOv8) ya incluyen una serie de transformaciones aplicadas autom\u00e1ticamente. </p> <p>Configuraci\u00f3n de hiperpar\u00e1metros</p> <p>En muchos repositorios (como el de YOLOv5), encuentras un archivo de hiperpar\u00e1metros, a menudo llamado <code>hyp.yaml</code> o similar. Dentro de este archivo, puedes ajustar distintos par\u00e1metros de aumentaci\u00f3n como:</p> <ul> <li>hsv_h, hsv_s, hsv_v: Aumentos de tono, saturaci\u00f3n y valor en espacio de color HSV.</li> <li>degrees: Rotaci\u00f3n.</li> <li>translate: Traslaci\u00f3n (movimiento de la imagen).</li> <li>scale: Escalado.</li> <li>shear: Efecto de cizalladura (shear).</li> <li>flipud: Volteo vertical.</li> <li>fliplr: Volteo horizontal.</li> </ul> <p>Por ejemplo, en YOLOv5 (dentro de su repo oficial) existe un archivo hyp.yaml con par\u00e1metros predefinidos. Puedes editarlo para ajustar la intensidad de cada transformaci\u00f3n.</p> YAML<pre><code># Ejemplo (simplificado) hyp.yaml\naugments:\n  degrees: 0.0\n  translate: 0.1\n  scale: 0.9\n  shear: 0.0\n  flipud: 0.0\n  fliplr: 0.5\n  hsv_h: 0.015\n  hsv_s: 0.7\n  hsv_v: 0.4\n</code></pre> <p>Al entrenar tu modelo (por ejemplo <code>python train.py --hyp hyp.yaml</code> ...), YOLO aplicar\u00e1 autom\u00e1ticamente estas transformaciones al cargar cada lote (batch) de im\u00e1genes. </p>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#232-aumentacion-previa-offline","title":"2.3.2. Aumentaci\u00f3n previa (offline)","text":"<p>La idea aqu\u00ed es crear copias aumentadas de las im\u00e1genes (y sus etiquetas correspondientes) antes de iniciar el entrenamiento. Para ello, se pueden usar librer\u00edas como <code>Albumentations</code>, <code>imgaug</code> o las transformaciones de torchvision.</p> <p>Flujo general con Albumentations Instalaci\u00f3n:</p> Bash<pre><code>pip install albumentations\n</code></pre> <p>Configurar un script de aumento:</p> <ul> <li>Definir las transformaciones que deseas aplicar (p. ej., rotaciones, flips, cambios de brillo, etc.).</li> <li>Cargar cada imagen y su anotaci\u00f3n, aplicar la transformaci\u00f3n y luego exportar la imagen aumentada y su nueva anotaci\u00f3n. Tras cada transformaci\u00f3n, es probable que las cajas delimitadoras (bounding boxes) cambien, por lo cual debes guardarlas con el nuevo formato (por ejemplo, en un archivo .txt con formato YOLO).</li> <li>Guardar im\u00e1genes aumentadas: Puedes almacenarlas en carpetas como images/train_aug, por ejemplo, y usar esta carpeta ampliada para entrenar.</li> </ul> <p>Este m\u00e9todo crea nuevos archivos en disco, aumentando expl\u00edcitamente el n\u00famero de im\u00e1genes en tu dataset. Sin embargo, ten en cuenta que esto ocupa m\u00e1s espacio y lleva tiempo adicional para la generaci\u00f3n. A cambio, puede ser beneficioso si quieres realizar un control muy preciso de tus datos o si entrenas con plataformas que no admiten f\u00e1cilmente la aumentaci\u00f3n en l\u00ednea.</p> <p>Para etiquetar un conjunto de im\u00e1genes, podemos utilizar herramientas como:</p> <ul> <li>https://github.com/HumanSignal/labelImg</li> <li>https://www.makesense.ai/</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#3-entrenamiento-del-modelo","title":"3. Entrenamiento del modelo","text":"<p>"},{"location":"U06%20Convergencia%20tecnologica/04_Deteccio_Objectes_YOLO/#4-prediccion-del-modelo","title":"4. Prediccion del modelo","text":"<p>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/","title":"05 PLN Spacy","text":"<p>https://course.spacy.io/es/chapter2</p>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#introduccio-a-spacy","title":"Introducci\u00f3 a Spacy","text":"Python<pre><code># Importa spaCy\nimport spacy\n\n# Crea un objeto nlp vac\u00edo para procesar espa\u00f1ol\nnlp = spacy.blank(\"es\")\n</code></pre> <p><code>nlp</code> se refiere al pipeline de tokenizaci\u00f3n, inicialment blanc per al espanyol.</p> Python<pre><code># Creado al procesar un string de texto con el objeto nlp\ndoc = nlp(\"\u00a1Hola Mundo!\")\n\n# Itera sobre los tokens en un Doc\nfor token in doc:\n    print(token.text)\n</code></pre> <p>\u00a1 Hola Mundo !</p> <p>Cuando procesas un string de texto con el objeto nlp, spaCy crea un objeto Doc - de \"documento\". El Doc te permite acceder a la informaci\u00f3n sobre el texto en una forma estructurada y sin perder informaci\u00f3n.</p> <p>El Doc se comporta como una secuencia normal de Python y te permite iterar sobre sus tokens u obtener un token con su \u00edndice. \u00a1Pero hablaremos de estas cosas m\u00e1s tarde!</p> Python<pre><code>doc = nlp(\"Eso cuesta \u20ac5.\")\n\nprint(\"\u00cdndice:   \", [token.i for token in doc])\nprint(\"Texto:    \", [token.text for token in doc])\n\nprint(\"is_alpha:\", [token.is_alpha for token in doc])\nprint(\"is_punct:\", [token.is_punct for token in doc])\nprint(\"like_num:\", [token.like_num for token in doc])\n</code></pre> <p>mostra: Bash<pre><code>Index:    [0, 1, 2, 3, 4]\nText:     ['Eso', 'cuesta', '\u20ac', '5', '.']\n\nis_alpha: [True, True, False, False, False]\nis_punct: [False, False, False, False, True]\nlike_num: [False, False, False, True, False]\n</code></pre></p> <p>Aqu\u00ed puedes ver algunos de los atributos disponibles de los tokens:</p> <ul> <li><code>i</code> es el \u00edndice del token dentro del documento padre.</li> <li><code>text</code> devuelve el texto del token.</li> <li><code>is_alpha</code>, <code>is_punct</code> y <code>like_num</code> devuelven valores booleanos que indican si un token est\u00e1 compuesto por caracteres alfab\u00e9ticos, si es un signo de puntuaci\u00f3n, o si parece ser un n\u00famero. Por ejemplo, el token \"10\" - uno, cero - o la palabra \"diez\".</li> </ul> <p>Estos atributos tambi\u00e9n se llaman atributos l\u00e9xicos: se refieren a una entrada en el vocabulario y no dependen del contexto del token.</p>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#que-son-los-pipelines-entrenados","title":"Qu\u00e9 son los pipelines entrenados?","text":"<p>Le permiten a spaCy predecir atributos ling\u00fc\u00edsticos en contexto: - Etiquetado gramatical - Dependencias sint\u00e1cticas - Entidades nombradas - Entrenados con textos de ejemplo anotados</p> <p>Pueden ser actualizados con m\u00e1s ejemplos para afinar las predicciones. Algunas de las cosas m\u00e1s interesantes que puedes analizar son espec\u00edficas al contexto: por ejemplo, si una palabra es un verbo o si un span de texto es el nombre de una persona.</p> <p>Los componentes de los pipelines entrenados tienen modelos estad\u00edsticos que le permiten a spaCy hacer predicciones en contexto. Esto normalmente incluye el etiquetado gramatical, dependencias sint\u00e1cticas y entidades nombradas.</p> <p>Los pipelines son entrenados con datasets de textos de ejemplo anotados.</p> <p>Los pipelines pueden ser actualizados con m\u00e1s ejemplos para afinar sus predicciones - por ejemplo, para que se desempe\u00f1e mejor en tus datos espec\u00edficos.</p> <p>spaCy provee varios paquetes de pipelines pre-entrenados que puedes descargar usando el comando spacy download. Por ejemplo, el paquete <code>es_core_news_sm</code> es un pipeline peque\u00f1o de espa\u00f1ol que provee soporte para todas las capacidades centrales y est\u00e1 entrenado usando textos de internet.</p> <p>El m\u00e9todo <code>spacy.load</code> carga el paquete del pipeline por su nombre y devuelve un objeto nlp.</p> <p>El paquete provee los par\u00e1metros binarios que le permiten a spaCy hacer predicciones.</p> <p>Tambi\u00e9n incluye el vocabulario y los metadatos acerca del pipeline y el archivo de configuraci\u00f3n utilizado para entrenarlo. El paquete le dice a spaCy cu\u00e1l clase de lenguaje usar y c\u00f3mo configurar el pipeline de procesamiento.</p> <p>Python<pre><code># $ python -m spacy download es_core_news_sm\nimport spacy\n\nnlp = spacy.load(\"es_core_news_sm\")\n</code></pre> Par\u00e1metros binarios Vocabulario Metadata (lenguaje, pipeline) Archivo de configuraci\u00f3n</p>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#prediccion-de-etiquetas-gramaticales","title":"Predicci\u00f3n de etiquetas gramaticales","text":"Python<pre><code>import spacy\n\n# Carga el pipeline peque\u00f1o de espa\u00f1ol\nnlp = spacy.load(\"es_core_news_sm\")\n\n# Procesa un texto\ndoc = nlp(\"Ella comi\u00f3 pizza\")\n\n# Itera sobre los tokens\nfor token in doc:\n    # Imprime en pantalla el texto y la etiqueta gramatical predicha\n    print(token.text, token.pos_)\n'''\nElla PRON\ncomi\u00f3 VERB\npizza NOUN\n'''\n</code></pre> <p>Revisemos las predicciones del modelo. En este ejemplo estamos usando spaCy para predecir etiquetas gramaticales, es decir, los tipos de palabras en contexto.</p> <p>Primero, cargamos el modelo peque\u00f1o de espa\u00f1ol y recibimos un objeto nlp.</p> <p>Luego, procesamos el texto \"Ella comi\u00f3 pizza\".</p> <p>Por cada token en el doc, podemos imprimir en pantalla el texto y la etiqueta gramatical predicha usando el atributo .pos_.</p> <p>En spaCy, los atributos que devuelven un string normalmente terminan con un guion bajo (_). mientras que atributos sin un guion bajo devuelven un valor ID de tipo entero.</p> <p>Aqu\u00ed el modelo predijo correctamente \"comi\u00f3\" como el verbo y \"pizza\" como el sustantivo.</p> <p>Adem\u00e1s de las etiquetas gramaticales, tambi\u00e9n podemos predecir las relaciones entre las palabras. Por ejemplo, si una palabra es el sujeto o el objeto de una oraci\u00f3n.</p> <p>El atributo <code>.dep_</code> devuelve la etiqueta de la dependencia sint\u00e1ctica predicha.</p> <p>El atributo <code>.head</code> devuelve el token de la cabeza de la dependencia sint\u00e1ctica. Otra forma de concebirlo es como el token \"padre\" al que esta palabra est\u00e1 atada.</p> Python<pre><code>for token in doc:\n    print(token.text, token.pos_, token.dep_, token.head.text)\n'''\nElla PRON nsubj comi\u00f3\ncomi\u00f3 VERB ROOT comi\u00f3\npizza NOUN obj comi\u00f3\n'''\n</code></pre> <p>spaCy usa un esquema de etiquetas est\u00e1ndar para describir dependencias sint\u00e1cticas. Aqu\u00ed ver\u00e1s un ejemplo de algunas etiquetas comunes:</p> <ul> <li>El pronombre \"Ella\" es un sujeto nominal unido al verbo - en este caso, a \"comi\u00f3\".</li> <li>El sustantivo \"pizza\" es un objeto unido al verbo \"comi\u00f3\". Este objeto est\u00e1 siendo comido por el sujeto \"ella\".</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#prediciendo-entidades-nombradas","title":"Prediciendo entidades nombradas","text":"Python<pre><code># Procesa un texto\ndoc = nlp(\n    \"Apple es la marca que m\u00e1s satisfacci\u00f3n genera en EE.UU., \"\n    \"pero el iPhone, fue superado por el Galaxy Note 9\"\n)\n\n# Itera sobre las entidades predichas\nfor ent in doc.ents:\n    # Imprime en pantalla el texto y la etiqueta de la entidad\n    print(ent.text, ent.label_)\n'''\nApple ORG\nEE.UU LOC\niPhone MISC\nGalaxy Note 9 MISC\n'''\n</code></pre> <p>Las entidades nombradas son \"objetos de la vida real\" que tienen un nombre asignado. Por ejemplo, una persona, una organizaci\u00f3n o un pa\u00eds.</p> <p>La propiedad doc.ents te permite acceder a las entidades nombradas predichas por el modelo de reconocimiento de entidades.</p> <p>La propiedad doc.ents devuelve un iterador de objetos Span, as\u00ed que podemos imprimir en pantalla el texto y la etiqueta de la entidad usando el atributo .label_.</p> <p>En este caso, el modelo predijo correctamente \"Apple\" como una organizaci\u00f3n, \"EE.UU\" como un lugar, \"iPhone\" y \"Galaxy Note 9\" con la categor\u00eda miscelanea.</p>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#tip-el-metodo-spacyexplain","title":"Tip: el m\u00e9todo spacy.explain","text":"<p>Obt\u00e9n definiciones r\u00e1pidas de las etiquetas m\u00e1s comunes.</p> <ul> <li><code>spacy.explain(\"LOC\")</code> 'Name of politically or geographically defined location'</li> <li><code>spacy.explain(\"NNP\")</code> 'noun, proper singular'</li> <li><code>spacy.explain(\"MISC\")</code> 'Miscellaneous entities, e.g. events, nationalities, products or works of art'</li> </ul>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#encontrando-patrones-basados-en-reglas","title":"Encontrando patrones basados en reglas","text":"<p>\u00bfPor qu\u00e9 no simplemente expresiones regulares?</p> <p>Buscar patrones en objetos Doc, no solamente en strings Buscar patrones en tokens y atributos de tokens Usa las predicciones del modelo Ejemplo: \"ara\u00f1a\" (verbo) vs. \"ara\u00f1a\" (sustantivo)</p> <p>Compar\u00e1ndolo con las expresiones regulares, el matcher funciona con objetos Doc y Token, en vez de \u00fanicamente strings.</p> <p>Tambi\u00e9n es m\u00e1s flexible: puedes buscar patrones en textos, pero tambi\u00e9n en otros atributos l\u00e9xicos.</p> <p>Inclusive puedes escribir reglas que usen las predicciones del modelo.</p> <p>Por ejemplo, encontrar la palabra \"ara\u00f1a\" \u00fanicamente si es un verbo y no un sustantivo.</p> <p>Los patrones del matcher son listas de diccionarios. Cada diccionario describe un token. Los keys son los nombres de los atributos del token, mapeados a sus valores esperados.</p> <p>En este ejemplo, estamos buscando dos tokens con el texto \"iPhone\" y \"X\".</p> <p>Tambi\u00e9n podemos usar otros atributos de los tokens para encontrar lo que buscamos. Aqu\u00ed estamos buscando dos tokens que en min\u00fasculas son iguales a \"iphone\" y \"x\".</p> <p>Tambi\u00e9n podemos escribir patrones que usen los atributos predichos por el modelo. Aqu\u00ed estamos buscando un token con el lemma \"comprar\", m\u00e1s un sustantivo. El lemma es la forma b\u00e1sica, as\u00ed que este patr\u00f3n encontrar\u00eda frases como \"comprando leche\" o \"compr\u00e9 flores\".</p> Python<pre><code>import spacy\n\n# Importa el Matcher\nfrom spacy.matcher import Matcher\n\n# Carga el modelo y crea un objeto nlp\nnlp = spacy.load(\"es_core_news_sm\")\n\n# Inicializa el matcher con el vocabulario compartido\nmatcher = Matcher(nlp.vocab)\n\n# A\u00f1ade el patr\u00f3n al matcher\npattern = [{\"TEXT\": \"adidas\"}, {\"TEXT\": \"zx\"}]\nmatcher.add(\"ADIDAS_PATTERN\", [pattern])\n\n# Procesa un texto\ndoc = nlp(\"Nuevos dise\u00f1os de zapatillas en la colecci\u00f3n adidas zx\")\n\n# Llama al matcher sobre el doc\nmatches = matcher(doc)\n\n# Llama al matcher sobre el doc\ndoc = nlp(\"Nuevos dise\u00f1os de zapatillas en la colecci\u00f3n adidas zx\")\nmatches = matcher(doc)\n\n# Itera sobre los resultados\nfor match_id, start, end in matches:\n    # Obt\u00e9n el span resultante\n    matched_span = doc[start:end]\n    print(matched_span.text)\n</code></pre> <p>on:</p> <ul> <li><code>match_id</code>: valor del hash del nombre del patr\u00f3n</li> <li><code>start</code>: \u00edndice de inicio del span resultante</li> <li><code>end</code>: \u00edndice del final del span resultante</li> </ul> <p>Cuando llamas el matcher sobre un doc, este devuelve una lista de tuples.</p> <p>Cada tuple consiste de tres valores: el ID del resultado, el \u00edndice de inicio y el \u00edndice del final del span resultante.</p> <p>Esto significa que podemos iterar sobre los resultados y crear un objeto Span: un slice del doc que comienza en el \u00edndice de inicio y termina en el \u00edndice del final.</p> Python<pre><code>pattern = [\n    {\"IS_DIGIT\": True},\n    {\"LOWER\": \"copa\"},\n    {\"LOWER\": \"mundial\"},\n    {\"LOWER\": \"fifa\"},\n    {\"IS_PUNCT\": True}\n]\ndoc = nlp(\"2014 Copa Mundial FIFA: Alemania gan\u00f3!\")\n\n# 2014 Copa Mundial FIFA:\n</code></pre> <p>Aqu\u00ed tenemos un ejemplo de un patr\u00f3n m\u00e1s complejo usando atributos l\u00e9xicos.</p> <p>Estamos buscando cinco tokens:</p> <p>Un token compuesto \u00fanicamente por d\u00edgitos.</p> <p>Tres tokens insensibles a may\u00fasculas/min\u00fasculas para \"copa\", \"mundial\" y \"fifa\".</p> <p>Un token que est\u00e1 compuesto por puntuaci\u00f3n.</p> <p>El patr\u00f3n encuentra los tokens \"2014 Copa Mundial FIFA:\".</p> Python<pre><code>pattern = [\n    {\"LEMMA\": \"comer\", \"POS\": \"VERB\"},\n    {\"POS\": \"NOUN\"}\n]\ndoc = nlp(\"Camila prefer\u00eda comer sushi. Pero ahora est\u00e1 comiendo pasta.\")\n'''\ncomer tacos\ncomiendo pasta\n'''\n</code></pre> <p>Los operadores y cuantificadores te permiten definir con qu\u00e9 frecuencia un token debe ser encontrado. Pueden ser a\u00f1adidos con el key \"OP\".</p> <p>Aqu\u00ed, el operador \"?\" hace que el token determinante sea opcional, as\u00ed que encontrar\u00e1 un token con el lemma \"comprar\", un art\u00edculo opcional y un sustantivo.</p> Python<pre><code>pattern = [\n    {\"LEMMA\": \"comprar\"},\n    {\"POS\": \"DET\", \"OP\": \"?\"},  # opcional: encuentra 0 o 1 ocurrencias\n    {\"POS\": \"NOUN\"}\n]\ndoc = nlp(\"Me compr\u00e9 un smartphone. Ahora le estoy comprando aplicaciones.\")\n'''\ncompr\u00e9 un smartphone\ncomprando aplicaciones\n'''\n</code></pre> Ejemplo Descripci\u00f3n {\"OP\": \"!\"} Negaci\u00f3n: busca 0 veces {\"OP\": \"?\"} Opcional: busca 0 o 1 veces {\"OP\": \"+\"} Busca 1 o m\u00e1s veces {\"OP\": \"*\"} Busca 0 o m\u00e1s veces"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#exercici","title":"Exercici","text":"<p>Probemos el Matcher basado en reglas de spaCy. Vas a usar un ejemplo del ejercicio anterior y escribir\u00e1s un patr\u00f3n que encuentre la frase \u201cadidas zx\u201d en el texto.</p> <p>Importa el Matcher desde spacy.matcher. Inicial\u00edzalo con el vocab compartido del objeto nlp. Crea un patr\u00f3n que encuentre los valores \"TEXT\" de dos tokens: \"adidas\" y \"zx\". Usa el m\u00e9todo matcher.add para a\u00f1adir el patr\u00f3n al matcher. Llama al matcher en el doc y guarda el resultado en la variable matches. Itera sobre los resultados y obt\u00e9n el span resultante desde el \u00edndice start hasta el \u00edndice end.</p> Python<pre><code>import spacy\n\n# Importa el Matcher\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load(\"es_core_news_sm\")\ndoc = nlp(\n    \"Los Ol\u00edmpicos de Tokio 2020 son la inspiraci\u00f3n para la nueva \"\n    \"colecci\u00f3n de zapatillas adidas zx.\"\n)\n\n# Inicializa el matcher con el vocabulario compartido\nmatcher = Matcher(nlp.vocab)\n\n# Crea un patr\u00f3n que encuentre dos tokens: \"adidas\" y \"zx\"\npattern = [{\"TEXT\": \"adidas\"}, {\"TEXT\": \"zx\"}]\n\n# A\u00f1ade el patr\u00f3n al matcher\nmatcher.add(\"ADIDAS_ZX_PATTERN\", [pattern])\n\n# Usa al matcher sobre el doc\nmatches = matcher(doc)\nprint(\"Resultados:\", [doc[start:end].text for match_id, start, end in matches])\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/05_PLN_Spacy/#exercici_1","title":"Exercici","text":"<p>Escribe un patr\u00f3n que \u00fanicamente encuentre menciones de las versiones completas de iOS: \u201ciOS 7\u201d, \u201ciOS 11\u201d and \u201ciOS 10\u201d.</p> Text Only<pre><code>import spacy\nfrom spacy.matcher import Matcher\n\u200b\nnlp = spacy.load(\"es_core_news_sm\")\nmatcher = Matcher(nlp.vocab)\n\u200b\n\u200b\ndoc = nlp(\n    \"Despu\u00e9s de hacer la actualizaci\u00f3n de iOS no notar\u00e1s un redise\u00f1o \"\n    \"radical del sistema: no se compara con los cambios est\u00e9ticos que \"\n    \"tuvimos con el iOS 7. La mayor\u00eda de las funcionalidades del iOS 11 \"\n    \"siguen iguales en el iOS 10.\"\n)\n\u200b\n# Escribe un patr\u00f3n para las versiones de iOS enteras\n# (\"iOS 7\", \"iOS 11\", \"iOS 10\")\npattern = [{\"TEXT\": \"iOS\"}, {\"IS_DIGIT\": True}]\n\u200b\n# A\u00f1ade el patr\u00f3n al matcher y usa el matcher sobre el documento\nmatcher.add(\"IOS_VERSION_PATTERN\", [pattern])\nmatches = matcher(doc)\nprint(\"Total de resultados encontrados:\", len(matches))\n\u200b\n# Itera sobre los resultados e imprime el texto del span\nfor match_id, start, end in matches:\n    print(\"Resultado encontrado:\", doc[start:end].text)\n</code></pre> <p>Escribe un patr\u00f3n que \u00fanicamente encuentre formas de \u201cdescargar\u201d (tokens con el lemma \u201cdescargar\u201d) seguido por un token que tenga la etiqueta gramatical \"PROPN\" (proper noun).</p> Python<pre><code>import spacy\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load(\"es_core_news_sm\")\nmatcher = Matcher(nlp.vocab)\n\ndoc = nlp(\n    \"descargu\u00e9 Fortnite en mi computadora, pero no puedo abrir el juego. \"\n    \"Ayuda? Cuando estaba descargando Minecraft, consegu\u00ed la versi\u00f3n de Windows \"\n    \"donde tiene una carpeta '.zip' y us\u00e9 el programa por defecto para \"\n    \"descomprimirlo\u2026as\u00ed que tambi\u00e9n tengo que descargar Winzip?\"\n)\n\n# Escribe un patr\u00f3n que encuentre una forma de \"descargar\" m\u00e1s un nombre propio\npattern = [{\"LEMMA\": \"descargar\"}, {\"POS\": \"PROPN\"}]\n\n# A\u00f1ade el patr\u00f3n al matcher y usa el matcher sobre el documento\nmatcher.add(\"DOWNLOAD_THINGS_PATTERN\", [pattern])\nmatches = matcher(doc)\nprint(\"Total de resultados encontrados:\", len(matches))\n\n# Itera sobre los resultados e imprime el texto del span\nfor match_id, start, end in matches:\n    print(\"Resultado encontrado:\", doc[start:end].text)\n\n'''\nTotal de resultados encontrados: 3\nResultado encontrado: descargu\u00e9 Fortnite\nResultado encontrado: descargando Minecraft\nResultado encontrado: descargar Winzip\n'''\n</code></pre> <p>Escribe un patr\u00f3n que encuentre un sustantivo \"NOUN\" seguido de uno o dos adjetivos \"ADJ\"(un adjetivo y un adjetivo opcional).</p> Python<pre><code>import spacy\nfrom spacy.matcher import Matcher\n\u200b\nnlp = spacy.load(\"es_core_news_sm\")\nmatcher = Matcher(nlp.vocab)\n\u200b\ndoc = nlp(\n    \"El gigante tecnol\u00f3gico IBM est\u00e1 ofreciendo lecciones virtuales \"\n    \"sobre tecnolog\u00edas avanzadas gratuitas en espa\u00f1ol.\"\n)\n\u200b\n# Escribe un patr\u00f3n para un sustantivo m\u00e1s uno o dos adjetivos\npattern = [{\"POS\": \"NOUN\"}, {\"POS\": \"ADJ\"}, {\"POS\": \"ADJ\", \"OP\": \"?\"}]\n\u200b\n# A\u00f1ade el patr\u00f3n al matcher y usa el matcher sobre el documento\nmatcher.add(\"NOUN_ADJ_PATTERN\", [pattern])\nmatches = matcher(doc)\nprint(\"Total de resultados encontrados:\", len(matches))\n\u200b\n# Itera sobre los resultados e imprime el texto del span\nfor match_id, start, end in matches:\n    print(\"Resultado encontrado:\", doc[start:end].text)\n\n'''\nTotal de resultados encontrados: 3\nResultado encontrado: gigante tecnol\u00f3gico\nResultado encontrado: lecciones virtuales\nResultado encontrado: tecnolog\u00edas avanzadas\n'''\n</code></pre>"},{"location":"U06%20Convergencia%20tecnologica/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <ul> <li>Series temporals</li> <li>Computer Vision</li> <li>https://www.geeksforgeeks.org/python-pillow-tutorial/?ref=lbp</li> <li>https://www.tutorialspoint.com/how-to-crop-and-save-the-detected-faces-in-opencv-python</li> <li>https://www.campusmvp.es/recursos/post/reconocimiento-y-clasificacion-de-imagenes-con-deep-learning.aspx</li> <li>https://docs.opencv.org/4.9.0/d6/de2/tutorial_py_table_of_contents_ml.html</li> <li>Detecci\u00f3 de text. </li> <li>PLN</li> <li>Spacy:<ul> <li>Detecci\u00f3 de plagis</li> <li>Enmascarar Noms personals i DNI</li> <li></li> </ul> </li> <li>App de passar llista o similar</li> <li>App per a buscar en local totes les fotos on aparega una persona, un objecte, ...</li> </ul>"},{"location":"U07%20Automatitzaci%C3%B3%20Industrial/Continguts/","title":"Continguts","text":"<p>S'estudiar\u00e0 en aquesta unitat:</p> <ul> <li>Apps involucrades en automatitzaci\u00f3</li> <li>Jetracer/ Amazon Deepracer</li> </ul>"},{"location":"info/guia_didactica/","title":"Guia did\u00e0ctica","text":""},{"location":"info/guia_didactica/#1-introduccio","title":"1. Introducci\u00f3","text":"<p>El curs d'especialitzaci\u00f3 Intel\u00b7lig\u00e8ncia Artificial i Big Data  est\u00e0 dividit en 5 m\u00f2duls professionals com unitats coherents de formaci\u00f3, necessaris per obtenir el t\u00edtol. Aquests m\u00f2duls s\u00f3n:</p> <ul> <li>5071 Models d'Intel\u00b7lig\u00e8ncia Artificial</li> <li>5072 Sistemes d'Aprenentatge Autom\u00e0tic.</li> <li>5073 Programaci\u00f3 d'Intel\u00b7lig\u00e8ncia Artificial.</li> <li>5074 Sistemes de Big Data.</li> <li>5075 Big Data Aplicat.</li> </ul> <p>La duraci\u00f3 establerta per aquest curs d'especialitzaci\u00f3 \u00e9s de 600 hores.</p>"},{"location":"info/guia_didactica/#2-presentacio-del-modul","title":"2. Presentaci\u00f3 del m\u00f2dul","text":"<p>Un dels m\u00f2duls inclosos en aquest cicle formatiu \u00e9s el de ** Programaci\u00f3 d'Intel\u00b7lig\u00e8ncia Artificial, que d\u00f3na estructura a la present proposta de programaci\u00f3 did\u00e0ctica que est\u00e0 regulada pel Reial Decret del T\u00edtol 279/2021 de 20 d'abril**, i que presenta les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>T\u00e9 una duraci\u00f3 aproximada de 210 hores</li> <li>S\u2019imparteix amb una freq\u00fc\u00e8ncia de 7 hores per setmana, amb una durada de 30 setmanes de classe.</li> <li>Cal dir que aquesta \u00e9s una programaci\u00f3 did\u00e0ctica oberta, flexible i adaptable, de manera que es poden afegir, llevar o modificar les unitats did\u00e0ctiques que la componen adaptant-les al temps, a l\u2019entorn, als recursos disponibles i a les necessitats.</li> </ul>"},{"location":"info/guia_didactica/#21-objectius-generals","title":"2.1. Objectius generals","text":"<p>La formaci\u00f3 del m\u00f2dul, d'acord amb el Reial Decret del T\u00edtol, contribueix a assolir els objectius generals a), b), c), d), e), j), k), m), n), \u00f1), o) y p), aix\u00ed com les compet\u00e8ncies professionals , personals i socials a), b), c), d), e), j), k), m), n), \u00f1), o), p), q), r) y s) del curs de especialitzaci\u00f3.</p> <p>Els objectius generals s\u00f3n:</p> <ul> <li>(a) Caracteritzar les interaccions en els negocis de les empreses i organitzacions per aplicar sistemes d'intel\u00b7lig\u00e8ncia artificial que incrementi la productivitat.</li> <li>(b) Seleccionar dades relevants de l'empresa/organitzaci\u00f3 per a desenvolupar e implementar solucions que faciliten la presa de decisions.</li> <li>(c) Aplicar t\u00e8cniques de tractament de dades per gestionar la transformaci\u00f3 digital a les organitzacions.</li> <li>(d) Caracteritzar sistemes de la Intel\u00b7lig\u00e8ncia Artificial per implantar funcionalitats, processos i sistemes de decisions.</li> <li>(e) Interpretar plans de canvi i millora dels processos de les empreses i organitzacions per a la seva gesti\u00f3 amb Intel\u00b7lig\u00e8ncia artificial.</li> <li>(j) Determinar la documentaci\u00f3 t\u00e8cnica i normativa vigent dels procediments de protecci\u00f3 de dades per executar el sistema d'explotaci\u00f3 de dades complint amb els principis legals i \u00e8tics.</li> <li>(k) Determinar la soluci\u00f3 d'Intel\u00b7lig\u00e8ncia Artificial i Big Data per configurar les eines i els llenguatges espec\u00edfics.</li> <li>(m) Analitzar i utilitzar els recursos i les oportunitats d'aprenentatge relacionats amb l'evoluci\u00f3 cient\u00edfica, tecnol\u00f2gica i organitzativa del sector i les tecnologies de la informaci\u00f3 i la comunicaci\u00f3, per mantenir l'esperit d'actualitzaci\u00f3 i adaptar-se a noves situacions laborals i personals.</li> <li>(n) Desenvolupar la creativitat i l'esperit d'innovaci\u00f3 per respondre als reptes que es presenten en els processos i l'organitzaci\u00f3 del treball i de la vida personal.</li> <li>(\u00f1) Avaluar situacions de prevenci\u00f3 de riscos laborals i de protecci\u00f3 ambiental, proposant i aplicant mesures de prevenci\u00f3 personal i col\u00b7lectiva, d'acord amb la normativa aplicable en els processos de treball, per garantir entorns segurs.</li> <li>(o) Identificar i proposar les accions professionals necess\u00e0ries, per donar resposta a l'accessibilitat universal, al \u00abdisseny per a totes les persones\u00bb, aix\u00ed com per evitar possibles biaixos de g\u00e8nere en el desenvolupament i les aplicacions d'Intel\u00b7lig\u00e8ncia Artificial i Big Data.</li> <li>(p) Identificar i aplicar par\u00e0metres de qualitat en els treballs i les activitats realitzats en el proc\u00e9s d'aprenentatge, per valorar la cultura de l'avaluaci\u00f3 i de la qualitat i ser capa\u00e7os de supervisar i millorar procediments de gesti\u00f3 de qualitat.</li> </ul>"},{"location":"info/guia_didactica/#22-competencies-professionals","title":"2.2. Compet\u00e8ncies professionals","text":"<p>D'acord amb el Reial Decret del T\u00edtol, la formaci\u00f3 d'aquest m\u00f2dul contribueix a obtenir les compet\u00e8ncies professionals, personals i socials a), b), c), d), e), j), k), m), n), \u00f1), o), p), q), r) y s) del curs de especialitzaci\u00f3.</p> <ul> <li>(a) Aplicar sistemes d'intel\u00b7lig\u00e8ncia artificial per identificar noves formes deinteracci\u00f3 en els negocis que millorin la productivitat.</li> <li>(b) Desenvolupar i implementar sistemes d'intel\u00b7lig\u00e8ncia artificial que faciliten la presa de decisions \u00e0gils dins d'un negoci gestionant i explotant dades massives.</li> <li>(c) Gestionar la transformaci\u00f3 digital necess\u00e0ria a les organitzacions per a la consecuci\u00f3 de l'efici\u00e8ncia empresarial mitjan\u00e7ant el tractament de dades.</li> <li>(d) Aplicar Intel\u00b7lig\u00e8ncia Artificial en funcionalitats, processos i sistemes de decisi\u00f3 empresarials.</li> <li>(e) Gestionar els diferents tipus d'intel\u00b7lig\u00e8ncia artificial per a la consecuci\u00f3 de transformaci\u00f3 i canvi a les empreses.</li> <li>(j) Executar el sistema d'explotaci\u00f3 de dades segons les necessitats d'\u00fas i les condicions de seguretat establertes assegurant el compliment dels principis legals i \u00e8tics.</li> <li>(k) Configurar les eines que es fan servir per construir solucions Big Data i d'Intel\u00b7lig\u00e8ncia Artificial.</li> <li>(m) Complir la legislaci\u00f3 vigent que regula la normativa dels mitjans de comunicaci\u00f3 audiovisual i de l'accessibilitat universal.</li> <li>(n) Adaptar-se a les noves situacions laborals, mantenint actualitzats els coneixements cient\u00edfics, t\u00e8cnics i tecnol\u00f2gics relatius al seu entorn professional, gestionant-ne la formaci\u00f3 i els recursos existents en l'aprenentatge al llarg de la vida i utilitzant les tecnologies de la informaci\u00f3 i la comunicaci\u00f3.</li> <li>(\u00f1) Resoldre situacions, problemes o conting\u00e8ncies amb iniciativa i autonomia en l'\u00e0mbit de la seva compet\u00e8ncia, amb creativitat, innovaci\u00f3 i esperit de millora en el treball personal i en el dels membres de l'equip.</li> <li>(o) Organitzar i coordinar equips de treball amb responsabilitat, supervisant-ne el desenvolupament, mantenint relacions fluides i assumint el lideratge, aix\u00ed com aportant solucions als conflictes grupals que es presenten.</li> <li>(p) Comunicar-se amb els seus iguals, superiors, clientela i persones sota la seva responsabilitat, utilitzant vies eficaces de comunicaci\u00f3, transmetent la informaci\u00f3 o coneixements adequats i respectant l'autonomia i la compet\u00e8ncia de les persones que intervenen en l'\u00e0mbit del seu treball.</li> <li>(q) Generar entorns segurs en el desenvolupament de la feina i el del seu equip, supervisant i aplicant els procediments de prevenci\u00f3 de riscos laborals i ambientals, d'acord amb all\u00f2 establert per la normativa i els objectius de l'empresa.</li> <li>(r) Supervisar i aplicar procediments de gesti\u00f3 de qualitat, d'accessibilitat universal i de disseny per a totes les persones, en les activitats professionals incloses en els processos de producci\u00f3 o prestaci\u00f3 de serveis.</li> <li>(s) Exercir els seus drets i complir les obligacions derivades de la seva activitat professional, d'acord amb all\u00f2 establert a la legislaci\u00f3 vigent, participant activament en la vida econ\u00f2mica, social i cultural.</li> </ul>"},{"location":"info/guia_didactica/#23-resultats-daprenentatge","title":"2.3. Resultats d'aprenentatge","text":"<p>D'acord amb la normativa vigent, els objectius espec\u00edfics estan expressats en termes de resultats d'aprenentatge. Estos son:</p> <ol> <li>Caracteritza llenguatges de programaci\u00f3 valorant la seva idone\u00eftat en el desenvolupament d'Intel\u00b7lig\u00e8ncia Artificial.</li> <li>Desenvolupa aplicacions d'intel\u00b7lig\u00e8ncia artifcial utilitzant entorns de modelatge.</li> <li>Avalua les millores als negocis integrant converg\u00e8ncia tecnol\u00f2gica.</li> <li>Avalua models d'automatitzaci\u00f3 industrial i de negoci relacionant-los amb els resultats esperats per les empreses.</li> </ol>"},{"location":"info/guia_didactica/#24-criteris-davaluacio","title":"2.4. Criteris d'avaluaci\u00f3","text":"<p>Els criteris d'avaluaci\u00f3 de cada resultat d'aprenentatge series:</p> <ol> <li> <p>Caracteritza llenguatges de programaci\u00f3 valorant la seva idone\u00eftat en el desenvolupament d'Intel\u00b7lig\u00e8ncia Artificial.</p> <ul> <li>a) S'ha identificat l'estructura d'un programa inform\u00e0tic.</li> <li>b) S'han valorat caracter\u00edstiques en els llenguatges de programaci\u00f3 adequades al tipus d'aplicacions que cal implementar.</li> <li>c) S'ha determinat el llenguatge de programaci\u00f3 m\u00e9s apropiat per al desenvolupament de l'aplicaci\u00f3.</li> <li>d) S'han valorat caracter\u00edstiques dels llenguatges de programaci\u00f3 per al desenvolupament d'intel\u00b7lig\u00e8ncia Artificial.</li> <li>e) S'ha determinat el llenguatge de programaci\u00f3 m\u00e9s apropiat per al desenvolupament de laplicaci\u00f3 dIntel\u00b7lig\u00e8ncia Artificial.</li> <li>f) S'han caracteritzat llenguatges de marcatge destacant la informaci\u00f3 que contenen les etiquetes.</li> </ul> </li> <li> <p>Desenvolupa aplicacions d'intel\u00b7lig\u00e8ncia artifcial utilitzant entorns de modelatge.</p> <ul> <li>a) S'han avaluat plataformes d'intel\u00b7lig\u00e8ncia artificial.</li> <li>b) S'han caracteritzat entorns de model d'aplicacions d'intel\u00b7lig\u00e8ncia artificial.</li> <li>c) S'ha definit el model que es vol implementar segons el problema plantejat.</li> <li>d) S'ha implementat l'aplicaci\u00f3 Intel\u00b7lig\u00e8ncia Artifcial.</li> <li>e) S'han avaluat els resultats obtinguts.</li> </ul> </li> <li> <p>Avalua les millores als negocis integrant converg\u00e8ncia tecnol\u00f2gica.</p> <ul> <li>a) S'han identificat els avantatges que ofereix unificar processos, serveis, eines, m\u00e8todes i sectors.</li> <li>b) S'han identificat sistemes que faciliten la connexi\u00f3 tecnol\u00f2gica.</li> <li>c) S'han avaluat les caracter\u00edstiques dels sistemes esmentats.</li> <li>d) S'ha avaluat com la converg\u00e8ncia tecnol\u00f2gica aporta seguretat als negocis.</li> <li>e) S'ha avaluat la millora en la capacitat de presa de decisions estrat\u00e8giques a un negoci connectat.</li> </ul> </li> <li> <p>Avalua models d'automatitzaci\u00f3 industrial i de negoci relacionant-los amb els resultats esperats per les empreses.</p> <ul> <li>a) S'han identificat les noves estrat\u00e8gies corporatives i models de negoci a les empreses.</li> <li>b) S'ha definit la relaci\u00f3 entre empreses i clients i el seu efecte en la manera com les empreses organitzen i gestionen els seus actius i recursos.</li> <li>c) S'han avaluat models d'automatitzaci\u00f3 per als requeriments nous industrials i de negoci.</li> <li>d) S'ha avaluat la conveni\u00e8ncia de cada model per aconseguir els resultats esperats per les empreses.</li> </ul> </li> </ol>"},{"location":"info/guia_didactica/#3-continguts-del-modul-unitats-didactiques","title":"3. Continguts del m\u00f2dul. Unitats did\u00e0ctiques","text":"<p>Els continguts del m\u00f2dul s'organitzen de la seguent forma:</p> <ul> <li> <p>UD1: Introducci\u00f3 a la programaci\u00f3.</p> <ul> <li>Llenguatge de programaci\u00f3</li> <li>Algorisme</li> <li>Compilat vs Implementat</li> <li>Comparativa de llenguatges</li> </ul> </li> <li> <p>UD2: Python</p> <ul> <li>Entorns de desenvolupamnet. Conda/Anaconda</li> <li>Creaci\u00f3 de projectes. Entorns virtuals</li> <li>Tipus b\u00e0sics. Variables</li> <li>Operadors</li> <li>Estructures de control</li> <li>Funcions<ul> <li>Del sistema</li> <li>llibrerires</li> <li>Definici\u00f3 i crida. Par\u00e0metres</li> </ul> </li> <li>Estructures de dades: tupla, llista i diccionari</li> <li>POO</li> <li>Projecte inicial: dibuixant figures</li> </ul> </li> <li> <p>UD3: Python aplicat al BD i IA</p> <ul> <li>Numpy</li> <li>Matplotlib</li> <li>Seaborn</li> <li>Keras</li> <li>Pandas</li> </ul> </li> <li> <p>UD4: Programaci\u00f3 d'aplicacions</p> <ul> <li>Frontend. Programaci\u00f3 amb <code>Flet</code><ul> <li>Calculadora o To do App</li> </ul> </li> <li>Docker. Contenidors amb BBDD (MONGO)<ul> <li>EXPORTAR DATASET A BBDD</li> </ul> </li> <li>API-Rest. Peticions HTTP.</li> <li>Backend. Programaci\u00f3 amb <code>Flask</code></li> <li>Projecte integrador<ul> <li>APP client servidor amb model preentrenat amb validaci\u00f3 contra base de dades i nombre de peticions limitades</li> </ul> </li> </ul> </li> <li> <p>UD5: Programaci\u00f3 d'aplicacions d'IA</p> <ul> <li>Azure Cognitive Services</li> <li>AWS</li> <li>IBM Watson</li> <li>Construcci\u00f3 d'una aplicaci\u00f3 amb models preentrenats i accessibles a trav\u00e9s de serveis</li> </ul> </li> <li> <p>UD6: Converg\u00e8ncia tecnol\u00f2gica</p> <ul> <li>Series temporals</li> <li>Computer Vision</li> <li>IA aplicat al lleguatge.</li> <li>App de passar llista o similar</li> </ul> </li> <li> <p>UD7: Automatitzaci\u00f3 industrial</p> <ul> <li>Projectes</li> </ul> </li> </ul>"},{"location":"info/guia_didactica/#4-temporalitzacio-de-continguts","title":"4. Temporalitzaci\u00f3 de continguts","text":"<p>La temporalitzaci\u00f3 de continguts prevista ser\u00e0 la seg\u00fcemt:</p> Avaluaci\u00f3 Unitats Did\u00e0ctiques 1a Avaluaci\u00f3 - UD 1. Introducci\u00f3 a la programaci\u00f3. - UD 2. Python - UD 3. Python aplicat al BD i IA - UD 4. Programaci\u00f3 d'aplicacions - UD 5. Programaci\u00f3 d'aplicacions d'IA 2a Avaluaci\u00f3 - UD 5. Programaci\u00f3 d'aplicacions d'IA - UD 6. Converg\u00e8ncia tecnol\u00f2gica (projectes) - UD 7. Automatitzaci\u00f3 industrial (projectes)"},{"location":"info/guia_didactica/#5-aspectes-metodologics","title":"5. Aspectes metodol\u00f2gics","text":""},{"location":"info/guia_didactica/#51-material-didactic","title":"5.1. Material Did\u00e0ctic","text":"<p>El material did\u00e0ctic del m\u00f2dul pot ressumir-se en el seg\u00fcent:</p> <ul> <li>Apunts proporcionats pel professor en format web.</li> <li>Textos d'ampliaci\u00f3 i enlla\u00e7os a articles i documentaci\u00f3 oficial relacionats amb cada unitat.</li> <li>Pr\u00e0ctiques i exercicis per refor\u00e7ar el que s'ha exposat als apunts.</li> </ul> <p>Tot aquest material s'oferir\u00e0 a trav\u00e9s de l'aula virtual durant el desenvolupament de cada unitat.</p> <p>A m\u00e9s, dins l'aula virtual, disposarem d'un f\u00f2rum general per comentar aspectes globals del m\u00f2dul, i un f\u00f2rum per cada unitat did\u00e0ctica, per tal de resoldre dubtes i tractar aspectes relacionats amb la unitat.</p>"},{"location":"info/guia_didactica/#52-recursos","title":"5.2. Recursos","text":"<p>El programari a utilitzar ser\u00e0 principalment lliure, i es donaran instruccions en cada unitat per a la seua desc\u00e0rrega i instal\u00b7laci\u00f3. A grans trets, el programari a utilitzar ser\u00e0:</p> <ul> <li>Sistema operatiu d'elecci\u00f3 pr\u00f2pia. Com a sistema operatiu de base a l'aula fem servir Linux Mint, tot i que per al modul, per\u00f2 l'alumne pot utilitzar qualsevol altre sistema operatiu, ja que tot el programari amb qu\u00e8 treballarem \u00e9s multiplataforma.</li> <li>Visual Studio Code com a editor de codi, que suporta diferents llenguatges, i \u00e9s bastant ampliable amb extensions. Tot i que ser\u00e0 l'editor de refer\u00e8ncia, es pot fer \u00fas de PyCharm, Eclipse, InteliJ o qualsevol altre editor/IDE.</li> <li>Python3, com a llenguatge de programaci\u00f3,</li> <li>Flet (Flutter + Python3), com a framework per a aplicacions multiplataforma amb interf\u00edcie d'usuari per a m\u00f2bil, web o escriptori.</li> <li>Flask per al desenvolupament de la part servidora.</li> <li>Eines al n\u00favol tals com Azure, AWS o IBM Watson.</li> </ul>"},{"location":"info/guia_didactica/#53-eines-web-i-collaboratives","title":"5.3. Eines web i col\u00b7laboratives","text":"<p>A banda del programari esmentat anteriorment, tamb\u00e9 s'utilitzaran el seg\u00fcent portals web i plataformes de treball col\u00b7laboratiu:</p> <ul> <li>Portal Aules: Com a aula virtual, i que articular\u00e0 el funcionament del m\u00f2dul. Ser\u00e0 aci on s'ubiquen els diferents recursos, f\u00f2rums, etc.</li> <li>Github: En alguns projectes en grup, ser\u00e0 de gran ajuda treballar amb sistemes de control de versions distribuits, com Github, de manera que puguen realitzar desenvolupaments de forma col\u00b7laborativa. Podeu optar per fer l'entrega de treballs a trav\u00e9s del vostre repositori Github.</li> <li>Google Colab: Vos proporcionarem algun Jupyter Nettbook dir\u00e8ctament al nuvol per a que pugau treballar amb ell.</li> </ul>"},{"location":"info/guia_didactica/#54-metodologia","title":"5.4. Metodologia","text":"<p>Per a aquest curs, anem a buscar una forma el m\u00e9s pr\u00e0ctica possible d'abordar les classes. </p> <p>Segons aquestes premisses, la metodolog\u00eda utilitzada al m\u00f2dul es regir\u00e0 per les seg\u00fcents pautes:</p> <ul> <li>En iniciar cada unitat did\u00e0tica es realitzar\u00e0 una presentaci\u00f3 inicial d'aquesta, dels conceptes b\u00e0sics, i de qu\u00e8 sereu capa\u00e7os de fer en finalitzar-la.</li> <li>Disposareu de material per a la seua lectura comprensiva i estudi, aix\u00ed com de documentaci\u00f3 addicional que es considere interessant,</li> <li>Disposareu d'exercicis i pr\u00e0ctiques que acompanyen la teor\u00eda de la unitat i que ens ajudaran a entendre els conceptes de la unitat, fonamentant-se en coneixements previs, facilitant aix\u00ed l'aprenentatge per descobriment, significatiu i deductiu.</li> <li>Les session a l'aula tindran un car\u00e0cter fonamentalment pr\u00e0ctic, i s'aprofitaran exemples i casos pr\u00e0ctics per exposar els principals conceptes.</li> <li>Es fomentar\u00e0 la realitzaci\u00f3 de projectes i treballs en equip.</li> </ul>"},{"location":"info/guia_didactica/#6-avaluacio","title":"6. Avaluaci\u00f3","text":"<p>L'avaluaci\u00f3 ser\u00e0 continuada, i consistir\u00e0 en el seguiment del treball que aneu realitzant. Cada unitat tindr\u00e0 una qualificaci\u00f3, fruit del treball de activitats i pr\u00e0ctiques entregables.</p> <p>En finalitzar cada avaluaci\u00f3 hi haur\u00e0 tamb\u00e9 una prova de validaci\u00f3 de coneixements (examen), que caldr\u00e0 aprovar per considerar v\u00e0lida la qualificaci\u00f3 de l'avaluaci\u00f3 continuada. La nota final ser\u00e0 la nota ponderada de la qualificaci\u00f3 del les diferents unitats, en funci\u00f3 del temps invertit en cadascuna, i el pes considerat per a cada tasca. Es perd el dret a l'avaluaci\u00f3 continuada en faltar a m\u00e9s d'un 15% de les classes.</p> <p>En cas de no superar l'avaluaci\u00f3 continuada, es disposar\u00e0 d'una convocat\u00f2ria final ordin\u00e0ria. En este cas, la nota vindr\u00e0 donada al 100% per la nota de la prova corresponent.</p> <p>Per a la correcci\u00f3 de les pr\u00e0ctiques i projectes s'utilitzaran r\u00fabriques.</p>"}]}